// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PaperPost.pb.h"

@implementation PaperPostRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PaperPostRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    [GenericRoot registerAllExtensions:registry];
    [PaperTemplateRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PaperPost ()
@property int32_t id;
@property (retain) User* user;
@property (retain) PaperTemplate* paperTemplate;
@property (retain) Location* location;
@property (retain) NSString* content;
@property (retain) PBAppendableArray * paperPostMediasArray;
@property (retain) Company* company;
@property (retain) NSString* createDate;
@end

@implementation PaperPost

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasPaperTemplate {
  return !!hasPaperTemplate_;
}
- (void) setHasPaperTemplate:(BOOL) value_ {
  hasPaperTemplate_ = !!value_;
}
@synthesize paperTemplate;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value_ {
  hasLocation_ = !!value_;
}
@synthesize location;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
@synthesize paperPostMediasArray;
@dynamic paperPostMedias;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (void) dealloc {
  self.user = nil;
  self.paperTemplate = nil;
  self.location = nil;
  self.content = nil;
  self.paperPostMediasArray = nil;
  self.company = nil;
  self.createDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.user = [User defaultInstance];
    self.paperTemplate = [PaperTemplate defaultInstance];
    self.location = [Location defaultInstance];
    self.content = @"";
    self.company = [Company defaultInstance];
    self.createDate = @"";
  }
  return self;
}
static PaperPost* defaultPaperPostInstance = nil;
+ (void) initialize {
  if (self == [PaperPost class]) {
    defaultPaperPostInstance = [[PaperPost alloc] init];
  }
}
+ (PaperPost*) defaultInstance {
  return defaultPaperPostInstance;
}
- (PaperPost*) defaultInstance {
  return defaultPaperPostInstance;
}
- (PBArray *)paperPostMedias {
  return paperPostMediasArray;
}
- (PaperPostMedia*)paperPostMediasAtIndex:(NSUInteger)index {
  return [paperPostMediasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasUser) {
    return NO;
  }
  if (!self.hasPaperTemplate) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  if (!self.paperTemplate.isInitialized) {
    return NO;
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  for (PaperPostMedia* element in self.paperPostMedias) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasPaperTemplate) {
    [output writeMessage:3 value:self.paperTemplate];
  }
  if (self.hasLocation) {
    [output writeMessage:4 value:self.location];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  for (PaperPostMedia *element in self.paperPostMediasArray) {
    [output writeMessage:6 value:element];
  }
  if (self.hasCompany) {
    [output writeMessage:7 value:self.company];
  }
  if (self.hasCreateDate) {
    [output writeString:8 value:self.createDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  if (self.hasPaperTemplate) {
    size_ += computeMessageSize(3, self.paperTemplate);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(4, self.location);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  for (PaperPostMedia *element in self.paperPostMediasArray) {
    size_ += computeMessageSize(6, element);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(7, self.company);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(8, self.createDate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PaperPost*) parseFromData:(NSData*) data {
  return (PaperPost*)[[[PaperPost builder] mergeFromData:data] build];
}
+ (PaperPost*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPost*)[[[PaperPost builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PaperPost*) parseFromInputStream:(NSInputStream*) input {
  return (PaperPost*)[[[PaperPost builder] mergeFromInputStream:input] build];
}
+ (PaperPost*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPost*)[[[PaperPost builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperPost*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PaperPost*)[[[PaperPost builder] mergeFromCodedInputStream:input] build];
}
+ (PaperPost*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPost*)[[[PaperPost builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperPost_Builder*) builder {
  return [[[PaperPost_Builder alloc] init] autorelease];
}
+ (PaperPost_Builder*) builderWithPrototype:(PaperPost*) prototype {
  return [[PaperPost builder] mergeFrom:prototype];
}
- (PaperPost_Builder*) builder {
  return [PaperPost builder];
}
- (PaperPost_Builder*) toBuilder {
  return [PaperPost builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPaperTemplate) {
    [output appendFormat:@"%@%@ {\n", indent, @"paperTemplate"];
    [self.paperTemplate writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  for (PaperPostMedia* element in self.paperPostMediasArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"paperPostMedias"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PaperPost class]]) {
    return NO;
  }
  PaperPost *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasPaperTemplate == otherMessage.hasPaperTemplate &&
      (!self.hasPaperTemplate || [self.paperTemplate isEqual:otherMessage.paperTemplate]) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.paperPostMediasArray isEqualToArray:otherMessage.paperPostMediasArray] &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasPaperTemplate) {
    hashCode = hashCode * 31 + [self.paperTemplate hash];
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  for (PaperPostMedia* element in self.paperPostMediasArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PaperPost_Builder()
@property (retain) PaperPost* result;
@end

@implementation PaperPost_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PaperPost alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PaperPost_Builder*) clear {
  self.result = [[[PaperPost alloc] init] autorelease];
  return self;
}
- (PaperPost_Builder*) clone {
  return [PaperPost builderWithPrototype:result];
}
- (PaperPost*) defaultInstance {
  return [PaperPost defaultInstance];
}
- (PaperPost*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PaperPost*) buildPartial {
  PaperPost* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PaperPost_Builder*) mergeFrom:(PaperPost*) other {
  if (other == [PaperPost defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasPaperTemplate) {
    [self mergePaperTemplate:other.paperTemplate];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.paperPostMediasArray.count > 0) {
    if (result.paperPostMediasArray == nil) {
      result.paperPostMediasArray = [[other.paperPostMediasArray copyWithZone:[other.paperPostMediasArray zone]] autorelease];
    } else {
      [result.paperPostMediasArray appendArray:other.paperPostMediasArray];
    }
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PaperPost_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PaperPost_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PaperTemplate_Builder* subBuilder = [PaperTemplate builder];
        if (self.hasPaperTemplate) {
          [subBuilder mergeFrom:self.paperTemplate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPaperTemplate:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        Location_Builder* subBuilder = [Location builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 50: {
        PaperPostMedia_Builder* subBuilder = [PaperPostMedia builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPaperPostMedias:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        [self setCreateDate:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (PaperPost_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PaperPost_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (PaperPost_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (PaperPost_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (PaperPost_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (PaperPost_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasPaperTemplate {
  return result.hasPaperTemplate;
}
- (PaperTemplate*) paperTemplate {
  return result.paperTemplate;
}
- (PaperPost_Builder*) setPaperTemplate:(PaperTemplate*) value {
  result.hasPaperTemplate = YES;
  result.paperTemplate = value;
  return self;
}
- (PaperPost_Builder*) setPaperTemplateBuilder:(PaperTemplate_Builder*) builderForValue {
  return [self setPaperTemplate:[builderForValue build]];
}
- (PaperPost_Builder*) mergePaperTemplate:(PaperTemplate*) value {
  if (result.hasPaperTemplate &&
      result.paperTemplate != [PaperTemplate defaultInstance]) {
    result.paperTemplate =
      [[[PaperTemplate builderWithPrototype:result.paperTemplate] mergeFrom:value] buildPartial];
  } else {
    result.paperTemplate = value;
  }
  result.hasPaperTemplate = YES;
  return self;
}
- (PaperPost_Builder*) clearPaperTemplate {
  result.hasPaperTemplate = NO;
  result.paperTemplate = [PaperTemplate defaultInstance];
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (Location*) location {
  return result.location;
}
- (PaperPost_Builder*) setLocation:(Location*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (PaperPost_Builder*) setLocationBuilder:(Location_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (PaperPost_Builder*) mergeLocation:(Location*) value {
  if (result.hasLocation &&
      result.location != [Location defaultInstance]) {
    result.location =
      [[[Location builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (PaperPost_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [Location defaultInstance];
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (PaperPost_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PaperPost_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (PBAppendableArray *)paperPostMedias {
  return result.paperPostMediasArray;
}
- (PaperPostMedia*)paperPostMediasAtIndex:(NSUInteger)index {
  return [result paperPostMediasAtIndex:index];
}
- (PaperPost_Builder *)addPaperPostMedias:(PaperPostMedia*)value {
  if (result.paperPostMediasArray == nil) {
    result.paperPostMediasArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.paperPostMediasArray addObject:value];
  return self;
}
- (PaperPost_Builder *)setPaperPostMediasArray:(NSArray *)array {
  result.paperPostMediasArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPost_Builder *)setPaperPostMediasValues:(const PaperPostMedia* *)values count:(NSUInteger)count {
  result.paperPostMediasArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPost_Builder *)clearPaperPostMedias {
  result.paperPostMediasArray = nil;
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (PaperPost_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (PaperPost_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (PaperPost_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (PaperPost_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (PaperPost_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PaperPost_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
@end

@interface PaperPostMedia ()
@property (retain) NSString* fieldId;
@property (retain) PBAppendableArray * filesArray;
@end

@implementation PaperPostMedia

- (BOOL) hasFieldId {
  return !!hasFieldId_;
}
- (void) setHasFieldId:(BOOL) value_ {
  hasFieldId_ = !!value_;
}
@synthesize fieldId;
@synthesize filesArray;
@dynamic files;
- (void) dealloc {
  self.fieldId = nil;
  self.filesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fieldId = @"";
  }
  return self;
}
static PaperPostMedia* defaultPaperPostMediaInstance = nil;
+ (void) initialize {
  if (self == [PaperPostMedia class]) {
    defaultPaperPostMediaInstance = [[PaperPostMedia alloc] init];
  }
}
+ (PaperPostMedia*) defaultInstance {
  return defaultPaperPostMediaInstance;
}
- (PaperPostMedia*) defaultInstance {
  return defaultPaperPostMediaInstance;
}
- (PBArray *)files {
  return filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasFieldId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFieldId) {
    [output writeString:1 value:self.fieldId];
  }
  const NSUInteger filesArrayCount = self.filesArray.count;
  if (filesArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < filesArrayCount; ++i) {
      [output writeData:2 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFieldId) {
    size_ += computeStringSize(1, self.fieldId);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filesArray.count;
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PaperPostMedia*) parseFromData:(NSData*) data {
  return (PaperPostMedia*)[[[PaperPostMedia builder] mergeFromData:data] build];
}
+ (PaperPostMedia*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPostMedia*)[[[PaperPostMedia builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PaperPostMedia*) parseFromInputStream:(NSInputStream*) input {
  return (PaperPostMedia*)[[[PaperPostMedia builder] mergeFromInputStream:input] build];
}
+ (PaperPostMedia*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPostMedia*)[[[PaperPostMedia builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperPostMedia*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PaperPostMedia*)[[[PaperPostMedia builder] mergeFromCodedInputStream:input] build];
}
+ (PaperPostMedia*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPostMedia*)[[[PaperPostMedia builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperPostMedia_Builder*) builder {
  return [[[PaperPostMedia_Builder alloc] init] autorelease];
}
+ (PaperPostMedia_Builder*) builderWithPrototype:(PaperPostMedia*) prototype {
  return [[PaperPostMedia builder] mergeFrom:prototype];
}
- (PaperPostMedia_Builder*) builder {
  return [PaperPostMedia builder];
}
- (PaperPostMedia_Builder*) toBuilder {
  return [PaperPostMedia builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFieldId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fieldId", self.fieldId];
  }
  for (NSData* element in self.filesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"files", element];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PaperPostMedia class]]) {
    return NO;
  }
  PaperPostMedia *otherMessage = other;
  return
      self.hasFieldId == otherMessage.hasFieldId &&
      (!self.hasFieldId || [self.fieldId isEqual:otherMessage.fieldId]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasFieldId) {
    hashCode = hashCode * 31 + [self.fieldId hash];
  }
  for (NSData* element in self.filesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PaperPostMedia_Builder()
@property (retain) PaperPostMedia* result;
@end

@implementation PaperPostMedia_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PaperPostMedia alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PaperPostMedia_Builder*) clear {
  self.result = [[[PaperPostMedia alloc] init] autorelease];
  return self;
}
- (PaperPostMedia_Builder*) clone {
  return [PaperPostMedia builderWithPrototype:result];
}
- (PaperPostMedia*) defaultInstance {
  return [PaperPostMedia defaultInstance];
}
- (PaperPostMedia*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PaperPostMedia*) buildPartial {
  PaperPostMedia* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PaperPostMedia_Builder*) mergeFrom:(PaperPostMedia*) other {
  if (other == [PaperPostMedia defaultInstance]) {
    return self;
  }
  if (other.hasFieldId) {
    [self setFieldId:other.fieldId];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[other.filesArray copyWithZone:[other.filesArray zone]] autorelease];
    } else {
      [result.filesArray appendArray:other.filesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PaperPostMedia_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PaperPostMedia_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFieldId:[input readString]];
        break;
      }
      case 18: {
        [self addFiles:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasFieldId {
  return result.hasFieldId;
}
- (NSString*) fieldId {
  return result.fieldId;
}
- (PaperPostMedia_Builder*) setFieldId:(NSString*) value {
  result.hasFieldId = YES;
  result.fieldId = value;
  return self;
}
- (PaperPostMedia_Builder*) clearFieldId {
  result.hasFieldId = NO;
  result.fieldId = @"";
  return self;
}
- (PBAppendableArray *)files {
  return result.filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (PaperPostMedia_Builder *)addFiles:(NSData*)value {
  if (result.filesArray == nil) {
    result.filesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filesArray addObject:value];
  return self;
}
- (PaperPostMedia_Builder *)setFilesArray:(NSArray *)array {
  result.filesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPostMedia_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count {
  result.filesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPostMedia_Builder *)clearFiles {
  result.filesArray = nil;
  return self;
}
@end

@interface PagePaperPost ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * paperPostsArray;
@end

@implementation PagePaperPost

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize paperPostsArray;
@dynamic paperPosts;
- (void) dealloc {
  self.page = nil;
  self.paperPostsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PagePaperPost* defaultPagePaperPostInstance = nil;
+ (void) initialize {
  if (self == [PagePaperPost class]) {
    defaultPagePaperPostInstance = [[PagePaperPost alloc] init];
  }
}
+ (PagePaperPost*) defaultInstance {
  return defaultPagePaperPostInstance;
}
- (PagePaperPost*) defaultInstance {
  return defaultPagePaperPostInstance;
}
- (PBArray *)paperPosts {
  return paperPostsArray;
}
- (PaperPost*)paperPostsAtIndex:(NSUInteger)index {
  return [paperPostsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (PaperPost* element in self.paperPosts) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (PaperPost *element in self.paperPostsArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (PaperPost *element in self.paperPostsArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PagePaperPost*) parseFromData:(NSData*) data {
  return (PagePaperPost*)[[[PagePaperPost builder] mergeFromData:data] build];
}
+ (PagePaperPost*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PagePaperPost*)[[[PagePaperPost builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PagePaperPost*) parseFromInputStream:(NSInputStream*) input {
  return (PagePaperPost*)[[[PagePaperPost builder] mergeFromInputStream:input] build];
}
+ (PagePaperPost*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PagePaperPost*)[[[PagePaperPost builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PagePaperPost*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PagePaperPost*)[[[PagePaperPost builder] mergeFromCodedInputStream:input] build];
}
+ (PagePaperPost*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PagePaperPost*)[[[PagePaperPost builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PagePaperPost_Builder*) builder {
  return [[[PagePaperPost_Builder alloc] init] autorelease];
}
+ (PagePaperPost_Builder*) builderWithPrototype:(PagePaperPost*) prototype {
  return [[PagePaperPost builder] mergeFrom:prototype];
}
- (PagePaperPost_Builder*) builder {
  return [PagePaperPost builder];
}
- (PagePaperPost_Builder*) toBuilder {
  return [PagePaperPost builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (PaperPost* element in self.paperPostsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"paperPosts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PagePaperPost class]]) {
    return NO;
  }
  PagePaperPost *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.paperPostsArray isEqualToArray:otherMessage.paperPostsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (PaperPost* element in self.paperPostsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PagePaperPost_Builder()
@property (retain) PagePaperPost* result;
@end

@implementation PagePaperPost_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PagePaperPost alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PagePaperPost_Builder*) clear {
  self.result = [[[PagePaperPost alloc] init] autorelease];
  return self;
}
- (PagePaperPost_Builder*) clone {
  return [PagePaperPost builderWithPrototype:result];
}
- (PagePaperPost*) defaultInstance {
  return [PagePaperPost defaultInstance];
}
- (PagePaperPost*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PagePaperPost*) buildPartial {
  PagePaperPost* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PagePaperPost_Builder*) mergeFrom:(PagePaperPost*) other {
  if (other == [PagePaperPost defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.paperPostsArray.count > 0) {
    if (result.paperPostsArray == nil) {
      result.paperPostsArray = [[other.paperPostsArray copyWithZone:[other.paperPostsArray zone]] autorelease];
    } else {
      [result.paperPostsArray appendArray:other.paperPostsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PagePaperPost_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PagePaperPost_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PaperPost_Builder* subBuilder = [PaperPost builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPaperPosts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PagePaperPost_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PagePaperPost_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PagePaperPost_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PagePaperPost_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)paperPosts {
  return result.paperPostsArray;
}
- (PaperPost*)paperPostsAtIndex:(NSUInteger)index {
  return [result paperPostsAtIndex:index];
}
- (PagePaperPost_Builder *)addPaperPosts:(PaperPost*)value {
  if (result.paperPostsArray == nil) {
    result.paperPostsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.paperPostsArray addObject:value];
  return self;
}
- (PagePaperPost_Builder *)setPaperPostsArray:(NSArray *)array {
  result.paperPostsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PagePaperPost_Builder *)setPaperPostsValues:(const PaperPost* *)values count:(NSUInteger)count {
  result.paperPostsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PagePaperPost_Builder *)clearPaperPosts {
  result.paperPostsArray = nil;
  return self;
}
@end

@interface PaperPostParams ()
@property int32_t page;
@property (retain) PBAppendableArray * usersArray;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t id;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PaperTemplate* paperTemplate;
@end

@implementation PaperPostParams

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize usersArray;
@dynamic users;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value_ {
  hasStartDate_ = !!value_;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value_ {
  hasEndDate_ = !!value_;
}
@synthesize endDate;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
@synthesize departmentsArray;
@dynamic departments;
- (BOOL) hasPaperTemplate {
  return !!hasPaperTemplate_;
}
- (void) setHasPaperTemplate:(BOOL) value_ {
  hasPaperTemplate_ = !!value_;
}
@synthesize paperTemplate;
- (void) dealloc {
  self.usersArray = nil;
  self.startDate = nil;
  self.endDate = nil;
  self.departmentsArray = nil;
  self.paperTemplate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = 0;
    self.startDate = @"";
    self.endDate = @"";
    self.id = 0;
    self.paperTemplate = [PaperTemplate defaultInstance];
  }
  return self;
}
static PaperPostParams* defaultPaperPostParamsInstance = nil;
+ (void) initialize {
  if (self == [PaperPostParams class]) {
    defaultPaperPostParamsInstance = [[PaperPostParams alloc] init];
  }
}
+ (PaperPostParams*) defaultInstance {
  return defaultPaperPostParamsInstance;
}
- (PaperPostParams*) defaultInstance {
  return defaultPaperPostParamsInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (PBArray *)departments {
  return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.departments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasPaperTemplate) {
    if (!self.paperTemplate.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:2 value:element];
  }
  if (self.hasStartDate) {
    [output writeString:3 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:4 value:self.endDate];
  }
  if (self.hasId) {
    [output writeInt32:5 value:self.id];
  }
  for (Department *element in self.departmentsArray) {
    [output writeMessage:6 value:element];
  }
  if (self.hasPaperTemplate) {
    [output writeMessage:7 value:self.paperTemplate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(2, element);
  }
  if (self.hasStartDate) {
    size_ += computeStringSize(3, self.startDate);
  }
  if (self.hasEndDate) {
    size_ += computeStringSize(4, self.endDate);
  }
  if (self.hasId) {
    size_ += computeInt32Size(5, self.id);
  }
  for (Department *element in self.departmentsArray) {
    size_ += computeMessageSize(6, element);
  }
  if (self.hasPaperTemplate) {
    size_ += computeMessageSize(7, self.paperTemplate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PaperPostParams*) parseFromData:(NSData*) data {
  return (PaperPostParams*)[[[PaperPostParams builder] mergeFromData:data] build];
}
+ (PaperPostParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPostParams*)[[[PaperPostParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PaperPostParams*) parseFromInputStream:(NSInputStream*) input {
  return (PaperPostParams*)[[[PaperPostParams builder] mergeFromInputStream:input] build];
}
+ (PaperPostParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPostParams*)[[[PaperPostParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperPostParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PaperPostParams*)[[[PaperPostParams builder] mergeFromCodedInputStream:input] build];
}
+ (PaperPostParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperPostParams*)[[[PaperPostParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperPostParams_Builder*) builder {
  return [[[PaperPostParams_Builder alloc] init] autorelease];
}
+ (PaperPostParams_Builder*) builderWithPrototype:(PaperPostParams*) prototype {
  return [[PaperPostParams builder] mergeFrom:prototype];
}
- (PaperPostParams_Builder*) builder {
  return [PaperPostParams builder];
}
- (PaperPostParams_Builder*) toBuilder {
  return [PaperPostParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startDate", self.startDate];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", self.endDate];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  for (Department* element in self.departmentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPaperTemplate) {
    [output appendFormat:@"%@%@ {\n", indent, @"paperTemplate"];
    [self.paperTemplate writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PaperPostParams class]]) {
    return NO;
  }
  PaperPostParams *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      self.hasStartDate == otherMessage.hasStartDate &&
      (!self.hasStartDate || [self.startDate isEqual:otherMessage.startDate]) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || [self.endDate isEqual:otherMessage.endDate]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      self.hasPaperTemplate == otherMessage.hasPaperTemplate &&
      (!self.hasPaperTemplate || [self.paperTemplate isEqual:otherMessage.paperTemplate]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasStartDate) {
    hashCode = hashCode * 31 + [self.startDate hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [self.endDate hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  for (Department* element in self.departmentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasPaperTemplate) {
    hashCode = hashCode * 31 + [self.paperTemplate hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PaperPostParams_Builder()
@property (retain) PaperPostParams* result;
@end

@implementation PaperPostParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PaperPostParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PaperPostParams_Builder*) clear {
  self.result = [[[PaperPostParams alloc] init] autorelease];
  return self;
}
- (PaperPostParams_Builder*) clone {
  return [PaperPostParams builderWithPrototype:result];
}
- (PaperPostParams*) defaultInstance {
  return [PaperPostParams defaultInstance];
}
- (PaperPostParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PaperPostParams*) buildPartial {
  PaperPostParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PaperPostParams_Builder*) mergeFrom:(PaperPostParams*) other {
  if (other == [PaperPostParams defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
    } else {
      [result.departmentsArray appendArray:other.departmentsArray];
    }
  }
  if (other.hasPaperTemplate) {
    [self mergePaperTemplate:other.paperTemplate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PaperPostParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PaperPostParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setStartDate:[input readString]];
        break;
      }
      case 34: {
        [self setEndDate:[input readString]];
        break;
      }
      case 40: {
        [self setId:[input readInt32]];
        break;
      }
      case 50: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PaperTemplate_Builder* subBuilder = [PaperTemplate builder];
        if (self.hasPaperTemplate) {
          [subBuilder mergeFrom:self.paperTemplate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPaperTemplate:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (PaperPostParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PaperPostParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (PaperPostParams_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (PaperPostParams_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPostParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPostParams_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (PaperPostParams_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (PaperPostParams_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (PaperPostParams_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (PaperPostParams_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (PaperPostParams_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PaperPostParams_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (PBAppendableArray *)departments {
  return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (PaperPostParams_Builder *)addDepartments:(Department*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (PaperPostParams_Builder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPostParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PaperPostParams_Builder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (BOOL) hasPaperTemplate {
  return result.hasPaperTemplate;
}
- (PaperTemplate*) paperTemplate {
  return result.paperTemplate;
}
- (PaperPostParams_Builder*) setPaperTemplate:(PaperTemplate*) value {
  result.hasPaperTemplate = YES;
  result.paperTemplate = value;
  return self;
}
- (PaperPostParams_Builder*) setPaperTemplateBuilder:(PaperTemplate_Builder*) builderForValue {
  return [self setPaperTemplate:[builderForValue build]];
}
- (PaperPostParams_Builder*) mergePaperTemplate:(PaperTemplate*) value {
  if (result.hasPaperTemplate &&
      result.paperTemplate != [PaperTemplate defaultInstance]) {
    result.paperTemplate =
      [[[PaperTemplate builderWithPrototype:result.paperTemplate] mergeFrom:value] buildPartial];
  } else {
    result.paperTemplate = value;
  }
  result.hasPaperTemplate = YES;
  return self;
}
- (PaperPostParams_Builder*) clearPaperTemplate {
  result.hasPaperTemplate = NO;
  result.paperTemplate = [PaperTemplate defaultInstance];
  return self;
}
@end

