// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SyncData.pb.h"

@implementation SyncDataRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
    return extensionRegistry;
}

+ (void) initialize {
    if (self == [SyncDataRoot class]) {
        PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
        [self registerAllExtensions:registry];
        [GenericRoot registerAllExtensions:registry];
        [UserRoot registerAllExtensions:registry];
        [ApplyRoot registerAllExtensions:registry];
        [CustomerRoot registerAllExtensions:registry];
        [PatrolRoot registerAllExtensions:registry];
        [AttendanceRoot registerAllExtensions:registry];
        [ProductRoot registerAllExtensions:registry];
        [GiftRoot registerAllExtensions:registry];
        [InspectionReportRoot registerAllExtensions:registry];
        [VideoTopicRoot registerAllExtensions:registry];
        [CompetitionGoodsRoot registerAllExtensions:registry];
        [PaperTemplateRoot registerAllExtensions:registry];
        [HolidayRoot registerAllExtensions:registry];
        [CheckInRoot registerAllExtensions:registry];
        extensionRegistry = [registry retain];
    }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FavData ()
@property (retain) PBAppendableArray * patrolCategoriesArray;
@property (retain) PBAppendableArray * productsArray;
@property (retain) PBAppendableArray * customersArray;
@end

@implementation FavData

@synthesize patrolCategoriesArray;
@dynamic patrolCategories;
@synthesize productsArray;
@dynamic products;
@synthesize customersArray;
@dynamic customers;
- (void) dealloc {
    self.patrolCategoriesArray = nil;
    self.productsArray = nil;
    self.customersArray = nil;
    [super dealloc];
}
- (id) init {
    if ((self = [super init])) {
    }
    return self;
}
static FavData* defaultFavDataInstance = nil;
+ (void) initialize {
    if (self == [FavData class]) {
        defaultFavDataInstance = [[FavData alloc] init];
    }
}
+ (FavData*) defaultInstance {
    return defaultFavDataInstance;
}
- (FavData*) defaultInstance {
    return defaultFavDataInstance;
}
- (PBArray *)patrolCategories {
    return patrolCategoriesArray;
}
- (PatrolCategory*)patrolCategoriesAtIndex:(NSUInteger)index {
    return [patrolCategoriesArray objectAtIndex:index];
}
- (PBArray *)products {
    return productsArray;
}
- (Product*)productsAtIndex:(NSUInteger)index {
    return [productsArray objectAtIndex:index];
}
- (PBArray *)customers {
    return customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
    return [customersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
    for (PatrolCategory* element in self.patrolCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (Product* element in self.products) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (Customer* element in self.customers) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
    for (PatrolCategory *element in self.patrolCategoriesArray) {
        [output writeMessage:1 value:element];
    }
    for (Product *element in self.productsArray) {
        [output writeMessage:2 value:element];
    }
    for (Customer *element in self.customersArray) {
        [output writeMessage:3 value:element];
    }
    [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
    int32_t size_ = memoizedSerializedSize;
    if (size_ != -1) {
        return size_;
    }
    
    size_ = 0;
    for (PatrolCategory *element in self.patrolCategoriesArray) {
        size_ += computeMessageSize(1, element);
    }
    for (Product *element in self.productsArray) {
        size_ += computeMessageSize(2, element);
    }
    for (Customer *element in self.customersArray) {
        size_ += computeMessageSize(3, element);
    }
    size_ += self.unknownFields.serializedSize;
    memoizedSerializedSize = size_;
    return size_;
}
+ (FavData*) parseFromData:(NSData*) data {
    return (FavData*)[[[FavData builder] mergeFromData:data] build];
}
+ (FavData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (FavData*)[[[FavData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FavData*) parseFromInputStream:(NSInputStream*) input {
    return (FavData*)[[[FavData builder] mergeFromInputStream:input] build];
}
+ (FavData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (FavData*)[[[FavData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FavData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
    return (FavData*)[[[FavData builder] mergeFromCodedInputStream:input] build];
}
+ (FavData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (FavData*)[[[FavData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FavData_Builder*) builder {
    return [[[FavData_Builder alloc] init] autorelease];
}
+ (FavData_Builder*) builderWithPrototype:(FavData*) prototype {
    return [[FavData builder] mergeFrom:prototype];
}
- (FavData_Builder*) builder {
    return [FavData builder];
}
- (FavData_Builder*) toBuilder {
    return [FavData builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
    for (PatrolCategory* element in self.patrolCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"patrolCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (Product* element in self.productsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"products"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (Customer* element in self.customersArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"customers"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
    if (other == self) {
        return YES;
    }
    if (![other isKindOfClass:[FavData class]]) {
        return NO;
    }
    FavData *otherMessage = other;
    return
    [self.patrolCategoriesArray isEqualToArray:otherMessage.patrolCategoriesArray] &&
    [self.productsArray isEqualToArray:otherMessage.productsArray] &&
    [self.customersArray isEqualToArray:otherMessage.customersArray] &&
    (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
    NSUInteger hashCode = 7;
    for (PatrolCategory* element in self.patrolCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (Product* element in self.productsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (Customer* element in self.customersArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    hashCode = hashCode * 31 + [self.unknownFields hash];
    return hashCode;
}
@end

@interface FavData_Builder()
@property (retain) FavData* result;
@end

@implementation FavData_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if ((self = [super init])) {
        self.result = [[[FavData alloc] init] autorelease];
    }
    return self;
}
- (PBGeneratedMessage*) internalGetResult {
    return result;
}
- (FavData_Builder*) clear {
    self.result = [[[FavData alloc] init] autorelease];
    return self;
}
- (FavData_Builder*) clone {
    return [FavData builderWithPrototype:result];
}
- (FavData*) defaultInstance {
    return [FavData defaultInstance];
}
- (FavData*) build {
    [self checkInitialized];
    return [self buildPartial];
}
- (FavData*) buildPartial {
    FavData* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}
- (FavData_Builder*) mergeFrom:(FavData*) other {
    if (other == [FavData defaultInstance]) {
        return self;
    }
    if (other.patrolCategoriesArray.count > 0) {
        if (result.patrolCategoriesArray == nil) {
            result.patrolCategoriesArray = [[other.patrolCategoriesArray copyWithZone:[other.patrolCategoriesArray zone]] autorelease];
        } else {
            [result.patrolCategoriesArray appendArray:other.patrolCategoriesArray];
        }
    }
    if (other.productsArray.count > 0) {
        if (result.productsArray == nil) {
            result.productsArray = [[other.productsArray copyWithZone:[other.productsArray zone]] autorelease];
        } else {
            [result.productsArray appendArray:other.productsArray];
        }
    }
    if (other.customersArray.count > 0) {
        if (result.customersArray == nil) {
            result.customersArray = [[other.customersArray copyWithZone:[other.customersArray zone]] autorelease];
        } else {
            [result.customersArray appendArray:other.customersArray];
        }
    }
    [self mergeUnknownFields:other.unknownFields];
    return self;
}
- (FavData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FavData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
    while (YES) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                PatrolCategory_Builder* subBuilder = [PatrolCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addPatrolCategories:[subBuilder buildPartial]];
                break;
            }
            case 18: {
                Product_Builder* subBuilder = [Product builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addProducts:[subBuilder buildPartial]];
                break;
            }
            case 26: {
                Customer_Builder* subBuilder = [Customer builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addCustomers:[subBuilder buildPartial]];
                break;
            }
        }
    }
}
- (PBAppendableArray *)patrolCategories {
    return result.patrolCategoriesArray;
}
- (PatrolCategory*)patrolCategoriesAtIndex:(NSUInteger)index {
    return [result patrolCategoriesAtIndex:index];
}
- (FavData_Builder *)addPatrolCategories:(PatrolCategory*)value {
    if (result.patrolCategoriesArray == nil) {
        result.patrolCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.patrolCategoriesArray addObject:value];
    return self;
}
- (FavData_Builder *)setPatrolCategoriesArray:(NSArray *)array {
    result.patrolCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (FavData_Builder *)setPatrolCategoriesValues:(const PatrolCategory* *)values count:(NSUInteger)count {
    result.patrolCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (FavData_Builder *)clearPatrolCategories {
    result.patrolCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)products {
    return result.productsArray;
}
- (Product*)productsAtIndex:(NSUInteger)index {
    return [result productsAtIndex:index];
}
- (FavData_Builder *)addProducts:(Product*)value {
    if (result.productsArray == nil) {
        result.productsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.productsArray addObject:value];
    return self;
}
- (FavData_Builder *)setProductsArray:(NSArray *)array {
    result.productsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (FavData_Builder *)setProductsValues:(const Product* *)values count:(NSUInteger)count {
    result.productsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (FavData_Builder *)clearProducts {
    result.productsArray = nil;
    return self;
}
- (PBAppendableArray *)customers {
    return result.customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
    return [result customersAtIndex:index];
}
- (FavData_Builder *)addCustomers:(Customer*)value {
    if (result.customersArray == nil) {
        result.customersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.customersArray addObject:value];
    return self;
}
- (FavData_Builder *)setCustomersArray:(NSArray *)array {
    result.customersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (FavData_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count {
    result.customersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (FavData_Builder *)clearCustomers {
    result.customersArray = nil;
    return self;
}
@end

@interface SyncData ()
@property (retain) PBAppendableArray * usersArray;
@property (retain) PBAppendableArray * functionsArray;
@property (retain) PBAppendableArray * patrolCategoriesArray;
@property (retain) PBAppendableArray * customerCategoriesArray;
@property (retain) PBAppendableArray * competitionProductsArray;
@property (retain) PBAppendableArray * productsArray;
@property (retain) PBAppendableArray * attendanceCategoriesArray;
@property (retain) PBAppendableArray * applyCategoriesArray;
@property (retain) PBAppendableArray * giftProductsArray;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PBAppendableArray * giftProductCategoriesArray;
@property (retain) SystemSetting* systemSetting;
@property (retain) PBAppendableArray * inspectionTypesArray;
@property (retain) PBAppendableArray * inspectionModelsArray;
@property (retain) PBAppendableArray * inspectionStatusesArray;
@property (retain) PBAppendableArray * inspectionTargetsArray;
@property (retain) PBAppendableArray * inspectionReportCategoriesArray;
@property (retain) PageCustomer* pageCustomer;
@property (retain) AppSetting* appSetting;
@property (retain) Company* company;
@property (retain) PBAppendableArray * positionArray;
@property (retain) User* sessionUser;
@property (retain) PBAppendableArray * videoCategoriesArray;
@property (retain) PBAppendableArray * videoDurationCategoriesArray;
@property (retain) PBAppendableArray * patrolMediaCategoriesArray;
@property (retain) PBAppendableArray * patrolVideoDurationCategoriesArray;
@property (retain) NSString* cameraCategory;
@property (retain) PBAppendableArray * productSpecificationsArray;
@property (retain) PBAppendableArray * customerTagsArray;
@property (retain) PBAppendableArray * productCategoriesArray;
@property (retain) PBAppendableArray * paperTemplatesArray;
@property (retain) PBAppendableArray * holidayCategoriesArray;
@property (retain) PBAppendableArray * attendanceTypesArray;
@property (retain) PBAppendableArray * checkInChannelsArray;
@property (retain) CheckInShift* checkInShift;
@end

@implementation SyncData

@synthesize usersArray;
@dynamic users;
@synthesize functionsArray;
@dynamic functions;
@synthesize patrolCategoriesArray;
@dynamic patrolCategories;
@synthesize customerCategoriesArray;
@dynamic customerCategories;
@synthesize competitionProductsArray;
@dynamic competitionProducts;
@synthesize productsArray;
@dynamic products;
@synthesize attendanceCategoriesArray;
@dynamic attendanceCategories;
@synthesize applyCategoriesArray;
@dynamic applyCategories;
@synthesize giftProductsArray;
@dynamic giftProducts;
@synthesize departmentsArray;
@dynamic departments;
@synthesize giftProductCategoriesArray;
@dynamic giftProductCategories;
- (BOOL) hasSystemSetting {
    return !!hasSystemSetting_;
}
- (void) setHasSystemSetting:(BOOL) value_ {
    hasSystemSetting_ = !!value_;
}
@synthesize systemSetting;
@synthesize inspectionTypesArray;
@dynamic inspectionTypes;
@synthesize inspectionModelsArray;
@dynamic inspectionModels;
@synthesize inspectionStatusesArray;
@dynamic inspectionStatuses;
@synthesize inspectionTargetsArray;
@dynamic inspectionTargets;
@synthesize inspectionReportCategoriesArray;
@dynamic inspectionReportCategories;
- (BOOL) hasPageCustomer {
    return !!hasPageCustomer_;
}
- (void) setHasPageCustomer:(BOOL) value_ {
    hasPageCustomer_ = !!value_;
}
@synthesize pageCustomer;
- (BOOL) hasAppSetting {
    return !!hasAppSetting_;
}
- (void) setHasAppSetting:(BOOL) value_ {
    hasAppSetting_ = !!value_;
}
@synthesize appSetting;
- (BOOL) hasCompany {
    return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
    hasCompany_ = !!value_;
}
@synthesize company;
@synthesize positionArray;
@dynamic position;
- (BOOL) hasSessionUser {
    return !!hasSessionUser_;
}
- (void) setHasSessionUser:(BOOL) value_ {
    hasSessionUser_ = !!value_;
}
@synthesize sessionUser;
@synthesize videoCategoriesArray;
@dynamic videoCategories;
@synthesize videoDurationCategoriesArray;
@dynamic videoDurationCategories;
@synthesize patrolMediaCategoriesArray;
@dynamic patrolMediaCategories;
@synthesize patrolVideoDurationCategoriesArray;
@dynamic patrolVideoDurationCategories;
- (BOOL) hasCameraCategory {
    return !!hasCameraCategory_;
}
- (void) setHasCameraCategory:(BOOL) value_ {
    hasCameraCategory_ = !!value_;
}
@synthesize cameraCategory;
@synthesize productSpecificationsArray;
@dynamic productSpecifications;
@synthesize customerTagsArray;
@dynamic customerTags;
@synthesize productCategoriesArray;
@dynamic productCategories;
@synthesize paperTemplatesArray;
@dynamic paperTemplates;
@synthesize holidayCategoriesArray;
@dynamic holidayCategories;
@synthesize attendanceTypesArray;
@dynamic attendanceTypes;
@synthesize checkInChannelsArray;
@dynamic checkInChannels;
- (BOOL) hasCheckInShift {
    return !!hasCheckInShift_;
}
- (void) setHasCheckInShift:(BOOL) value_ {
    hasCheckInShift_ = !!value_;
}
@synthesize checkInShift;
- (void) dealloc {
    self.usersArray = nil;
    self.functionsArray = nil;
    self.patrolCategoriesArray = nil;
    self.customerCategoriesArray = nil;
    self.competitionProductsArray = nil;
    self.productsArray = nil;
    self.attendanceCategoriesArray = nil;
    self.applyCategoriesArray = nil;
    self.giftProductsArray = nil;
    self.departmentsArray = nil;
    self.giftProductCategoriesArray = nil;
    self.systemSetting = nil;
    self.inspectionTypesArray = nil;
    self.inspectionModelsArray = nil;
    self.inspectionStatusesArray = nil;
    self.inspectionTargetsArray = nil;
    self.inspectionReportCategoriesArray = nil;
    self.pageCustomer = nil;
    self.appSetting = nil;
    self.company = nil;
    self.positionArray = nil;
    self.sessionUser = nil;
    self.videoCategoriesArray = nil;
    self.videoDurationCategoriesArray = nil;
    self.patrolMediaCategoriesArray = nil;
    self.patrolVideoDurationCategoriesArray = nil;
    self.cameraCategory = nil;
    self.productSpecificationsArray = nil;
    self.customerTagsArray = nil;
    self.productCategoriesArray = nil;
    self.paperTemplatesArray = nil;
    self.holidayCategoriesArray = nil;
    self.attendanceTypesArray = nil;
    self.checkInChannelsArray = nil;
    self.checkInShift = nil;
    [super dealloc];
}
- (id) init {
    if ((self = [super init])) {
        self.systemSetting = [SystemSetting defaultInstance];
        self.pageCustomer = [PageCustomer defaultInstance];
        self.appSetting = [AppSetting defaultInstance];
        self.company = [Company defaultInstance];
        self.sessionUser = [User defaultInstance];
        self.cameraCategory = @"";
        self.checkInShift = [CheckInShift defaultInstance];
    }
    return self;
}
static SyncData* defaultSyncDataInstance = nil;
+ (void) initialize {
    if (self == [SyncData class]) {
        defaultSyncDataInstance = [[SyncData alloc] init];
    }
}
+ (SyncData*) defaultInstance {
    return defaultSyncDataInstance;
}
- (SyncData*) defaultInstance {
    return defaultSyncDataInstance;
}
- (PBArray *)users {
    return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
    return [usersArray objectAtIndex:index];
}
- (PBArray *)functions {
    return functionsArray;
}
- (Function*)functionsAtIndex:(NSUInteger)index {
    return [functionsArray objectAtIndex:index];
}
- (PBArray *)patrolCategories {
    return patrolCategoriesArray;
}
- (PatrolCategory*)patrolCategoriesAtIndex:(NSUInteger)index {
    return [patrolCategoriesArray objectAtIndex:index];
}
- (PBArray *)customerCategories {
    return customerCategoriesArray;
}
- (CustomerCategory*)customerCategoriesAtIndex:(NSUInteger)index {
    return [customerCategoriesArray objectAtIndex:index];
}
- (PBArray *)competitionProducts {
    return competitionProductsArray;
}
- (CompetitionProduct*)competitionProductsAtIndex:(NSUInteger)index {
    return [competitionProductsArray objectAtIndex:index];
}
- (PBArray *)products {
    return productsArray;
}
- (Product*)productsAtIndex:(NSUInteger)index {
    return [productsArray objectAtIndex:index];
}
- (PBArray *)attendanceCategories {
    return attendanceCategoriesArray;
}
- (AttendanceCategory*)attendanceCategoriesAtIndex:(NSUInteger)index {
    return [attendanceCategoriesArray objectAtIndex:index];
}
- (PBArray *)applyCategories {
    return applyCategoriesArray;
}
- (ApplyCategory*)applyCategoriesAtIndex:(NSUInteger)index {
    return [applyCategoriesArray objectAtIndex:index];
}
- (PBArray *)giftProducts {
    return giftProductsArray;
}
- (GiftProduct*)giftProductsAtIndex:(NSUInteger)index {
    return [giftProductsArray objectAtIndex:index];
}
- (PBArray *)departments {
    return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
    return [departmentsArray objectAtIndex:index];
}
- (PBArray *)giftProductCategories {
    return giftProductCategoriesArray;
}
- (GiftProductCategory*)giftProductCategoriesAtIndex:(NSUInteger)index {
    return [giftProductCategoriesArray objectAtIndex:index];
}
- (PBArray *)inspectionTypes {
    return inspectionTypesArray;
}
- (InspectionType*)inspectionTypesAtIndex:(NSUInteger)index {
    return [inspectionTypesArray objectAtIndex:index];
}
- (PBArray *)inspectionModels {
    return inspectionModelsArray;
}
- (InspectionModel*)inspectionModelsAtIndex:(NSUInteger)index {
    return [inspectionModelsArray objectAtIndex:index];
}
- (PBArray *)inspectionStatuses {
    return inspectionStatusesArray;
}
- (InspectionStatus*)inspectionStatusesAtIndex:(NSUInteger)index {
    return [inspectionStatusesArray objectAtIndex:index];
}
- (PBArray *)inspectionTargets {
    return inspectionTargetsArray;
}
- (InspectionTarget*)inspectionTargetsAtIndex:(NSUInteger)index {
    return [inspectionTargetsArray objectAtIndex:index];
}
- (PBArray *)inspectionReportCategories {
    return inspectionReportCategoriesArray;
}
- (InspectionReportCategory*)inspectionReportCategoriesAtIndex:(NSUInteger)index {
    return [inspectionReportCategoriesArray objectAtIndex:index];
}
- (PBArray *)position {
    return positionArray;
}
- (Position*)positionAtIndex:(NSUInteger)index {
    return [positionArray objectAtIndex:index];
}
- (PBArray *)videoCategories {
    return videoCategoriesArray;
}
- (VideoCategory*)videoCategoriesAtIndex:(NSUInteger)index {
    return [videoCategoriesArray objectAtIndex:index];
}
- (PBArray *)videoDurationCategories {
    return videoDurationCategoriesArray;
}
- (VideoDurationCategory*)videoDurationCategoriesAtIndex:(NSUInteger)index {
    return [videoDurationCategoriesArray objectAtIndex:index];
}
- (PBArray *)patrolMediaCategories {
    return patrolMediaCategoriesArray;
}
- (PatrolMediaCategory*)patrolMediaCategoriesAtIndex:(NSUInteger)index {
    return [patrolMediaCategoriesArray objectAtIndex:index];
}
- (PBArray *)patrolVideoDurationCategories {
    return patrolVideoDurationCategoriesArray;
}
- (PatrolVideoDurationCategory*)patrolVideoDurationCategoriesAtIndex:(NSUInteger)index {
    return [patrolVideoDurationCategoriesArray objectAtIndex:index];
}
- (PBArray *)productSpecifications {
    return productSpecificationsArray;
}
- (ProductSpecification*)productSpecificationsAtIndex:(NSUInteger)index {
    return [productSpecificationsArray objectAtIndex:index];
}
- (PBArray *)customerTags {
    return customerTagsArray;
}
- (CustomerTag*)customerTagsAtIndex:(NSUInteger)index {
    return [customerTagsArray objectAtIndex:index];
}
- (PBArray *)productCategories {
    return productCategoriesArray;
}
- (ProductCategory*)productCategoriesAtIndex:(NSUInteger)index {
    return [productCategoriesArray objectAtIndex:index];
}
- (PBArray *)paperTemplates {
    return paperTemplatesArray;
}
- (PaperTemplate*)paperTemplatesAtIndex:(NSUInteger)index {
    return [paperTemplatesArray objectAtIndex:index];
}
- (PBArray *)holidayCategories {
    return holidayCategoriesArray;
}
- (HolidayCategory*)holidayCategoriesAtIndex:(NSUInteger)index {
    return [holidayCategoriesArray objectAtIndex:index];
}
- (PBArray *)attendanceTypes {
    return attendanceTypesArray;
}
- (AttendanceType*)attendanceTypesAtIndex:(NSUInteger)index {
    return [attendanceTypesArray objectAtIndex:index];
}
- (PBArray *)checkInChannels {
    return checkInChannelsArray;
}
- (CheckInChannel*)checkInChannelsAtIndex:(NSUInteger)index {
    return [checkInChannelsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
    for (User* element in self.users) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (Function* element in self.functions) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (PatrolCategory* element in self.patrolCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (CustomerCategory* element in self.customerCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (CompetitionProduct* element in self.competitionProducts) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (Product* element in self.products) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (AttendanceCategory* element in self.attendanceCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (ApplyCategory* element in self.applyCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (GiftProduct* element in self.giftProducts) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (Department* element in self.departments) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (GiftProductCategory* element in self.giftProductCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (InspectionType* element in self.inspectionTypes) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (InspectionModel* element in self.inspectionModels) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (InspectionStatus* element in self.inspectionStatuses) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (InspectionTarget* element in self.inspectionTargets) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (InspectionReportCategory* element in self.inspectionReportCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    if (self.hasPageCustomer) {
        if (!self.pageCustomer.isInitialized) {
            return NO;
        }
    }
    if (self.hasCompany) {
        if (!self.company.isInitialized) {
            return NO;
        }
    }
    for (Position* element in self.position) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    if (self.hasSessionUser) {
        if (!self.sessionUser.isInitialized) {
            return NO;
        }
    }
    for (VideoCategory* element in self.videoCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (VideoDurationCategory* element in self.videoDurationCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (PatrolMediaCategory* element in self.patrolMediaCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (PatrolVideoDurationCategory* element in self.patrolVideoDurationCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (ProductSpecification* element in self.productSpecifications) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (CustomerTag* element in self.customerTags) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (ProductCategory* element in self.productCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (PaperTemplate* element in self.paperTemplates) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (HolidayCategory* element in self.holidayCategories) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (AttendanceType* element in self.attendanceTypes) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    for (CheckInChannel* element in self.checkInChannels) {
        if (!element.isInitialized) {
            return NO;
        }
    }
    if (self.hasCheckInShift) {
        if (!self.checkInShift.isInitialized) {
            return NO;
        }
    }
    return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
    for (User *element in self.usersArray) {
        [output writeMessage:1 value:element];
    }
    for (Function *element in self.functionsArray) {
        [output writeMessage:2 value:element];
    }
    for (PatrolCategory *element in self.patrolCategoriesArray) {
        [output writeMessage:3 value:element];
    }
    for (CustomerCategory *element in self.customerCategoriesArray) {
        [output writeMessage:4 value:element];
    }
    for (CompetitionProduct *element in self.competitionProductsArray) {
        [output writeMessage:5 value:element];
    }
    for (Product *element in self.productsArray) {
        [output writeMessage:6 value:element];
    }
    for (AttendanceCategory *element in self.attendanceCategoriesArray) {
        [output writeMessage:7 value:element];
    }
    for (ApplyCategory *element in self.applyCategoriesArray) {
        [output writeMessage:8 value:element];
    }
    for (GiftProduct *element in self.giftProductsArray) {
        [output writeMessage:9 value:element];
    }
    for (Department *element in self.departmentsArray) {
        [output writeMessage:10 value:element];
    }
    for (GiftProductCategory *element in self.giftProductCategoriesArray) {
        [output writeMessage:11 value:element];
    }
    if (self.hasSystemSetting) {
        [output writeMessage:12 value:self.systemSetting];
    }
    for (InspectionType *element in self.inspectionTypesArray) {
        [output writeMessage:13 value:element];
    }
    for (InspectionModel *element in self.inspectionModelsArray) {
        [output writeMessage:14 value:element];
    }
    for (InspectionStatus *element in self.inspectionStatusesArray) {
        [output writeMessage:15 value:element];
    }
    for (InspectionTarget *element in self.inspectionTargetsArray) {
        [output writeMessage:16 value:element];
    }
    for (InspectionReportCategory *element in self.inspectionReportCategoriesArray) {
        [output writeMessage:17 value:element];
    }
    if (self.hasPageCustomer) {
        [output writeMessage:18 value:self.pageCustomer];
    }
    if (self.hasAppSetting) {
        [output writeMessage:19 value:self.appSetting];
    }
    if (self.hasCompany) {
        [output writeMessage:20 value:self.company];
    }
    for (Position *element in self.positionArray) {
        [output writeMessage:21 value:element];
    }
    if (self.hasSessionUser) {
        [output writeMessage:22 value:self.sessionUser];
    }
    for (VideoCategory *element in self.videoCategoriesArray) {
        [output writeMessage:23 value:element];
    }
    for (VideoDurationCategory *element in self.videoDurationCategoriesArray) {
        [output writeMessage:24 value:element];
    }
    for (PatrolMediaCategory *element in self.patrolMediaCategoriesArray) {
        [output writeMessage:25 value:element];
    }
    for (PatrolVideoDurationCategory *element in self.patrolVideoDurationCategoriesArray) {
        [output writeMessage:26 value:element];
    }
    if (self.hasCameraCategory) {
        [output writeString:27 value:self.cameraCategory];
    }
    for (ProductSpecification *element in self.productSpecificationsArray) {
        [output writeMessage:28 value:element];
    }
    for (CustomerTag *element in self.customerTagsArray) {
        [output writeMessage:29 value:element];
    }
    for (ProductCategory *element in self.productCategoriesArray) {
        [output writeMessage:30 value:element];
    }
    for (PaperTemplate *element in self.paperTemplatesArray) {
        [output writeMessage:31 value:element];
    }
    for (HolidayCategory *element in self.holidayCategoriesArray) {
        [output writeMessage:32 value:element];
    }
    for (AttendanceType *element in self.attendanceTypesArray) {
        [output writeMessage:33 value:element];
    }
    for (CheckInChannel *element in self.checkInChannelsArray) {
        [output writeMessage:34 value:element];
    }
    if (self.hasCheckInShift) {
        [output writeMessage:35 value:self.checkInShift];
    }
    [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
    int32_t size_ = memoizedSerializedSize;
    if (size_ != -1) {
        return size_;
    }
    
    size_ = 0;
    for (User *element in self.usersArray) {
        size_ += computeMessageSize(1, element);
    }
    for (Function *element in self.functionsArray) {
        size_ += computeMessageSize(2, element);
    }
    for (PatrolCategory *element in self.patrolCategoriesArray) {
        size_ += computeMessageSize(3, element);
    }
    for (CustomerCategory *element in self.customerCategoriesArray) {
        size_ += computeMessageSize(4, element);
    }
    for (CompetitionProduct *element in self.competitionProductsArray) {
        size_ += computeMessageSize(5, element);
    }
    for (Product *element in self.productsArray) {
        size_ += computeMessageSize(6, element);
    }
    for (AttendanceCategory *element in self.attendanceCategoriesArray) {
        size_ += computeMessageSize(7, element);
    }
    for (ApplyCategory *element in self.applyCategoriesArray) {
        size_ += computeMessageSize(8, element);
    }
    for (GiftProduct *element in self.giftProductsArray) {
        size_ += computeMessageSize(9, element);
    }
    for (Department *element in self.departmentsArray) {
        size_ += computeMessageSize(10, element);
    }
    for (GiftProductCategory *element in self.giftProductCategoriesArray) {
        size_ += computeMessageSize(11, element);
    }
    if (self.hasSystemSetting) {
        size_ += computeMessageSize(12, self.systemSetting);
    }
    for (InspectionType *element in self.inspectionTypesArray) {
        size_ += computeMessageSize(13, element);
    }
    for (InspectionModel *element in self.inspectionModelsArray) {
        size_ += computeMessageSize(14, element);
    }
    for (InspectionStatus *element in self.inspectionStatusesArray) {
        size_ += computeMessageSize(15, element);
    }
    for (InspectionTarget *element in self.inspectionTargetsArray) {
        size_ += computeMessageSize(16, element);
    }
    for (InspectionReportCategory *element in self.inspectionReportCategoriesArray) {
        size_ += computeMessageSize(17, element);
    }
    if (self.hasPageCustomer) {
        size_ += computeMessageSize(18, self.pageCustomer);
    }
    if (self.hasAppSetting) {
        size_ += computeMessageSize(19, self.appSetting);
    }
    if (self.hasCompany) {
        size_ += computeMessageSize(20, self.company);
    }
    for (Position *element in self.positionArray) {
        size_ += computeMessageSize(21, element);
    }
    if (self.hasSessionUser) {
        size_ += computeMessageSize(22, self.sessionUser);
    }
    for (VideoCategory *element in self.videoCategoriesArray) {
        size_ += computeMessageSize(23, element);
    }
    for (VideoDurationCategory *element in self.videoDurationCategoriesArray) {
        size_ += computeMessageSize(24, element);
    }
    for (PatrolMediaCategory *element in self.patrolMediaCategoriesArray) {
        size_ += computeMessageSize(25, element);
    }
    for (PatrolVideoDurationCategory *element in self.patrolVideoDurationCategoriesArray) {
        size_ += computeMessageSize(26, element);
    }
    if (self.hasCameraCategory) {
        size_ += computeStringSize(27, self.cameraCategory);
    }
    for (ProductSpecification *element in self.productSpecificationsArray) {
        size_ += computeMessageSize(28, element);
    }
    for (CustomerTag *element in self.customerTagsArray) {
        size_ += computeMessageSize(29, element);
    }
    for (ProductCategory *element in self.productCategoriesArray) {
        size_ += computeMessageSize(30, element);
    }
    for (PaperTemplate *element in self.paperTemplatesArray) {
        size_ += computeMessageSize(31, element);
    }
    for (HolidayCategory *element in self.holidayCategoriesArray) {
        size_ += computeMessageSize(32, element);
    }
    for (AttendanceType *element in self.attendanceTypesArray) {
        size_ += computeMessageSize(33, element);
    }
    for (CheckInChannel *element in self.checkInChannelsArray) {
        size_ += computeMessageSize(34, element);
    }
    if (self.hasCheckInShift) {
        size_ += computeMessageSize(35, self.checkInShift);
    }
    size_ += self.unknownFields.serializedSize;
    memoizedSerializedSize = size_;
    return size_;
}
+ (SyncData*) parseFromData:(NSData*) data {
    return (SyncData*)[[[SyncData builder] mergeFromData:data] build];
}
+ (SyncData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (SyncData*)[[[SyncData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncData*) parseFromInputStream:(NSInputStream*) input {
    return (SyncData*)[[[SyncData builder] mergeFromInputStream:input] build];
}
+ (SyncData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (SyncData*)[[[SyncData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
    return (SyncData*)[[[SyncData builder] mergeFromCodedInputStream:input] build];
}
+ (SyncData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (SyncData*)[[[SyncData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncData_Builder*) builder {
    return [[[SyncData_Builder alloc] init] autorelease];
}
+ (SyncData_Builder*) builderWithPrototype:(SyncData*) prototype {
    return [[SyncData builder] mergeFrom:prototype];
}
- (SyncData_Builder*) builder {
    return [SyncData builder];
}
- (SyncData_Builder*) toBuilder {
    return [SyncData builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
    for (User* element in self.usersArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"users"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (Function* element in self.functionsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"functions"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (PatrolCategory* element in self.patrolCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"patrolCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (CustomerCategory* element in self.customerCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"customerCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (CompetitionProduct* element in self.competitionProductsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"competitionProducts"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (Product* element in self.productsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"products"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (AttendanceCategory* element in self.attendanceCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"attendanceCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (ApplyCategory* element in self.applyCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"applyCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (GiftProduct* element in self.giftProductsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"giftProducts"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (Department* element in self.departmentsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"departments"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (GiftProductCategory* element in self.giftProductCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"giftProductCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasSystemSetting) {
        [output appendFormat:@"%@%@ {\n", indent, @"systemSetting"];
        [self.systemSetting writeDescriptionTo:output
                                    withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (InspectionType* element in self.inspectionTypesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"inspectionTypes"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (InspectionModel* element in self.inspectionModelsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"inspectionModels"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (InspectionStatus* element in self.inspectionStatusesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"inspectionStatuses"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (InspectionTarget* element in self.inspectionTargetsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"inspectionTargets"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (InspectionReportCategory* element in self.inspectionReportCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"inspectionReportCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasPageCustomer) {
        [output appendFormat:@"%@%@ {\n", indent, @"pageCustomer"];
        [self.pageCustomer writeDescriptionTo:output
                                   withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasAppSetting) {
        [output appendFormat:@"%@%@ {\n", indent, @"appSetting"];
        [self.appSetting writeDescriptionTo:output
                                 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasCompany) {
        [output appendFormat:@"%@%@ {\n", indent, @"company"];
        [self.company writeDescriptionTo:output
                              withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (Position* element in self.positionArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"position"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasSessionUser) {
        [output appendFormat:@"%@%@ {\n", indent, @"sessionUser"];
        [self.sessionUser writeDescriptionTo:output
                                  withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (VideoCategory* element in self.videoCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"videoCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (VideoDurationCategory* element in self.videoDurationCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"videoDurationCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (PatrolMediaCategory* element in self.patrolMediaCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"patrolMediaCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (PatrolVideoDurationCategory* element in self.patrolVideoDurationCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"patrolVideoDurationCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasCameraCategory) {
        [output appendFormat:@"%@%@: %@\n", indent, @"cameraCategory", self.cameraCategory];
    }
    for (ProductSpecification* element in self.productSpecificationsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"productSpecifications"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (CustomerTag* element in self.customerTagsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"customerTags"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (ProductCategory* element in self.productCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"productCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (PaperTemplate* element in self.paperTemplatesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"paperTemplates"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (HolidayCategory* element in self.holidayCategoriesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"holidayCategories"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (AttendanceType* element in self.attendanceTypesArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"attendanceTypes"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    for (CheckInChannel* element in self.checkInChannelsArray) {
        [output appendFormat:@"%@%@ {\n", indent, @"checkInChannels"];
        [element writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    if (self.hasCheckInShift) {
        [output appendFormat:@"%@%@ {\n", indent, @"checkInShift"];
        [self.checkInShift writeDescriptionTo:output
                                   withIndent:[NSString stringWithFormat:@"%@  ", indent]];
        [output appendFormat:@"%@}\n", indent];
    }
    [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
    if (other == self) {
        return YES;
    }
    if (![other isKindOfClass:[SyncData class]]) {
        return NO;
    }
    SyncData *otherMessage = other;
    return
    [self.usersArray isEqualToArray:otherMessage.usersArray] &&
    [self.functionsArray isEqualToArray:otherMessage.functionsArray] &&
    [self.patrolCategoriesArray isEqualToArray:otherMessage.patrolCategoriesArray] &&
    [self.customerCategoriesArray isEqualToArray:otherMessage.customerCategoriesArray] &&
    [self.competitionProductsArray isEqualToArray:otherMessage.competitionProductsArray] &&
    [self.productsArray isEqualToArray:otherMessage.productsArray] &&
    [self.attendanceCategoriesArray isEqualToArray:otherMessage.attendanceCategoriesArray] &&
    [self.applyCategoriesArray isEqualToArray:otherMessage.applyCategoriesArray] &&
    [self.giftProductsArray isEqualToArray:otherMessage.giftProductsArray] &&
    [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
    [self.giftProductCategoriesArray isEqualToArray:otherMessage.giftProductCategoriesArray] &&
    self.hasSystemSetting == otherMessage.hasSystemSetting &&
    (!self.hasSystemSetting || [self.systemSetting isEqual:otherMessage.systemSetting]) &&
    [self.inspectionTypesArray isEqualToArray:otherMessage.inspectionTypesArray] &&
    [self.inspectionModelsArray isEqualToArray:otherMessage.inspectionModelsArray] &&
    [self.inspectionStatusesArray isEqualToArray:otherMessage.inspectionStatusesArray] &&
    [self.inspectionTargetsArray isEqualToArray:otherMessage.inspectionTargetsArray] &&
    [self.inspectionReportCategoriesArray isEqualToArray:otherMessage.inspectionReportCategoriesArray] &&
    self.hasPageCustomer == otherMessage.hasPageCustomer &&
    (!self.hasPageCustomer || [self.pageCustomer isEqual:otherMessage.pageCustomer]) &&
    self.hasAppSetting == otherMessage.hasAppSetting &&
    (!self.hasAppSetting || [self.appSetting isEqual:otherMessage.appSetting]) &&
    self.hasCompany == otherMessage.hasCompany &&
    (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
    [self.positionArray isEqualToArray:otherMessage.positionArray] &&
    self.hasSessionUser == otherMessage.hasSessionUser &&
    (!self.hasSessionUser || [self.sessionUser isEqual:otherMessage.sessionUser]) &&
    [self.videoCategoriesArray isEqualToArray:otherMessage.videoCategoriesArray] &&
    [self.videoDurationCategoriesArray isEqualToArray:otherMessage.videoDurationCategoriesArray] &&
    [self.patrolMediaCategoriesArray isEqualToArray:otherMessage.patrolMediaCategoriesArray] &&
    [self.patrolVideoDurationCategoriesArray isEqualToArray:otherMessage.patrolVideoDurationCategoriesArray] &&
    self.hasCameraCategory == otherMessage.hasCameraCategory &&
    (!self.hasCameraCategory || [self.cameraCategory isEqual:otherMessage.cameraCategory]) &&
    [self.productSpecificationsArray isEqualToArray:otherMessage.productSpecificationsArray] &&
    [self.customerTagsArray isEqualToArray:otherMessage.customerTagsArray] &&
    [self.productCategoriesArray isEqualToArray:otherMessage.productCategoriesArray] &&
    [self.paperTemplatesArray isEqualToArray:otherMessage.paperTemplatesArray] &&
    [self.holidayCategoriesArray isEqualToArray:otherMessage.holidayCategoriesArray] &&
    [self.attendanceTypesArray isEqualToArray:otherMessage.attendanceTypesArray] &&
    [self.checkInChannelsArray isEqualToArray:otherMessage.checkInChannelsArray] &&
    self.hasCheckInShift == otherMessage.hasCheckInShift &&
    (!self.hasCheckInShift || [self.checkInShift isEqual:otherMessage.checkInShift]) &&
    (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
    NSUInteger hashCode = 7;
    for (User* element in self.usersArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (Function* element in self.functionsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (PatrolCategory* element in self.patrolCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (CustomerCategory* element in self.customerCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (CompetitionProduct* element in self.competitionProductsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (Product* element in self.productsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (AttendanceCategory* element in self.attendanceCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (ApplyCategory* element in self.applyCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (GiftProduct* element in self.giftProductsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (Department* element in self.departmentsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (GiftProductCategory* element in self.giftProductCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    if (self.hasSystemSetting) {
        hashCode = hashCode * 31 + [self.systemSetting hash];
    }
    for (InspectionType* element in self.inspectionTypesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (InspectionModel* element in self.inspectionModelsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (InspectionStatus* element in self.inspectionStatusesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (InspectionTarget* element in self.inspectionTargetsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (InspectionReportCategory* element in self.inspectionReportCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    if (self.hasPageCustomer) {
        hashCode = hashCode * 31 + [self.pageCustomer hash];
    }
    if (self.hasAppSetting) {
        hashCode = hashCode * 31 + [self.appSetting hash];
    }
    if (self.hasCompany) {
        hashCode = hashCode * 31 + [self.company hash];
    }
    for (Position* element in self.positionArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    if (self.hasSessionUser) {
        hashCode = hashCode * 31 + [self.sessionUser hash];
    }
    for (VideoCategory* element in self.videoCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (VideoDurationCategory* element in self.videoDurationCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (PatrolMediaCategory* element in self.patrolMediaCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (PatrolVideoDurationCategory* element in self.patrolVideoDurationCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    if (self.hasCameraCategory) {
        hashCode = hashCode * 31 + [self.cameraCategory hash];
    }
    for (ProductSpecification* element in self.productSpecificationsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (CustomerTag* element in self.customerTagsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (ProductCategory* element in self.productCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (PaperTemplate* element in self.paperTemplatesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (HolidayCategory* element in self.holidayCategoriesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (AttendanceType* element in self.attendanceTypesArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    for (CheckInChannel* element in self.checkInChannelsArray) {
        hashCode = hashCode * 31 + [element hash];
    }
    if (self.hasCheckInShift) {
        hashCode = hashCode * 31 + [self.checkInShift hash];
    }
    hashCode = hashCode * 31 + [self.unknownFields hash];
    return hashCode;
}
@end

@interface SyncData_Builder()
@property (retain) SyncData* result;
@end

@implementation SyncData_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if ((self = [super init])) {
        self.result = [[[SyncData alloc] init] autorelease];
    }
    return self;
}
- (PBGeneratedMessage*) internalGetResult {
    return result;
}
- (SyncData_Builder*) clear {
    self.result = [[[SyncData alloc] init] autorelease];
    return self;
}
- (SyncData_Builder*) clone {
    return [SyncData builderWithPrototype:result];
}
- (SyncData*) defaultInstance {
    return [SyncData defaultInstance];
}
- (SyncData*) build {
    [self checkInitialized];
    return [self buildPartial];
}
- (SyncData*) buildPartial {
    SyncData* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}
- (SyncData_Builder*) mergeFrom:(SyncData*) other {
    if (other == [SyncData defaultInstance]) {
        return self;
    }
    if (other.usersArray.count > 0) {
        if (result.usersArray == nil) {
            result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
        } else {
            [result.usersArray appendArray:other.usersArray];
        }
    }
    if (other.functionsArray.count > 0) {
        if (result.functionsArray == nil) {
            result.functionsArray = [[other.functionsArray copyWithZone:[other.functionsArray zone]] autorelease];
        } else {
            [result.functionsArray appendArray:other.functionsArray];
        }
    }
    if (other.patrolCategoriesArray.count > 0) {
        if (result.patrolCategoriesArray == nil) {
            result.patrolCategoriesArray = [[other.patrolCategoriesArray copyWithZone:[other.patrolCategoriesArray zone]] autorelease];
        } else {
            [result.patrolCategoriesArray appendArray:other.patrolCategoriesArray];
        }
    }
    if (other.customerCategoriesArray.count > 0) {
        if (result.customerCategoriesArray == nil) {
            result.customerCategoriesArray = [[other.customerCategoriesArray copyWithZone:[other.customerCategoriesArray zone]] autorelease];
        } else {
            [result.customerCategoriesArray appendArray:other.customerCategoriesArray];
        }
    }
    if (other.competitionProductsArray.count > 0) {
        if (result.competitionProductsArray == nil) {
            result.competitionProductsArray = [[other.competitionProductsArray copyWithZone:[other.competitionProductsArray zone]] autorelease];
        } else {
            [result.competitionProductsArray appendArray:other.competitionProductsArray];
        }
    }
    if (other.productsArray.count > 0) {
        if (result.productsArray == nil) {
            result.productsArray = [[other.productsArray copyWithZone:[other.productsArray zone]] autorelease];
        } else {
            [result.productsArray appendArray:other.productsArray];
        }
    }
    if (other.attendanceCategoriesArray.count > 0) {
        if (result.attendanceCategoriesArray == nil) {
            result.attendanceCategoriesArray = [[other.attendanceCategoriesArray copyWithZone:[other.attendanceCategoriesArray zone]] autorelease];
        } else {
            [result.attendanceCategoriesArray appendArray:other.attendanceCategoriesArray];
        }
    }
    if (other.applyCategoriesArray.count > 0) {
        if (result.applyCategoriesArray == nil) {
            result.applyCategoriesArray = [[other.applyCategoriesArray copyWithZone:[other.applyCategoriesArray zone]] autorelease];
        } else {
            [result.applyCategoriesArray appendArray:other.applyCategoriesArray];
        }
    }
    if (other.giftProductsArray.count > 0) {
        if (result.giftProductsArray == nil) {
            result.giftProductsArray = [[other.giftProductsArray copyWithZone:[other.giftProductsArray zone]] autorelease];
        } else {
            [result.giftProductsArray appendArray:other.giftProductsArray];
        }
    }
    if (other.departmentsArray.count > 0) {
        if (result.departmentsArray == nil) {
            result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
        } else {
            [result.departmentsArray appendArray:other.departmentsArray];
        }
    }
    if (other.giftProductCategoriesArray.count > 0) {
        if (result.giftProductCategoriesArray == nil) {
            result.giftProductCategoriesArray = [[other.giftProductCategoriesArray copyWithZone:[other.giftProductCategoriesArray zone]] autorelease];
        } else {
            [result.giftProductCategoriesArray appendArray:other.giftProductCategoriesArray];
        }
    }
    if (other.hasSystemSetting) {
        [self mergeSystemSetting:other.systemSetting];
    }
    if (other.inspectionTypesArray.count > 0) {
        if (result.inspectionTypesArray == nil) {
            result.inspectionTypesArray = [[other.inspectionTypesArray copyWithZone:[other.inspectionTypesArray zone]] autorelease];
        } else {
            [result.inspectionTypesArray appendArray:other.inspectionTypesArray];
        }
    }
    if (other.inspectionModelsArray.count > 0) {
        if (result.inspectionModelsArray == nil) {
            result.inspectionModelsArray = [[other.inspectionModelsArray copyWithZone:[other.inspectionModelsArray zone]] autorelease];
        } else {
            [result.inspectionModelsArray appendArray:other.inspectionModelsArray];
        }
    }
    if (other.inspectionStatusesArray.count > 0) {
        if (result.inspectionStatusesArray == nil) {
            result.inspectionStatusesArray = [[other.inspectionStatusesArray copyWithZone:[other.inspectionStatusesArray zone]] autorelease];
        } else {
            [result.inspectionStatusesArray appendArray:other.inspectionStatusesArray];
        }
    }
    if (other.inspectionTargetsArray.count > 0) {
        if (result.inspectionTargetsArray == nil) {
            result.inspectionTargetsArray = [[other.inspectionTargetsArray copyWithZone:[other.inspectionTargetsArray zone]] autorelease];
        } else {
            [result.inspectionTargetsArray appendArray:other.inspectionTargetsArray];
        }
    }
    if (other.inspectionReportCategoriesArray.count > 0) {
        if (result.inspectionReportCategoriesArray == nil) {
            result.inspectionReportCategoriesArray = [[other.inspectionReportCategoriesArray copyWithZone:[other.inspectionReportCategoriesArray zone]] autorelease];
        } else {
            [result.inspectionReportCategoriesArray appendArray:other.inspectionReportCategoriesArray];
        }
    }
    if (other.hasPageCustomer) {
        [self mergePageCustomer:other.pageCustomer];
    }
    if (other.hasAppSetting) {
        [self mergeAppSetting:other.appSetting];
    }
    if (other.hasCompany) {
        [self mergeCompany:other.company];
    }
    if (other.positionArray.count > 0) {
        if (result.positionArray == nil) {
            result.positionArray = [[other.positionArray copyWithZone:[other.positionArray zone]] autorelease];
        } else {
            [result.positionArray appendArray:other.positionArray];
        }
    }
    if (other.hasSessionUser) {
        [self mergeSessionUser:other.sessionUser];
    }
    if (other.videoCategoriesArray.count > 0) {
        if (result.videoCategoriesArray == nil) {
            result.videoCategoriesArray = [[other.videoCategoriesArray copyWithZone:[other.videoCategoriesArray zone]] autorelease];
        } else {
            [result.videoCategoriesArray appendArray:other.videoCategoriesArray];
        }
    }
    if (other.videoDurationCategoriesArray.count > 0) {
        if (result.videoDurationCategoriesArray == nil) {
            result.videoDurationCategoriesArray = [[other.videoDurationCategoriesArray copyWithZone:[other.videoDurationCategoriesArray zone]] autorelease];
        } else {
            [result.videoDurationCategoriesArray appendArray:other.videoDurationCategoriesArray];
        }
    }
    if (other.patrolMediaCategoriesArray.count > 0) {
        if (result.patrolMediaCategoriesArray == nil) {
            result.patrolMediaCategoriesArray = [[other.patrolMediaCategoriesArray copyWithZone:[other.patrolMediaCategoriesArray zone]] autorelease];
        } else {
            [result.patrolMediaCategoriesArray appendArray:other.patrolMediaCategoriesArray];
        }
    }
    if (other.patrolVideoDurationCategoriesArray.count > 0) {
        if (result.patrolVideoDurationCategoriesArray == nil) {
            result.patrolVideoDurationCategoriesArray = [[other.patrolVideoDurationCategoriesArray copyWithZone:[other.patrolVideoDurationCategoriesArray zone]] autorelease];
        } else {
            [result.patrolVideoDurationCategoriesArray appendArray:other.patrolVideoDurationCategoriesArray];
        }
    }
    if (other.hasCameraCategory) {
        [self setCameraCategory:other.cameraCategory];
    }
    if (other.productSpecificationsArray.count > 0) {
        if (result.productSpecificationsArray == nil) {
            result.productSpecificationsArray = [[other.productSpecificationsArray copyWithZone:[other.productSpecificationsArray zone]] autorelease];
        } else {
            [result.productSpecificationsArray appendArray:other.productSpecificationsArray];
        }
    }
    if (other.customerTagsArray.count > 0) {
        if (result.customerTagsArray == nil) {
            result.customerTagsArray = [[other.customerTagsArray copyWithZone:[other.customerTagsArray zone]] autorelease];
        } else {
            [result.customerTagsArray appendArray:other.customerTagsArray];
        }
    }
    if (other.productCategoriesArray.count > 0) {
        if (result.productCategoriesArray == nil) {
            result.productCategoriesArray = [[other.productCategoriesArray copyWithZone:[other.productCategoriesArray zone]] autorelease];
        } else {
            [result.productCategoriesArray appendArray:other.productCategoriesArray];
        }
    }
    if (other.paperTemplatesArray.count > 0) {
        if (result.paperTemplatesArray == nil) {
            result.paperTemplatesArray = [[other.paperTemplatesArray copyWithZone:[other.paperTemplatesArray zone]] autorelease];
        } else {
            [result.paperTemplatesArray appendArray:other.paperTemplatesArray];
        }
    }
    if (other.holidayCategoriesArray.count > 0) {
        if (result.holidayCategoriesArray == nil) {
            result.holidayCategoriesArray = [[other.holidayCategoriesArray copyWithZone:[other.holidayCategoriesArray zone]] autorelease];
        } else {
            [result.holidayCategoriesArray appendArray:other.holidayCategoriesArray];
        }
    }
    if (other.attendanceTypesArray.count > 0) {
        if (result.attendanceTypesArray == nil) {
            result.attendanceTypesArray = [[other.attendanceTypesArray copyWithZone:[other.attendanceTypesArray zone]] autorelease];
        } else {
            [result.attendanceTypesArray appendArray:other.attendanceTypesArray];
        }
    }
    if (other.checkInChannelsArray.count > 0) {
        if (result.checkInChannelsArray == nil) {
            result.checkInChannelsArray = [[other.checkInChannelsArray copyWithZone:[other.checkInChannelsArray zone]] autorelease];
        } else {
            [result.checkInChannelsArray appendArray:other.checkInChannelsArray];
        }
    }
    if (other.hasCheckInShift) {
        [self mergeCheckInShift:other.checkInShift];
    }
    [self mergeUnknownFields:other.unknownFields];
    return self;
}
- (SyncData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
    while (YES) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                User_Builder* subBuilder = [User builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addUsers:[subBuilder buildPartial]];
                break;
            }
            case 18: {
                Function_Builder* subBuilder = [Function builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addFunctions:[subBuilder buildPartial]];
                break;
            }
            case 26: {
                PatrolCategory_Builder* subBuilder = [PatrolCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addPatrolCategories:[subBuilder buildPartial]];
                break;
            }
            case 34: {
                CustomerCategory_Builder* subBuilder = [CustomerCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addCustomerCategories:[subBuilder buildPartial]];
                break;
            }
            case 42: {
                CompetitionProduct_Builder* subBuilder = [CompetitionProduct builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addCompetitionProducts:[subBuilder buildPartial]];
                break;
            }
            case 50: {
                Product_Builder* subBuilder = [Product builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addProducts:[subBuilder buildPartial]];
                break;
            }
            case 58: {
                AttendanceCategory_Builder* subBuilder = [AttendanceCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addAttendanceCategories:[subBuilder buildPartial]];
                break;
            }
            case 66: {
                ApplyCategory_Builder* subBuilder = [ApplyCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addApplyCategories:[subBuilder buildPartial]];
                break;
            }
            case 74: {
                GiftProduct_Builder* subBuilder = [GiftProduct builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addGiftProducts:[subBuilder buildPartial]];
                break;
            }
            case 82: {
                Department_Builder* subBuilder = [Department builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addDepartments:[subBuilder buildPartial]];
                break;
            }
            case 90: {
                GiftProductCategory_Builder* subBuilder = [GiftProductCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addGiftProductCategories:[subBuilder buildPartial]];
                break;
            }
            case 98: {
                SystemSetting_Builder* subBuilder = [SystemSetting builder];
                if (self.hasSystemSetting) {
                    [subBuilder mergeFrom:self.systemSetting];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setSystemSetting:[subBuilder buildPartial]];
                break;
            }
            case 106: {
                InspectionType_Builder* subBuilder = [InspectionType builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addInspectionTypes:[subBuilder buildPartial]];
                break;
            }
            case 114: {
                InspectionModel_Builder* subBuilder = [InspectionModel builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addInspectionModels:[subBuilder buildPartial]];
                break;
            }
            case 122: {
                InspectionStatus_Builder* subBuilder = [InspectionStatus builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addInspectionStatuses:[subBuilder buildPartial]];
                break;
            }
            case 130: {
                InspectionTarget_Builder* subBuilder = [InspectionTarget builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addInspectionTargets:[subBuilder buildPartial]];
                break;
            }
            case 138: {
                InspectionReportCategory_Builder* subBuilder = [InspectionReportCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addInspectionReportCategories:[subBuilder buildPartial]];
                break;
            }
            case 146: {
                PageCustomer_Builder* subBuilder = [PageCustomer builder];
                if (self.hasPageCustomer) {
                    [subBuilder mergeFrom:self.pageCustomer];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setPageCustomer:[subBuilder buildPartial]];
                break;
            }
            case 154: {
                AppSetting_Builder* subBuilder = [AppSetting builder];
                if (self.hasAppSetting) {
                    [subBuilder mergeFrom:self.appSetting];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setAppSetting:[subBuilder buildPartial]];
                break;
            }
            case 162: {
                Company_Builder* subBuilder = [Company builder];
                if (self.hasCompany) {
                    [subBuilder mergeFrom:self.company];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setCompany:[subBuilder buildPartial]];
                break;
            }
            case 170: {
                Position_Builder* subBuilder = [Position builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addPosition:[subBuilder buildPartial]];
                break;
            }
            case 178: {
                User_Builder* subBuilder = [User builder];
                if (self.hasSessionUser) {
                    [subBuilder mergeFrom:self.sessionUser];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setSessionUser:[subBuilder buildPartial]];
                break;
            }
            case 186: {
                VideoCategory_Builder* subBuilder = [VideoCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addVideoCategories:[subBuilder buildPartial]];
                break;
            }
            case 194: {
                VideoDurationCategory_Builder* subBuilder = [VideoDurationCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addVideoDurationCategories:[subBuilder buildPartial]];
                break;
            }
            case 202: {
                PatrolMediaCategory_Builder* subBuilder = [PatrolMediaCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addPatrolMediaCategories:[subBuilder buildPartial]];
                break;
            }
            case 210: {
                PatrolVideoDurationCategory_Builder* subBuilder = [PatrolVideoDurationCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addPatrolVideoDurationCategories:[subBuilder buildPartial]];
                break;
            }
            case 218: {
                [self setCameraCategory:[input readString]];
                break;
            }
            case 226: {
                ProductSpecification_Builder* subBuilder = [ProductSpecification builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addProductSpecifications:[subBuilder buildPartial]];
                break;
            }
            case 234: {
                CustomerTag_Builder* subBuilder = [CustomerTag builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addCustomerTags:[subBuilder buildPartial]];
                break;
            }
            case 242: {
                ProductCategory_Builder* subBuilder = [ProductCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addProductCategories:[subBuilder buildPartial]];
                break;
            }
            case 250: {
                PaperTemplate_Builder* subBuilder = [PaperTemplate builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addPaperTemplates:[subBuilder buildPartial]];
                break;
            }
            case 258: {
                HolidayCategory_Builder* subBuilder = [HolidayCategory builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addHolidayCategories:[subBuilder buildPartial]];
                break;
            }
            case 266: {
                AttendanceType_Builder* subBuilder = [AttendanceType builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addAttendanceTypes:[subBuilder buildPartial]];
                break;
            }
            case 274: {
                CheckInChannel_Builder* subBuilder = [CheckInChannel builder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addCheckInChannels:[subBuilder buildPartial]];
                break;
            }
            case 282: {
                CheckInShift_Builder* subBuilder = [CheckInShift builder];
                if (self.hasCheckInShift) {
                    [subBuilder mergeFrom:self.checkInShift];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setCheckInShift:[subBuilder buildPartial]];
                break;
            }
        }
    }
}
- (PBAppendableArray *)users {
    return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
    return [result usersAtIndex:index];
}
- (SyncData_Builder *)addUsers:(User*)value {
    if (result.usersArray == nil) {
        result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.usersArray addObject:value];
    return self;
}
- (SyncData_Builder *)setUsersArray:(NSArray *)array {
    result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
    result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearUsers {
    result.usersArray = nil;
    return self;
}
- (PBAppendableArray *)functions {
    return result.functionsArray;
}
- (Function*)functionsAtIndex:(NSUInteger)index {
    return [result functionsAtIndex:index];
}
- (SyncData_Builder *)addFunctions:(Function*)value {
    if (result.functionsArray == nil) {
        result.functionsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.functionsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setFunctionsArray:(NSArray *)array {
    result.functionsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setFunctionsValues:(const Function* *)values count:(NSUInteger)count {
    result.functionsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearFunctions {
    result.functionsArray = nil;
    return self;
}
- (PBAppendableArray *)patrolCategories {
    return result.patrolCategoriesArray;
}
- (PatrolCategory*)patrolCategoriesAtIndex:(NSUInteger)index {
    return [result patrolCategoriesAtIndex:index];
}
- (SyncData_Builder *)addPatrolCategories:(PatrolCategory*)value {
    if (result.patrolCategoriesArray == nil) {
        result.patrolCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.patrolCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setPatrolCategoriesArray:(NSArray *)array {
    result.patrolCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setPatrolCategoriesValues:(const PatrolCategory* *)values count:(NSUInteger)count {
    result.patrolCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearPatrolCategories {
    result.patrolCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)customerCategories {
    return result.customerCategoriesArray;
}
- (CustomerCategory*)customerCategoriesAtIndex:(NSUInteger)index {
    return [result customerCategoriesAtIndex:index];
}
- (SyncData_Builder *)addCustomerCategories:(CustomerCategory*)value {
    if (result.customerCategoriesArray == nil) {
        result.customerCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.customerCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setCustomerCategoriesArray:(NSArray *)array {
    result.customerCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setCustomerCategoriesValues:(const CustomerCategory* *)values count:(NSUInteger)count {
    result.customerCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearCustomerCategories {
    result.customerCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)competitionProducts {
    return result.competitionProductsArray;
}
- (CompetitionProduct*)competitionProductsAtIndex:(NSUInteger)index {
    return [result competitionProductsAtIndex:index];
}
- (SyncData_Builder *)addCompetitionProducts:(CompetitionProduct*)value {
    if (result.competitionProductsArray == nil) {
        result.competitionProductsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.competitionProductsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setCompetitionProductsArray:(NSArray *)array {
    result.competitionProductsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setCompetitionProductsValues:(const CompetitionProduct* *)values count:(NSUInteger)count {
    result.competitionProductsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearCompetitionProducts {
    result.competitionProductsArray = nil;
    return self;
}
- (PBAppendableArray *)products {
    return result.productsArray;
}
- (Product*)productsAtIndex:(NSUInteger)index {
    return [result productsAtIndex:index];
}
- (SyncData_Builder *)addProducts:(Product*)value {
    if (result.productsArray == nil) {
        result.productsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.productsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setProductsArray:(NSArray *)array {
    result.productsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setProductsValues:(const Product* *)values count:(NSUInteger)count {
    result.productsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearProducts {
    result.productsArray = nil;
    return self;
}
- (PBAppendableArray *)attendanceCategories {
    return result.attendanceCategoriesArray;
}
- (AttendanceCategory*)attendanceCategoriesAtIndex:(NSUInteger)index {
    return [result attendanceCategoriesAtIndex:index];
}
- (SyncData_Builder *)addAttendanceCategories:(AttendanceCategory*)value {
    if (result.attendanceCategoriesArray == nil) {
        result.attendanceCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.attendanceCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setAttendanceCategoriesArray:(NSArray *)array {
    result.attendanceCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setAttendanceCategoriesValues:(const AttendanceCategory* *)values count:(NSUInteger)count {
    result.attendanceCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearAttendanceCategories {
    result.attendanceCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)applyCategories {
    return result.applyCategoriesArray;
}
- (ApplyCategory*)applyCategoriesAtIndex:(NSUInteger)index {
    return [result applyCategoriesAtIndex:index];
}
- (SyncData_Builder *)addApplyCategories:(ApplyCategory*)value {
    if (result.applyCategoriesArray == nil) {
        result.applyCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.applyCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setApplyCategoriesArray:(NSArray *)array {
    result.applyCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setApplyCategoriesValues:(const ApplyCategory* *)values count:(NSUInteger)count {
    result.applyCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearApplyCategories {
    result.applyCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)giftProducts {
    return result.giftProductsArray;
}
- (GiftProduct*)giftProductsAtIndex:(NSUInteger)index {
    return [result giftProductsAtIndex:index];
}
- (SyncData_Builder *)addGiftProducts:(GiftProduct*)value {
    if (result.giftProductsArray == nil) {
        result.giftProductsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.giftProductsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setGiftProductsArray:(NSArray *)array {
    result.giftProductsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setGiftProductsValues:(const GiftProduct* *)values count:(NSUInteger)count {
    result.giftProductsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearGiftProducts {
    result.giftProductsArray = nil;
    return self;
}
- (PBAppendableArray *)departments {
    return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
    return [result departmentsAtIndex:index];
}
- (SyncData_Builder *)addDepartments:(Department*)value {
    if (result.departmentsArray == nil) {
        result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.departmentsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setDepartmentsArray:(NSArray *)array {
    result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
    result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearDepartments {
    result.departmentsArray = nil;
    return self;
}
- (PBAppendableArray *)giftProductCategories {
    return result.giftProductCategoriesArray;
}
- (GiftProductCategory*)giftProductCategoriesAtIndex:(NSUInteger)index {
    return [result giftProductCategoriesAtIndex:index];
}
- (SyncData_Builder *)addGiftProductCategories:(GiftProductCategory*)value {
    if (result.giftProductCategoriesArray == nil) {
        result.giftProductCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.giftProductCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setGiftProductCategoriesArray:(NSArray *)array {
    result.giftProductCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setGiftProductCategoriesValues:(const GiftProductCategory* *)values count:(NSUInteger)count {
    result.giftProductCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearGiftProductCategories {
    result.giftProductCategoriesArray = nil;
    return self;
}
- (BOOL) hasSystemSetting {
    return result.hasSystemSetting;
}
- (SystemSetting*) systemSetting {
    return result.systemSetting;
}
- (SyncData_Builder*) setSystemSetting:(SystemSetting*) value {
    result.hasSystemSetting = YES;
    result.systemSetting = value;
    return self;
}
- (SyncData_Builder*) setSystemSettingBuilder:(SystemSetting_Builder*) builderForValue {
    return [self setSystemSetting:[builderForValue build]];
}
- (SyncData_Builder*) mergeSystemSetting:(SystemSetting*) value {
    if (result.hasSystemSetting &&
        result.systemSetting != [SystemSetting defaultInstance]) {
        result.systemSetting =
        [[[SystemSetting builderWithPrototype:result.systemSetting] mergeFrom:value] buildPartial];
    } else {
        result.systemSetting = value;
    }
    result.hasSystemSetting = YES;
    return self;
}
- (SyncData_Builder*) clearSystemSetting {
    result.hasSystemSetting = NO;
    result.systemSetting = [SystemSetting defaultInstance];
    return self;
}
- (PBAppendableArray *)inspectionTypes {
    return result.inspectionTypesArray;
}
- (InspectionType*)inspectionTypesAtIndex:(NSUInteger)index {
    return [result inspectionTypesAtIndex:index];
}
- (SyncData_Builder *)addInspectionTypes:(InspectionType*)value {
    if (result.inspectionTypesArray == nil) {
        result.inspectionTypesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.inspectionTypesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setInspectionTypesArray:(NSArray *)array {
    result.inspectionTypesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setInspectionTypesValues:(const InspectionType* *)values count:(NSUInteger)count {
    result.inspectionTypesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearInspectionTypes {
    result.inspectionTypesArray = nil;
    return self;
}
- (PBAppendableArray *)inspectionModels {
    return result.inspectionModelsArray;
}
- (InspectionModel*)inspectionModelsAtIndex:(NSUInteger)index {
    return [result inspectionModelsAtIndex:index];
}
- (SyncData_Builder *)addInspectionModels:(InspectionModel*)value {
    if (result.inspectionModelsArray == nil) {
        result.inspectionModelsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.inspectionModelsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setInspectionModelsArray:(NSArray *)array {
    result.inspectionModelsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setInspectionModelsValues:(const InspectionModel* *)values count:(NSUInteger)count {
    result.inspectionModelsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearInspectionModels {
    result.inspectionModelsArray = nil;
    return self;
}
- (PBAppendableArray *)inspectionStatuses {
    return result.inspectionStatusesArray;
}
- (InspectionStatus*)inspectionStatusesAtIndex:(NSUInteger)index {
    return [result inspectionStatusesAtIndex:index];
}
- (SyncData_Builder *)addInspectionStatuses:(InspectionStatus*)value {
    if (result.inspectionStatusesArray == nil) {
        result.inspectionStatusesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.inspectionStatusesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setInspectionStatusesArray:(NSArray *)array {
    result.inspectionStatusesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setInspectionStatusesValues:(const InspectionStatus* *)values count:(NSUInteger)count {
    result.inspectionStatusesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearInspectionStatuses {
    result.inspectionStatusesArray = nil;
    return self;
}
- (PBAppendableArray *)inspectionTargets {
    return result.inspectionTargetsArray;
}
- (InspectionTarget*)inspectionTargetsAtIndex:(NSUInteger)index {
    return [result inspectionTargetsAtIndex:index];
}
- (SyncData_Builder *)addInspectionTargets:(InspectionTarget*)value {
    if (result.inspectionTargetsArray == nil) {
        result.inspectionTargetsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.inspectionTargetsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setInspectionTargetsArray:(NSArray *)array {
    result.inspectionTargetsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setInspectionTargetsValues:(const InspectionTarget* *)values count:(NSUInteger)count {
    result.inspectionTargetsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearInspectionTargets {
    result.inspectionTargetsArray = nil;
    return self;
}
- (PBAppendableArray *)inspectionReportCategories {
    return result.inspectionReportCategoriesArray;
}
- (InspectionReportCategory*)inspectionReportCategoriesAtIndex:(NSUInteger)index {
    return [result inspectionReportCategoriesAtIndex:index];
}
- (SyncData_Builder *)addInspectionReportCategories:(InspectionReportCategory*)value {
    if (result.inspectionReportCategoriesArray == nil) {
        result.inspectionReportCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.inspectionReportCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setInspectionReportCategoriesArray:(NSArray *)array {
    result.inspectionReportCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setInspectionReportCategoriesValues:(const InspectionReportCategory* *)values count:(NSUInteger)count {
    result.inspectionReportCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearInspectionReportCategories {
    result.inspectionReportCategoriesArray = nil;
    return self;
}
- (BOOL) hasPageCustomer {
    return result.hasPageCustomer;
}
- (PageCustomer*) pageCustomer {
    return result.pageCustomer;
}
- (SyncData_Builder*) setPageCustomer:(PageCustomer*) value {
    result.hasPageCustomer = YES;
    result.pageCustomer = value;
    return self;
}
- (SyncData_Builder*) setPageCustomerBuilder:(PageCustomer_Builder*) builderForValue {
    return [self setPageCustomer:[builderForValue build]];
}
- (SyncData_Builder*) mergePageCustomer:(PageCustomer*) value {
    if (result.hasPageCustomer &&
        result.pageCustomer != [PageCustomer defaultInstance]) {
        result.pageCustomer =
        [[[PageCustomer builderWithPrototype:result.pageCustomer] mergeFrom:value] buildPartial];
    } else {
        result.pageCustomer = value;
    }
    result.hasPageCustomer = YES;
    return self;
}
- (SyncData_Builder*) clearPageCustomer {
    result.hasPageCustomer = NO;
    result.pageCustomer = [PageCustomer defaultInstance];
    return self;
}
- (BOOL) hasAppSetting {
    return result.hasAppSetting;
}
- (AppSetting*) appSetting {
    return result.appSetting;
}
- (SyncData_Builder*) setAppSetting:(AppSetting*) value {
    result.hasAppSetting = YES;
    result.appSetting = value;
    return self;
}
- (SyncData_Builder*) setAppSettingBuilder:(AppSetting_Builder*) builderForValue {
    return [self setAppSetting:[builderForValue build]];
}
- (SyncData_Builder*) mergeAppSetting:(AppSetting*) value {
    if (result.hasAppSetting &&
        result.appSetting != [AppSetting defaultInstance]) {
        result.appSetting =
        [[[AppSetting builderWithPrototype:result.appSetting] mergeFrom:value] buildPartial];
    } else {
        result.appSetting = value;
    }
    result.hasAppSetting = YES;
    return self;
}
- (SyncData_Builder*) clearAppSetting {
    result.hasAppSetting = NO;
    result.appSetting = [AppSetting defaultInstance];
    return self;
}
- (BOOL) hasCompany {
    return result.hasCompany;
}
- (Company*) company {
    return result.company;
}
- (SyncData_Builder*) setCompany:(Company*) value {
    result.hasCompany = YES;
    result.company = value;
    return self;
}
- (SyncData_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
    return [self setCompany:[builderForValue build]];
}
- (SyncData_Builder*) mergeCompany:(Company*) value {
    if (result.hasCompany &&
        result.company != [Company defaultInstance]) {
        result.company =
        [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
    } else {
        result.company = value;
    }
    result.hasCompany = YES;
    return self;
}
- (SyncData_Builder*) clearCompany {
    result.hasCompany = NO;
    result.company = [Company defaultInstance];
    return self;
}
- (PBAppendableArray *)position {
    return result.positionArray;
}
- (Position*)positionAtIndex:(NSUInteger)index {
    return [result positionAtIndex:index];
}
- (SyncData_Builder *)addPosition:(Position*)value {
    if (result.positionArray == nil) {
        result.positionArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.positionArray addObject:value];
    return self;
}
- (SyncData_Builder *)setPositionArray:(NSArray *)array {
    result.positionArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setPositionValues:(const Position* *)values count:(NSUInteger)count {
    result.positionArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearPosition {
    result.positionArray = nil;
    return self;
}
- (BOOL) hasSessionUser {
    return result.hasSessionUser;
}
- (User*) sessionUser {
    return result.sessionUser;
}
- (SyncData_Builder*) setSessionUser:(User*) value {
    result.hasSessionUser = YES;
    result.sessionUser = value;
    return self;
}
- (SyncData_Builder*) setSessionUserBuilder:(User_Builder*) builderForValue {
    return [self setSessionUser:[builderForValue build]];
}
- (SyncData_Builder*) mergeSessionUser:(User*) value {
    if (result.hasSessionUser &&
        result.sessionUser != [User defaultInstance]) {
        result.sessionUser =
        [[[User builderWithPrototype:result.sessionUser] mergeFrom:value] buildPartial];
    } else {
        result.sessionUser = value;
    }
    result.hasSessionUser = YES;
    return self;
}
- (SyncData_Builder*) clearSessionUser {
    result.hasSessionUser = NO;
    result.sessionUser = [User defaultInstance];
    return self;
}
- (PBAppendableArray *)videoCategories {
    return result.videoCategoriesArray;
}
- (VideoCategory*)videoCategoriesAtIndex:(NSUInteger)index {
    return [result videoCategoriesAtIndex:index];
}
- (SyncData_Builder *)addVideoCategories:(VideoCategory*)value {
    if (result.videoCategoriesArray == nil) {
        result.videoCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.videoCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setVideoCategoriesArray:(NSArray *)array {
    result.videoCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setVideoCategoriesValues:(const VideoCategory* *)values count:(NSUInteger)count {
    result.videoCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearVideoCategories {
    result.videoCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)videoDurationCategories {
    return result.videoDurationCategoriesArray;
}
- (VideoDurationCategory*)videoDurationCategoriesAtIndex:(NSUInteger)index {
    return [result videoDurationCategoriesAtIndex:index];
}
- (SyncData_Builder *)addVideoDurationCategories:(VideoDurationCategory*)value {
    if (result.videoDurationCategoriesArray == nil) {
        result.videoDurationCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.videoDurationCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setVideoDurationCategoriesArray:(NSArray *)array {
    result.videoDurationCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setVideoDurationCategoriesValues:(const VideoDurationCategory* *)values count:(NSUInteger)count {
    result.videoDurationCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearVideoDurationCategories {
    result.videoDurationCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)patrolMediaCategories {
    return result.patrolMediaCategoriesArray;
}
- (PatrolMediaCategory*)patrolMediaCategoriesAtIndex:(NSUInteger)index {
    return [result patrolMediaCategoriesAtIndex:index];
}
- (SyncData_Builder *)addPatrolMediaCategories:(PatrolMediaCategory*)value {
    if (result.patrolMediaCategoriesArray == nil) {
        result.patrolMediaCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.patrolMediaCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setPatrolMediaCategoriesArray:(NSArray *)array {
    result.patrolMediaCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setPatrolMediaCategoriesValues:(const PatrolMediaCategory* *)values count:(NSUInteger)count {
    result.patrolMediaCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearPatrolMediaCategories {
    result.patrolMediaCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)patrolVideoDurationCategories {
    return result.patrolVideoDurationCategoriesArray;
}
- (PatrolVideoDurationCategory*)patrolVideoDurationCategoriesAtIndex:(NSUInteger)index {
    return [result patrolVideoDurationCategoriesAtIndex:index];
}
- (SyncData_Builder *)addPatrolVideoDurationCategories:(PatrolVideoDurationCategory*)value {
    if (result.patrolVideoDurationCategoriesArray == nil) {
        result.patrolVideoDurationCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.patrolVideoDurationCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setPatrolVideoDurationCategoriesArray:(NSArray *)array {
    result.patrolVideoDurationCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setPatrolVideoDurationCategoriesValues:(const PatrolVideoDurationCategory* *)values count:(NSUInteger)count {
    result.patrolVideoDurationCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearPatrolVideoDurationCategories {
    result.patrolVideoDurationCategoriesArray = nil;
    return self;
}
- (BOOL) hasCameraCategory {
    return result.hasCameraCategory;
}
- (NSString*) cameraCategory {
    return result.cameraCategory;
}
- (SyncData_Builder*) setCameraCategory:(NSString*) value {
    result.hasCameraCategory = YES;
    result.cameraCategory = value;
    return self;
}
- (SyncData_Builder*) clearCameraCategory {
    result.hasCameraCategory = NO;
    result.cameraCategory = @"";
    return self;
}
- (PBAppendableArray *)productSpecifications {
    return result.productSpecificationsArray;
}
- (ProductSpecification*)productSpecificationsAtIndex:(NSUInteger)index {
    return [result productSpecificationsAtIndex:index];
}
- (SyncData_Builder *)addProductSpecifications:(ProductSpecification*)value {
    if (result.productSpecificationsArray == nil) {
        result.productSpecificationsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.productSpecificationsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setProductSpecificationsArray:(NSArray *)array {
    result.productSpecificationsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setProductSpecificationsValues:(const ProductSpecification* *)values count:(NSUInteger)count {
    result.productSpecificationsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearProductSpecifications {
    result.productSpecificationsArray = nil;
    return self;
}
- (PBAppendableArray *)customerTags {
    return result.customerTagsArray;
}
- (CustomerTag*)customerTagsAtIndex:(NSUInteger)index {
    return [result customerTagsAtIndex:index];
}
- (SyncData_Builder *)addCustomerTags:(CustomerTag*)value {
    if (result.customerTagsArray == nil) {
        result.customerTagsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.customerTagsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setCustomerTagsArray:(NSArray *)array {
    result.customerTagsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setCustomerTagsValues:(const CustomerTag* *)values count:(NSUInteger)count {
    result.customerTagsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearCustomerTags {
    result.customerTagsArray = nil;
    return self;
}
- (PBAppendableArray *)productCategories {
    return result.productCategoriesArray;
}
- (ProductCategory*)productCategoriesAtIndex:(NSUInteger)index {
    return [result productCategoriesAtIndex:index];
}
- (SyncData_Builder *)addProductCategories:(ProductCategory*)value {
    if (result.productCategoriesArray == nil) {
        result.productCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.productCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setProductCategoriesArray:(NSArray *)array {
    result.productCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setProductCategoriesValues:(const ProductCategory* *)values count:(NSUInteger)count {
    result.productCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearProductCategories {
    result.productCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)paperTemplates {
    return result.paperTemplatesArray;
}
- (PaperTemplate*)paperTemplatesAtIndex:(NSUInteger)index {
    return [result paperTemplatesAtIndex:index];
}
- (SyncData_Builder *)addPaperTemplates:(PaperTemplate*)value {
    if (result.paperTemplatesArray == nil) {
        result.paperTemplatesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.paperTemplatesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setPaperTemplatesArray:(NSArray *)array {
    result.paperTemplatesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setPaperTemplatesValues:(const PaperTemplate* *)values count:(NSUInteger)count {
    result.paperTemplatesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearPaperTemplates {
    result.paperTemplatesArray = nil;
    return self;
}
- (PBAppendableArray *)holidayCategories {
    return result.holidayCategoriesArray;
}
- (HolidayCategory*)holidayCategoriesAtIndex:(NSUInteger)index {
    return [result holidayCategoriesAtIndex:index];
}
- (SyncData_Builder *)addHolidayCategories:(HolidayCategory*)value {
    if (result.holidayCategoriesArray == nil) {
        result.holidayCategoriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.holidayCategoriesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setHolidayCategoriesArray:(NSArray *)array {
    result.holidayCategoriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setHolidayCategoriesValues:(const HolidayCategory* *)values count:(NSUInteger)count {
    result.holidayCategoriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearHolidayCategories {
    result.holidayCategoriesArray = nil;
    return self;
}
- (PBAppendableArray *)attendanceTypes {
    return result.attendanceTypesArray;
}
- (AttendanceType*)attendanceTypesAtIndex:(NSUInteger)index {
    return [result attendanceTypesAtIndex:index];
}
- (SyncData_Builder *)addAttendanceTypes:(AttendanceType*)value {
    if (result.attendanceTypesArray == nil) {
        result.attendanceTypesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.attendanceTypesArray addObject:value];
    return self;
}
- (SyncData_Builder *)setAttendanceTypesArray:(NSArray *)array {
    result.attendanceTypesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setAttendanceTypesValues:(const AttendanceType* *)values count:(NSUInteger)count {
    result.attendanceTypesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearAttendanceTypes {
    result.attendanceTypesArray = nil;
    return self;
}
- (PBAppendableArray *)checkInChannels {
    return result.checkInChannelsArray;
}
- (CheckInChannel*)checkInChannelsAtIndex:(NSUInteger)index {
    return [result checkInChannelsAtIndex:index];
}
- (SyncData_Builder *)addCheckInChannels:(CheckInChannel*)value {
    if (result.checkInChannelsArray == nil) {
        result.checkInChannelsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
    }
    [result.checkInChannelsArray addObject:value];
    return self;
}
- (SyncData_Builder *)setCheckInChannelsArray:(NSArray *)array {
    result.checkInChannelsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)setCheckInChannelsValues:(const CheckInChannel* *)values count:(NSUInteger)count {
    result.checkInChannelsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
    return self;
}
- (SyncData_Builder *)clearCheckInChannels {
    result.checkInChannelsArray = nil;
    return self;
}
- (BOOL) hasCheckInShift {
    return result.hasCheckInShift;
}
- (CheckInShift*) checkInShift {
    return result.checkInShift;
}
- (SyncData_Builder*) setCheckInShift:(CheckInShift*) value {
    result.hasCheckInShift = YES;
    result.checkInShift = value;
    return self;
}
- (SyncData_Builder*) setCheckInShiftBuilder:(CheckInShift_Builder*) builderForValue {
    return [self setCheckInShift:[builderForValue build]];
}
- (SyncData_Builder*) mergeCheckInShift:(CheckInShift*) value {
    if (result.hasCheckInShift &&
        result.checkInShift != [CheckInShift defaultInstance]) {
        result.checkInShift =
        [[[CheckInShift builderWithPrototype:result.checkInShift] mergeFrom:value] buildPartial];
    } else {
        result.checkInShift = value;
    }
    result.hasCheckInShift = YES;
    return self;
}
- (SyncData_Builder*) clearCheckInShift {
    result.hasCheckInShift = NO;
    result.checkInShift = [CheckInShift defaultInstance];
    return self;
}
@end

@interface SyncDataParams ()
@property (retain) NSString* syncType;
@property (retain) NSString* syncTarget;
@property (retain) NSString* dataSourceId;
@end

@implementation SyncDataParams

- (BOOL) hasSyncType {
    return !!hasSyncType_;
}
- (void) setHasSyncType:(BOOL) value_ {
    hasSyncType_ = !!value_;
}
@synthesize syncType;
- (BOOL) hasSyncTarget {
    return !!hasSyncTarget_;
}
- (void) setHasSyncTarget:(BOOL) value_ {
    hasSyncTarget_ = !!value_;
}
@synthesize syncTarget;
- (BOOL) hasDataSourceId {
    return !!hasDataSourceId_;
}
- (void) setHasDataSourceId:(BOOL) value_ {
    hasDataSourceId_ = !!value_;
}
@synthesize dataSourceId;
- (void) dealloc {
    self.syncType = nil;
    self.syncTarget = nil;
    self.dataSourceId = nil;
    [super dealloc];
}
- (id) init {
    if ((self = [super init])) {
        self.syncType = @"";
        self.syncTarget = @"";
        self.dataSourceId = @"";
    }
    return self;
}
static SyncDataParams* defaultSyncDataParamsInstance = nil;
+ (void) initialize {
    if (self == [SyncDataParams class]) {
        defaultSyncDataParamsInstance = [[SyncDataParams alloc] init];
    }
}
+ (SyncDataParams*) defaultInstance {
    return defaultSyncDataParamsInstance;
}
- (SyncDataParams*) defaultInstance {
    return defaultSyncDataParamsInstance;
}
- (BOOL) isInitialized {
    return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
    if (self.hasSyncType) {
        [output writeString:1 value:self.syncType];
    }
    if (self.hasSyncTarget) {
        [output writeString:2 value:self.syncTarget];
    }
    if (self.hasDataSourceId) {
        [output writeString:3 value:self.dataSourceId];
    }
    [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
    int32_t size_ = memoizedSerializedSize;
    if (size_ != -1) {
        return size_;
    }
    
    size_ = 0;
    if (self.hasSyncType) {
        size_ += computeStringSize(1, self.syncType);
    }
    if (self.hasSyncTarget) {
        size_ += computeStringSize(2, self.syncTarget);
    }
    if (self.hasDataSourceId) {
        size_ += computeStringSize(3, self.dataSourceId);
    }
    size_ += self.unknownFields.serializedSize;
    memoizedSerializedSize = size_;
    return size_;
}
+ (SyncDataParams*) parseFromData:(NSData*) data {
    return (SyncDataParams*)[[[SyncDataParams builder] mergeFromData:data] build];
}
+ (SyncDataParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (SyncDataParams*)[[[SyncDataParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncDataParams*) parseFromInputStream:(NSInputStream*) input {
    return (SyncDataParams*)[[[SyncDataParams builder] mergeFromInputStream:input] build];
}
+ (SyncDataParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (SyncDataParams*)[[[SyncDataParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDataParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
    return (SyncDataParams*)[[[SyncDataParams builder] mergeFromCodedInputStream:input] build];
}
+ (SyncDataParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    return (SyncDataParams*)[[[SyncDataParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDataParams_Builder*) builder {
    return [[[SyncDataParams_Builder alloc] init] autorelease];
}
+ (SyncDataParams_Builder*) builderWithPrototype:(SyncDataParams*) prototype {
    return [[SyncDataParams builder] mergeFrom:prototype];
}
- (SyncDataParams_Builder*) builder {
    return [SyncDataParams builder];
}
- (SyncDataParams_Builder*) toBuilder {
    return [SyncDataParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
    if (self.hasSyncType) {
        [output appendFormat:@"%@%@: %@\n", indent, @"syncType", self.syncType];
    }
    if (self.hasSyncTarget) {
        [output appendFormat:@"%@%@: %@\n", indent, @"syncTarget", self.syncTarget];
    }
    if (self.hasDataSourceId) {
        [output appendFormat:@"%@%@: %@\n", indent, @"dataSourceId", self.dataSourceId];
    }
    [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
    if (other == self) {
        return YES;
    }
    if (![other isKindOfClass:[SyncDataParams class]]) {
        return NO;
    }
    SyncDataParams *otherMessage = other;
    return
    self.hasSyncType == otherMessage.hasSyncType &&
    (!self.hasSyncType || [self.syncType isEqual:otherMessage.syncType]) &&
    self.hasSyncTarget == otherMessage.hasSyncTarget &&
    (!self.hasSyncTarget || [self.syncTarget isEqual:otherMessage.syncTarget]) &&
    self.hasDataSourceId == otherMessage.hasDataSourceId &&
    (!self.hasDataSourceId || [self.dataSourceId isEqual:otherMessage.dataSourceId]) &&
    (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
    NSUInteger hashCode = 7;
    if (self.hasSyncType) {
        hashCode = hashCode * 31 + [self.syncType hash];
    }
    if (self.hasSyncTarget) {
        hashCode = hashCode * 31 + [self.syncTarget hash];
    }
    if (self.hasDataSourceId) {
        hashCode = hashCode * 31 + [self.dataSourceId hash];
    }
    hashCode = hashCode * 31 + [self.unknownFields hash];
    return hashCode;
}
@end

@interface SyncDataParams_Builder()
@property (retain) SyncDataParams* result;
@end

@implementation SyncDataParams_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if ((self = [super init])) {
        self.result = [[[SyncDataParams alloc] init] autorelease];
    }
    return self;
}
- (PBGeneratedMessage*) internalGetResult {
    return result;
}
- (SyncDataParams_Builder*) clear {
    self.result = [[[SyncDataParams alloc] init] autorelease];
    return self;
}
- (SyncDataParams_Builder*) clone {
    return [SyncDataParams builderWithPrototype:result];
}
- (SyncDataParams*) defaultInstance {
    return [SyncDataParams defaultInstance];
}
- (SyncDataParams*) build {
    [self checkInitialized];
    return [self buildPartial];
}
- (SyncDataParams*) buildPartial {
    SyncDataParams* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}
- (SyncDataParams_Builder*) mergeFrom:(SyncDataParams*) other {
    if (other == [SyncDataParams defaultInstance]) {
        return self;
    }
    if (other.hasSyncType) {
        [self setSyncType:other.syncType];
    }
    if (other.hasSyncTarget) {
        [self setSyncTarget:other.syncTarget];
    }
    if (other.hasDataSourceId) {
        [self setDataSourceId:other.dataSourceId];
    }
    [self mergeUnknownFields:other.unknownFields];
    return self;
}
- (SyncDataParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncDataParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
    PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
    while (YES) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                [self setSyncType:[input readString]];
                break;
            }
            case 18: {
                [self setSyncTarget:[input readString]];
                break;
            }
            case 26: {
                [self setDataSourceId:[input readString]];
                break;
            }
        }
    }
}
- (BOOL) hasSyncType {
    return result.hasSyncType;
}
- (NSString*) syncType {
    return result.syncType;
}
- (SyncDataParams_Builder*) setSyncType:(NSString*) value {
    result.hasSyncType = YES;
    result.syncType = value;
    return self;
}
- (SyncDataParams_Builder*) clearSyncType {
    result.hasSyncType = NO;
    result.syncType = @"";
    return self;
}
- (BOOL) hasSyncTarget {
    return result.hasSyncTarget;
}
- (NSString*) syncTarget {
    return result.syncTarget;
}
- (SyncDataParams_Builder*) setSyncTarget:(NSString*) value {
    result.hasSyncTarget = YES;
    result.syncTarget = value;
    return self;
}
- (SyncDataParams_Builder*) clearSyncTarget {
    result.hasSyncTarget = NO;
    result.syncTarget = @"";
    return self;
}
- (BOOL) hasDataSourceId {
    return result.hasDataSourceId;
}
- (NSString*) dataSourceId {
    return result.dataSourceId;
}
- (SyncDataParams_Builder*) setDataSourceId:(NSString*) value {
    result.hasDataSourceId = YES;
    result.dataSourceId = value;
    return self;
}
- (SyncDataParams_Builder*) clearDataSourceId {
    result.hasDataSourceId = NO;
    result.dataSourceId = @"";
    return self;
}
@end

