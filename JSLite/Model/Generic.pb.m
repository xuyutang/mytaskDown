// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Generic.pb.h"

@implementation GenericRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GenericRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Pagination ()
@property int32_t page;
@property int32_t pageSize;
@property int64_t totalSize;
@property (retain) PBAppendableArray * datasArray;
@end

@implementation Pagination

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
- (BOOL) hasPageSize {
  return !!hasPageSize_;
}
- (void) setHasPageSize:(BOOL) value_ {
  hasPageSize_ = !!value_;
}
@synthesize pageSize;
- (BOOL) hasTotalSize {
  return !!hasTotalSize_;
}
- (void) setHasTotalSize:(BOOL) value_ {
  hasTotalSize_ = !!value_;
}
@synthesize totalSize;
@synthesize datasArray;
@dynamic datas;
- (void) dealloc {
  self.datasArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = 0;
    self.pageSize = 0;
    self.totalSize = 0L;
  }
  return self;
}
static Pagination* defaultPaginationInstance = nil;
+ (void) initialize {
  if (self == [Pagination class]) {
    defaultPaginationInstance = [[Pagination alloc] init];
  }
}
+ (Pagination*) defaultInstance {
  return defaultPaginationInstance;
}
- (Pagination*) defaultInstance {
  return defaultPaginationInstance;
}
- (PBArray *)datas {
  return datasArray;
}
- (NSData*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  if (!self.hasPageSize) {
    return NO;
  }
  if (!self.hasTotalSize) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  if (self.hasPageSize) {
    [output writeInt32:2 value:self.pageSize];
  }
  if (self.hasTotalSize) {
    [output writeInt64:3 value:self.totalSize];
  }
  const NSUInteger datasArrayCount = self.datasArray.count;
  if (datasArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.datasArray.data;
    for (NSUInteger i = 0; i < datasArrayCount; ++i) {
      [output writeData:4 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  if (self.hasPageSize) {
    size_ += computeInt32Size(2, self.pageSize);
  }
  if (self.hasTotalSize) {
    size_ += computeInt64Size(3, self.totalSize);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.datasArray.count;
    const NSData* *values = (const NSData* *)self.datasArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Pagination*) parseFromData:(NSData*) data {
  return (Pagination*)[[[Pagination builder] mergeFromData:data] build];
}
+ (Pagination*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Pagination*)[[[Pagination builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Pagination*) parseFromInputStream:(NSInputStream*) input {
  return (Pagination*)[[[Pagination builder] mergeFromInputStream:input] build];
}
+ (Pagination*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Pagination*)[[[Pagination builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Pagination*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Pagination*)[[[Pagination builder] mergeFromCodedInputStream:input] build];
}
+ (Pagination*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Pagination*)[[[Pagination builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Pagination_Builder*) builder {
  return [[[Pagination_Builder alloc] init] autorelease];
}
+ (Pagination_Builder*) builderWithPrototype:(Pagination*) prototype {
  return [[Pagination builder] mergeFrom:prototype];
}
- (Pagination_Builder*) builder {
  return [Pagination builder];
}
- (Pagination_Builder*) toBuilder {
  return [Pagination builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  if (self.hasPageSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageSize", [NSNumber numberWithInt:self.pageSize]];
  }
  if (self.hasTotalSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalSize", [NSNumber numberWithLongLong:self.totalSize]];
  }
  for (NSData* element in self.datasArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"datas", element];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Pagination class]]) {
    return NO;
  }
  Pagination *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      self.hasPageSize == otherMessage.hasPageSize &&
      (!self.hasPageSize || self.pageSize == otherMessage.pageSize) &&
      self.hasTotalSize == otherMessage.hasTotalSize &&
      (!self.hasTotalSize || self.totalSize == otherMessage.totalSize) &&
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  if (self.hasPageSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.pageSize] hash];
  }
  if (self.hasTotalSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.totalSize] hash];
  }
  for (NSData* element in self.datasArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Pagination_Builder()
@property (retain) Pagination* result;
@end

@implementation Pagination_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Pagination alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Pagination_Builder*) clear {
  self.result = [[[Pagination alloc] init] autorelease];
  return self;
}
- (Pagination_Builder*) clone {
  return [Pagination builderWithPrototype:result];
}
- (Pagination*) defaultInstance {
  return [Pagination defaultInstance];
}
- (Pagination*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Pagination*) buildPartial {
  Pagination* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Pagination_Builder*) mergeFrom:(Pagination*) other {
  if (other == [Pagination defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.hasPageSize) {
    [self setPageSize:other.pageSize];
  }
  if (other.hasTotalSize) {
    [self setTotalSize:other.totalSize];
  }
  if (other.datasArray.count > 0) {
    if (result.datasArray == nil) {
      result.datasArray = [[other.datasArray copyWithZone:[other.datasArray zone]] autorelease];
    } else {
      [result.datasArray appendArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Pagination_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Pagination_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
      case 16: {
        [self setPageSize:[input readInt32]];
        break;
      }
      case 24: {
        [self setTotalSize:[input readInt64]];
        break;
      }
      case 34: {
        [self addDatas:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (Pagination_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (Pagination_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (BOOL) hasPageSize {
  return result.hasPageSize;
}
- (int32_t) pageSize {
  return result.pageSize;
}
- (Pagination_Builder*) setPageSize:(int32_t) value {
  result.hasPageSize = YES;
  result.pageSize = value;
  return self;
}
- (Pagination_Builder*) clearPageSize {
  result.hasPageSize = NO;
  result.pageSize = 0;
  return self;
}
- (BOOL) hasTotalSize {
  return result.hasTotalSize;
}
- (int64_t) totalSize {
  return result.totalSize;
}
- (Pagination_Builder*) setTotalSize:(int64_t) value {
  result.hasTotalSize = YES;
  result.totalSize = value;
  return self;
}
- (Pagination_Builder*) clearTotalSize {
  result.hasTotalSize = NO;
  result.totalSize = 0L;
  return self;
}
- (PBAppendableArray *)datas {
  return result.datasArray;
}
- (NSData*)datasAtIndex:(NSUInteger)index {
  return [result datasAtIndex:index];
}
- (Pagination_Builder *)addDatas:(NSData*)value {
  if (result.datasArray == nil) {
    result.datasArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.datasArray addObject:value];
  return self;
}
- (Pagination_Builder *)setDatasArray:(NSArray *)array {
  result.datasArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (Pagination_Builder *)setDatasValues:(const NSData* *)values count:(NSUInteger)count {
  result.datasArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (Pagination_Builder *)clearDatas {
  result.datasArray = nil;
  return self;
}
@end

@interface Location ()
@property int32_t id;
@property Float64 latitude;
@property Float64 longitude;
@property (retain) NSString* address;
@property (retain) NSString* province;
@property (retain) NSString* city;
@property (retain) NSString* district;
@property (retain) NSString* distance;
@property (retain) NSString* createTime;
@property int32_t version;
@property (retain) NSString* provinceCode;
@property (retain) NSString* cityCode;
@property (retain) NSString* districtCode;
@end

@implementation Location

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value_ {
  hasLatitude_ = !!value_;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) value_ {
  hasLongitude_ = !!value_;
}
@synthesize longitude;
- (BOOL) hasAddress {
  return !!hasAddress_;
}
- (void) setHasAddress:(BOOL) value_ {
  hasAddress_ = !!value_;
}
@synthesize address;
- (BOOL) hasProvince {
  return !!hasProvince_;
}
- (void) setHasProvince:(BOOL) value_ {
  hasProvince_ = !!value_;
}
@synthesize province;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) value_ {
  hasCity_ = !!value_;
}
@synthesize city;
- (BOOL) hasDistrict {
  return !!hasDistrict_;
}
- (void) setHasDistrict:(BOOL) value_ {
  hasDistrict_ = !!value_;
}
@synthesize district;
- (BOOL) hasDistance {
  return !!hasDistance_;
}
- (void) setHasDistance:(BOOL) value_ {
  hasDistance_ = !!value_;
}
@synthesize distance;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value_ {
  hasCreateTime_ = !!value_;
}
@synthesize createTime;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasProvinceCode {
  return !!hasProvinceCode_;
}
- (void) setHasProvinceCode:(BOOL) value_ {
  hasProvinceCode_ = !!value_;
}
@synthesize provinceCode;
- (BOOL) hasCityCode {
  return !!hasCityCode_;
}
- (void) setHasCityCode:(BOOL) value_ {
  hasCityCode_ = !!value_;
}
@synthesize cityCode;
- (BOOL) hasDistrictCode {
  return !!hasDistrictCode_;
}
- (void) setHasDistrictCode:(BOOL) value_ {
  hasDistrictCode_ = !!value_;
}
@synthesize districtCode;
- (void) dealloc {
  self.address = nil;
  self.province = nil;
  self.city = nil;
  self.district = nil;
  self.distance = nil;
  self.createTime = nil;
  self.provinceCode = nil;
  self.cityCode = nil;
  self.districtCode = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.latitude = 0;
    self.longitude = 0;
    self.address = @"";
    self.province = @"";
    self.city = @"";
    self.district = @"";
    self.distance = @"";
    self.createTime = @"";
    self.version = 1;
    self.provinceCode = @"";
    self.cityCode = @"";
    self.districtCode = @"";
  }
  return self;
}
static Location* defaultLocationInstance = nil;
+ (void) initialize {
  if (self == [Location class]) {
    defaultLocationInstance = [[Location alloc] init];
  }
}
+ (Location*) defaultInstance {
  return defaultLocationInstance;
}
- (Location*) defaultInstance {
  return defaultLocationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLatitude) {
    return NO;
  }
  if (!self.hasLongitude) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasLatitude) {
    [output writeDouble:2 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeDouble:3 value:self.longitude];
  }
  if (self.hasAddress) {
    [output writeString:4 value:self.address];
  }
  if (self.hasProvince) {
    [output writeString:5 value:self.province];
  }
  if (self.hasCity) {
    [output writeString:6 value:self.city];
  }
  if (self.hasDistrict) {
    [output writeString:7 value:self.district];
  }
  if (self.hasDistance) {
    [output writeString:8 value:self.distance];
  }
  if (self.hasCreateTime) {
    [output writeString:9 value:self.createTime];
  }
  if (self.hasVersion) {
    [output writeInt32:10 value:self.version];
  }
  if (self.hasProvinceCode) {
    [output writeString:11 value:self.provinceCode];
  }
  if (self.hasCityCode) {
    [output writeString:12 value:self.cityCode];
  }
  if (self.hasDistrictCode) {
    [output writeString:13 value:self.districtCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasLatitude) {
    size_ += computeDoubleSize(2, self.latitude);
  }
  if (self.hasLongitude) {
    size_ += computeDoubleSize(3, self.longitude);
  }
  if (self.hasAddress) {
    size_ += computeStringSize(4, self.address);
  }
  if (self.hasProvince) {
    size_ += computeStringSize(5, self.province);
  }
  if (self.hasCity) {
    size_ += computeStringSize(6, self.city);
  }
  if (self.hasDistrict) {
    size_ += computeStringSize(7, self.district);
  }
  if (self.hasDistance) {
    size_ += computeStringSize(8, self.distance);
  }
  if (self.hasCreateTime) {
    size_ += computeStringSize(9, self.createTime);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(10, self.version);
  }
  if (self.hasProvinceCode) {
    size_ += computeStringSize(11, self.provinceCode);
  }
  if (self.hasCityCode) {
    size_ += computeStringSize(12, self.cityCode);
  }
  if (self.hasDistrictCode) {
    size_ += computeStringSize(13, self.districtCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Location*) parseFromData:(NSData*) data {
  return (Location*)[[[Location builder] mergeFromData:data] build];
}
+ (Location*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Location*)[[[Location builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Location*) parseFromInputStream:(NSInputStream*) input {
  return (Location*)[[[Location builder] mergeFromInputStream:input] build];
}
+ (Location*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Location*)[[[Location builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Location*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Location*)[[[Location builder] mergeFromCodedInputStream:input] build];
}
+ (Location*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Location*)[[[Location builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Location_Builder*) builder {
  return [[[Location_Builder alloc] init] autorelease];
}
+ (Location_Builder*) builderWithPrototype:(Location*) prototype {
  return [[Location builder] mergeFrom:prototype];
}
- (Location_Builder*) builder {
  return [Location builder];
}
- (Location_Builder*) toBuilder {
  return [Location builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithDouble:self.latitude]];
  }
  if (self.hasLongitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longitude", [NSNumber numberWithDouble:self.longitude]];
  }
  if (self.hasAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"address", self.address];
  }
  if (self.hasProvince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"province", self.province];
  }
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", self.city];
  }
  if (self.hasDistrict) {
    [output appendFormat:@"%@%@: %@\n", indent, @"district", self.district];
  }
  if (self.hasDistance) {
    [output appendFormat:@"%@%@: %@\n", indent, @"distance", self.distance];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", self.createTime];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  if (self.hasProvinceCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceCode", self.provinceCode];
  }
  if (self.hasCityCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityCode", self.cityCode];
  }
  if (self.hasDistrictCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"districtCode", self.districtCode];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Location class]]) {
    return NO;
  }
  Location *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasLongitude == otherMessage.hasLongitude &&
      (!self.hasLongitude || self.longitude == otherMessage.longitude) &&
      self.hasAddress == otherMessage.hasAddress &&
      (!self.hasAddress || [self.address isEqual:otherMessage.address]) &&
      self.hasProvince == otherMessage.hasProvince &&
      (!self.hasProvince || [self.province isEqual:otherMessage.province]) &&
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || [self.city isEqual:otherMessage.city]) &&
      self.hasDistrict == otherMessage.hasDistrict &&
      (!self.hasDistrict || [self.district isEqual:otherMessage.district]) &&
      self.hasDistance == otherMessage.hasDistance &&
      (!self.hasDistance || [self.distance isEqual:otherMessage.distance]) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || [self.createTime isEqual:otherMessage.createTime]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      self.hasProvinceCode == otherMessage.hasProvinceCode &&
      (!self.hasProvinceCode || [self.provinceCode isEqual:otherMessage.provinceCode]) &&
      self.hasCityCode == otherMessage.hasCityCode &&
      (!self.hasCityCode || [self.cityCode isEqual:otherMessage.cityCode]) &&
      self.hasDistrictCode == otherMessage.hasDistrictCode &&
      (!self.hasDistrictCode || [self.districtCode isEqual:otherMessage.districtCode]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.latitude] hash];
  }
  if (self.hasLongitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.longitude] hash];
  }
  if (self.hasAddress) {
    hashCode = hashCode * 31 + [self.address hash];
  }
  if (self.hasProvince) {
    hashCode = hashCode * 31 + [self.province hash];
  }
  if (self.hasCity) {
    hashCode = hashCode * 31 + [self.city hash];
  }
  if (self.hasDistrict) {
    hashCode = hashCode * 31 + [self.district hash];
  }
  if (self.hasDistance) {
    hashCode = hashCode * 31 + [self.distance hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [self.createTime hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  if (self.hasProvinceCode) {
    hashCode = hashCode * 31 + [self.provinceCode hash];
  }
  if (self.hasCityCode) {
    hashCode = hashCode * 31 + [self.cityCode hash];
  }
  if (self.hasDistrictCode) {
    hashCode = hashCode * 31 + [self.districtCode hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Location_Builder()
@property (retain) Location* result;
@end

@implementation Location_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Location alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Location_Builder*) clear {
  self.result = [[[Location alloc] init] autorelease];
  return self;
}
- (Location_Builder*) clone {
  return [Location builderWithPrototype:result];
}
- (Location*) defaultInstance {
  return [Location defaultInstance];
}
- (Location*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Location*) buildPartial {
  Location* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Location_Builder*) mergeFrom:(Location*) other {
  if (other == [Location defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasAddress) {
    [self setAddress:other.address];
  }
  if (other.hasProvince) {
    [self setProvince:other.province];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasDistrict) {
    [self setDistrict:other.district];
  }
  if (other.hasDistance) {
    [self setDistance:other.distance];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasProvinceCode) {
    [self setProvinceCode:other.provinceCode];
  }
  if (other.hasCityCode) {
    [self setCityCode:other.cityCode];
  }
  if (other.hasDistrictCode) {
    [self setDistrictCode:other.districtCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Location_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Location_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 17: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 25: {
        [self setLongitude:[input readDouble]];
        break;
      }
      case 34: {
        [self setAddress:[input readString]];
        break;
      }
      case 42: {
        [self setProvince:[input readString]];
        break;
      }
      case 50: {
        [self setCity:[input readString]];
        break;
      }
      case 58: {
        [self setDistrict:[input readString]];
        break;
      }
      case 66: {
        [self setDistance:[input readString]];
        break;
      }
      case 74: {
        [self setCreateTime:[input readString]];
        break;
      }
      case 80: {
        [self setVersion:[input readInt32]];
        break;
      }
      case 90: {
        [self setProvinceCode:[input readString]];
        break;
      }
      case 98: {
        [self setCityCode:[input readString]];
        break;
      }
      case 106: {
        [self setDistrictCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Location_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Location_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float64) latitude {
  return result.latitude;
}
- (Location_Builder*) setLatitude:(Float64) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (Location_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return result.hasLongitude;
}
- (Float64) longitude {
  return result.longitude;
}
- (Location_Builder*) setLongitude:(Float64) value {
  result.hasLongitude = YES;
  result.longitude = value;
  return self;
}
- (Location_Builder*) clearLongitude {
  result.hasLongitude = NO;
  result.longitude = 0;
  return self;
}
- (BOOL) hasAddress {
  return result.hasAddress;
}
- (NSString*) address {
  return result.address;
}
- (Location_Builder*) setAddress:(NSString*) value {
  result.hasAddress = YES;
  result.address = value;
  return self;
}
- (Location_Builder*) clearAddress {
  result.hasAddress = NO;
  result.address = @"";
  return self;
}
- (BOOL) hasProvince {
  return result.hasProvince;
}
- (NSString*) province {
  return result.province;
}
- (Location_Builder*) setProvince:(NSString*) value {
  result.hasProvince = YES;
  result.province = value;
  return self;
}
- (Location_Builder*) clearProvince {
  result.hasProvince = NO;
  result.province = @"";
  return self;
}
- (BOOL) hasCity {
  return result.hasCity;
}
- (NSString*) city {
  return result.city;
}
- (Location_Builder*) setCity:(NSString*) value {
  result.hasCity = YES;
  result.city = value;
  return self;
}
- (Location_Builder*) clearCity {
  result.hasCity = NO;
  result.city = @"";
  return self;
}
- (BOOL) hasDistrict {
  return result.hasDistrict;
}
- (NSString*) district {
  return result.district;
}
- (Location_Builder*) setDistrict:(NSString*) value {
  result.hasDistrict = YES;
  result.district = value;
  return self;
}
- (Location_Builder*) clearDistrict {
  result.hasDistrict = NO;
  result.district = @"";
  return self;
}
- (BOOL) hasDistance {
  return result.hasDistance;
}
- (NSString*) distance {
  return result.distance;
}
- (Location_Builder*) setDistance:(NSString*) value {
  result.hasDistance = YES;
  result.distance = value;
  return self;
}
- (Location_Builder*) clearDistance {
  result.hasDistance = NO;
  result.distance = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (NSString*) createTime {
  return result.createTime;
}
- (Location_Builder*) setCreateTime:(NSString*) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (Location_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (Location_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (Location_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
- (BOOL) hasProvinceCode {
  return result.hasProvinceCode;
}
- (NSString*) provinceCode {
  return result.provinceCode;
}
- (Location_Builder*) setProvinceCode:(NSString*) value {
  result.hasProvinceCode = YES;
  result.provinceCode = value;
  return self;
}
- (Location_Builder*) clearProvinceCode {
  result.hasProvinceCode = NO;
  result.provinceCode = @"";
  return self;
}
- (BOOL) hasCityCode {
  return result.hasCityCode;
}
- (NSString*) cityCode {
  return result.cityCode;
}
- (Location_Builder*) setCityCode:(NSString*) value {
  result.hasCityCode = YES;
  result.cityCode = value;
  return self;
}
- (Location_Builder*) clearCityCode {
  result.hasCityCode = NO;
  result.cityCode = @"";
  return self;
}
- (BOOL) hasDistrictCode {
  return result.hasDistrictCode;
}
- (NSString*) districtCode {
  return result.districtCode;
}
- (Location_Builder*) setDistrictCode:(NSString*) value {
  result.hasDistrictCode = YES;
  result.districtCode = value;
  return self;
}
- (Location_Builder*) clearDistrictCode {
  result.hasDistrictCode = NO;
  result.districtCode = @"";
  return self;
}
@end

@interface SystemSetting ()
@property int32_t locationInterval;
@property int32_t customerTagQueryMax;
@property int32_t customerTagValQueryMax;
@property int32_t prodSpecQueryMax;
@property int32_t prodSpecValQueryMax;
@end

@implementation SystemSetting

- (BOOL) hasLocationInterval {
  return !!hasLocationInterval_;
}
- (void) setHasLocationInterval:(BOOL) value_ {
  hasLocationInterval_ = !!value_;
}
@synthesize locationInterval;
- (BOOL) hasCustomerTagQueryMax {
  return !!hasCustomerTagQueryMax_;
}
- (void) setHasCustomerTagQueryMax:(BOOL) value_ {
  hasCustomerTagQueryMax_ = !!value_;
}
@synthesize customerTagQueryMax;
- (BOOL) hasCustomerTagValQueryMax {
  return !!hasCustomerTagValQueryMax_;
}
- (void) setHasCustomerTagValQueryMax:(BOOL) value_ {
  hasCustomerTagValQueryMax_ = !!value_;
}
@synthesize customerTagValQueryMax;
- (BOOL) hasProdSpecQueryMax {
  return !!hasProdSpecQueryMax_;
}
- (void) setHasProdSpecQueryMax:(BOOL) value_ {
  hasProdSpecQueryMax_ = !!value_;
}
@synthesize prodSpecQueryMax;
- (BOOL) hasProdSpecValQueryMax {
  return !!hasProdSpecValQueryMax_;
}
- (void) setHasProdSpecValQueryMax:(BOOL) value_ {
  hasProdSpecValQueryMax_ = !!value_;
}
@synthesize prodSpecValQueryMax;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.locationInterval = 0;
    self.customerTagQueryMax = 0;
    self.customerTagValQueryMax = 0;
    self.prodSpecQueryMax = 0;
    self.prodSpecValQueryMax = 0;
  }
  return self;
}
static SystemSetting* defaultSystemSettingInstance = nil;
+ (void) initialize {
  if (self == [SystemSetting class]) {
    defaultSystemSettingInstance = [[SystemSetting alloc] init];
  }
}
+ (SystemSetting*) defaultInstance {
  return defaultSystemSettingInstance;
}
- (SystemSetting*) defaultInstance {
  return defaultSystemSettingInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLocationInterval) {
    [output writeInt32:1 value:self.locationInterval];
  }
  if (self.hasCustomerTagQueryMax) {
    [output writeInt32:2 value:self.customerTagQueryMax];
  }
  if (self.hasCustomerTagValQueryMax) {
    [output writeInt32:3 value:self.customerTagValQueryMax];
  }
  if (self.hasProdSpecQueryMax) {
    [output writeInt32:4 value:self.prodSpecQueryMax];
  }
  if (self.hasProdSpecValQueryMax) {
    [output writeInt32:5 value:self.prodSpecValQueryMax];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLocationInterval) {
    size_ += computeInt32Size(1, self.locationInterval);
  }
  if (self.hasCustomerTagQueryMax) {
    size_ += computeInt32Size(2, self.customerTagQueryMax);
  }
  if (self.hasCustomerTagValQueryMax) {
    size_ += computeInt32Size(3, self.customerTagValQueryMax);
  }
  if (self.hasProdSpecQueryMax) {
    size_ += computeInt32Size(4, self.prodSpecQueryMax);
  }
  if (self.hasProdSpecValQueryMax) {
    size_ += computeInt32Size(5, self.prodSpecValQueryMax);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SystemSetting*) parseFromData:(NSData*) data {
  return (SystemSetting*)[[[SystemSetting builder] mergeFromData:data] build];
}
+ (SystemSetting*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SystemSetting*)[[[SystemSetting builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SystemSetting*) parseFromInputStream:(NSInputStream*) input {
  return (SystemSetting*)[[[SystemSetting builder] mergeFromInputStream:input] build];
}
+ (SystemSetting*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SystemSetting*)[[[SystemSetting builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SystemSetting*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SystemSetting*)[[[SystemSetting builder] mergeFromCodedInputStream:input] build];
}
+ (SystemSetting*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SystemSetting*)[[[SystemSetting builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SystemSetting_Builder*) builder {
  return [[[SystemSetting_Builder alloc] init] autorelease];
}
+ (SystemSetting_Builder*) builderWithPrototype:(SystemSetting*) prototype {
  return [[SystemSetting builder] mergeFrom:prototype];
}
- (SystemSetting_Builder*) builder {
  return [SystemSetting builder];
}
- (SystemSetting_Builder*) toBuilder {
  return [SystemSetting builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLocationInterval) {
    [output appendFormat:@"%@%@: %@\n", indent, @"locationInterval", [NSNumber numberWithInt:self.locationInterval]];
  }
  if (self.hasCustomerTagQueryMax) {
    [output appendFormat:@"%@%@: %@\n", indent, @"customerTagQueryMax", [NSNumber numberWithInt:self.customerTagQueryMax]];
  }
  if (self.hasCustomerTagValQueryMax) {
    [output appendFormat:@"%@%@: %@\n", indent, @"customerTagValQueryMax", [NSNumber numberWithInt:self.customerTagValQueryMax]];
  }
  if (self.hasProdSpecQueryMax) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prodSpecQueryMax", [NSNumber numberWithInt:self.prodSpecQueryMax]];
  }
  if (self.hasProdSpecValQueryMax) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prodSpecValQueryMax", [NSNumber numberWithInt:self.prodSpecValQueryMax]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SystemSetting class]]) {
    return NO;
  }
  SystemSetting *otherMessage = other;
  return
      self.hasLocationInterval == otherMessage.hasLocationInterval &&
      (!self.hasLocationInterval || self.locationInterval == otherMessage.locationInterval) &&
      self.hasCustomerTagQueryMax == otherMessage.hasCustomerTagQueryMax &&
      (!self.hasCustomerTagQueryMax || self.customerTagQueryMax == otherMessage.customerTagQueryMax) &&
      self.hasCustomerTagValQueryMax == otherMessage.hasCustomerTagValQueryMax &&
      (!self.hasCustomerTagValQueryMax || self.customerTagValQueryMax == otherMessage.customerTagValQueryMax) &&
      self.hasProdSpecQueryMax == otherMessage.hasProdSpecQueryMax &&
      (!self.hasProdSpecQueryMax || self.prodSpecQueryMax == otherMessage.prodSpecQueryMax) &&
      self.hasProdSpecValQueryMax == otherMessage.hasProdSpecValQueryMax &&
      (!self.hasProdSpecValQueryMax || self.prodSpecValQueryMax == otherMessage.prodSpecValQueryMax) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLocationInterval) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.locationInterval] hash];
  }
  if (self.hasCustomerTagQueryMax) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.customerTagQueryMax] hash];
  }
  if (self.hasCustomerTagValQueryMax) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.customerTagValQueryMax] hash];
  }
  if (self.hasProdSpecQueryMax) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.prodSpecQueryMax] hash];
  }
  if (self.hasProdSpecValQueryMax) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.prodSpecValQueryMax] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SystemSetting_Builder()
@property (retain) SystemSetting* result;
@end

@implementation SystemSetting_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SystemSetting alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SystemSetting_Builder*) clear {
  self.result = [[[SystemSetting alloc] init] autorelease];
  return self;
}
- (SystemSetting_Builder*) clone {
  return [SystemSetting builderWithPrototype:result];
}
- (SystemSetting*) defaultInstance {
  return [SystemSetting defaultInstance];
}
- (SystemSetting*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SystemSetting*) buildPartial {
  SystemSetting* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SystemSetting_Builder*) mergeFrom:(SystemSetting*) other {
  if (other == [SystemSetting defaultInstance]) {
    return self;
  }
  if (other.hasLocationInterval) {
    [self setLocationInterval:other.locationInterval];
  }
  if (other.hasCustomerTagQueryMax) {
    [self setCustomerTagQueryMax:other.customerTagQueryMax];
  }
  if (other.hasCustomerTagValQueryMax) {
    [self setCustomerTagValQueryMax:other.customerTagValQueryMax];
  }
  if (other.hasProdSpecQueryMax) {
    [self setProdSpecQueryMax:other.prodSpecQueryMax];
  }
  if (other.hasProdSpecValQueryMax) {
    [self setProdSpecValQueryMax:other.prodSpecValQueryMax];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SystemSetting_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SystemSetting_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLocationInterval:[input readInt32]];
        break;
      }
      case 16: {
        [self setCustomerTagQueryMax:[input readInt32]];
        break;
      }
      case 24: {
        [self setCustomerTagValQueryMax:[input readInt32]];
        break;
      }
      case 32: {
        [self setProdSpecQueryMax:[input readInt32]];
        break;
      }
      case 40: {
        [self setProdSpecValQueryMax:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasLocationInterval {
  return result.hasLocationInterval;
}
- (int32_t) locationInterval {
  return result.locationInterval;
}
- (SystemSetting_Builder*) setLocationInterval:(int32_t) value {
  result.hasLocationInterval = YES;
  result.locationInterval = value;
  return self;
}
- (SystemSetting_Builder*) clearLocationInterval {
  result.hasLocationInterval = NO;
  result.locationInterval = 0;
  return self;
}
- (BOOL) hasCustomerTagQueryMax {
  return result.hasCustomerTagQueryMax;
}
- (int32_t) customerTagQueryMax {
  return result.customerTagQueryMax;
}
- (SystemSetting_Builder*) setCustomerTagQueryMax:(int32_t) value {
  result.hasCustomerTagQueryMax = YES;
  result.customerTagQueryMax = value;
  return self;
}
- (SystemSetting_Builder*) clearCustomerTagQueryMax {
  result.hasCustomerTagQueryMax = NO;
  result.customerTagQueryMax = 0;
  return self;
}
- (BOOL) hasCustomerTagValQueryMax {
  return result.hasCustomerTagValQueryMax;
}
- (int32_t) customerTagValQueryMax {
  return result.customerTagValQueryMax;
}
- (SystemSetting_Builder*) setCustomerTagValQueryMax:(int32_t) value {
  result.hasCustomerTagValQueryMax = YES;
  result.customerTagValQueryMax = value;
  return self;
}
- (SystemSetting_Builder*) clearCustomerTagValQueryMax {
  result.hasCustomerTagValQueryMax = NO;
  result.customerTagValQueryMax = 0;
  return self;
}
- (BOOL) hasProdSpecQueryMax {
  return result.hasProdSpecQueryMax;
}
- (int32_t) prodSpecQueryMax {
  return result.prodSpecQueryMax;
}
- (SystemSetting_Builder*) setProdSpecQueryMax:(int32_t) value {
  result.hasProdSpecQueryMax = YES;
  result.prodSpecQueryMax = value;
  return self;
}
- (SystemSetting_Builder*) clearProdSpecQueryMax {
  result.hasProdSpecQueryMax = NO;
  result.prodSpecQueryMax = 0;
  return self;
}
- (BOOL) hasProdSpecValQueryMax {
  return result.hasProdSpecValQueryMax;
}
- (int32_t) prodSpecValQueryMax {
  return result.prodSpecValQueryMax;
}
- (SystemSetting_Builder*) setProdSpecValQueryMax:(int32_t) value {
  result.hasProdSpecValQueryMax = YES;
  result.prodSpecValQueryMax = value;
  return self;
}
- (SystemSetting_Builder*) clearProdSpecValQueryMax {
  result.hasProdSpecValQueryMax = NO;
  result.prodSpecValQueryMax = 0;
  return self;
}
@end

@interface AppSetting ()
@property (retain) NSString* appTitle;
@end

@implementation AppSetting

- (BOOL) hasAppTitle {
  return !!hasAppTitle_;
}
- (void) setHasAppTitle:(BOOL) value_ {
  hasAppTitle_ = !!value_;
}
@synthesize appTitle;
- (void) dealloc {
  self.appTitle = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.appTitle = @"";
  }
  return self;
}
static AppSetting* defaultAppSettingInstance = nil;
+ (void) initialize {
  if (self == [AppSetting class]) {
    defaultAppSettingInstance = [[AppSetting alloc] init];
  }
}
+ (AppSetting*) defaultInstance {
  return defaultAppSettingInstance;
}
- (AppSetting*) defaultInstance {
  return defaultAppSettingInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAppTitle) {
    [output writeString:1 value:self.appTitle];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAppTitle) {
    size_ += computeStringSize(1, self.appTitle);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AppSetting*) parseFromData:(NSData*) data {
  return (AppSetting*)[[[AppSetting builder] mergeFromData:data] build];
}
+ (AppSetting*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSetting*)[[[AppSetting builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AppSetting*) parseFromInputStream:(NSInputStream*) input {
  return (AppSetting*)[[[AppSetting builder] mergeFromInputStream:input] build];
}
+ (AppSetting*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSetting*)[[[AppSetting builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSetting*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AppSetting*)[[[AppSetting builder] mergeFromCodedInputStream:input] build];
}
+ (AppSetting*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSetting*)[[[AppSetting builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSetting_Builder*) builder {
  return [[[AppSetting_Builder alloc] init] autorelease];
}
+ (AppSetting_Builder*) builderWithPrototype:(AppSetting*) prototype {
  return [[AppSetting builder] mergeFrom:prototype];
}
- (AppSetting_Builder*) builder {
  return [AppSetting builder];
}
- (AppSetting_Builder*) toBuilder {
  return [AppSetting builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAppTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appTitle", self.appTitle];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AppSetting class]]) {
    return NO;
  }
  AppSetting *otherMessage = other;
  return
      self.hasAppTitle == otherMessage.hasAppTitle &&
      (!self.hasAppTitle || [self.appTitle isEqual:otherMessage.appTitle]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAppTitle) {
    hashCode = hashCode * 31 + [self.appTitle hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AppSetting_Builder()
@property (retain) AppSetting* result;
@end

@implementation AppSetting_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AppSetting alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AppSetting_Builder*) clear {
  self.result = [[[AppSetting alloc] init] autorelease];
  return self;
}
- (AppSetting_Builder*) clone {
  return [AppSetting builderWithPrototype:result];
}
- (AppSetting*) defaultInstance {
  return [AppSetting defaultInstance];
}
- (AppSetting*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AppSetting*) buildPartial {
  AppSetting* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AppSetting_Builder*) mergeFrom:(AppSetting*) other {
  if (other == [AppSetting defaultInstance]) {
    return self;
  }
  if (other.hasAppTitle) {
    [self setAppTitle:other.appTitle];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AppSetting_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AppSetting_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAppTitle:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAppTitle {
  return result.hasAppTitle;
}
- (NSString*) appTitle {
  return result.appTitle;
}
- (AppSetting_Builder*) setAppTitle:(NSString*) value {
  result.hasAppTitle = YES;
  result.appTitle = value;
  return self;
}
- (AppSetting_Builder*) clearAppTitle {
  result.hasAppTitle = NO;
  result.appTitle = @"";
  return self;
}
@end

@interface Function ()
@property int32_t id;
@property (retain) NSString* name;
@property (retain) NSString* value;
@end

@implementation Function

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
  hasValue_ = !!value_;
}
@synthesize value;
- (void) dealloc {
  self.name = nil;
  self.value = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.value = @"";
  }
  return self;
}
static Function* defaultFunctionInstance = nil;
+ (void) initialize {
  if (self == [Function class]) {
    defaultFunctionInstance = [[Function alloc] init];
  }
}
+ (Function*) defaultInstance {
  return defaultFunctionInstance;
}
- (Function*) defaultInstance {
  return defaultFunctionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasValue) {
    [output writeString:3 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasValue) {
    size_ += computeStringSize(3, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Function*) parseFromData:(NSData*) data {
  return (Function*)[[[Function builder] mergeFromData:data] build];
}
+ (Function*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Function*)[[[Function builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Function*) parseFromInputStream:(NSInputStream*) input {
  return (Function*)[[[Function builder] mergeFromInputStream:input] build];
}
+ (Function*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Function*)[[[Function builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Function*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Function*)[[[Function builder] mergeFromCodedInputStream:input] build];
}
+ (Function*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Function*)[[[Function builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Function_Builder*) builder {
  return [[[Function_Builder alloc] init] autorelease];
}
+ (Function_Builder*) builderWithPrototype:(Function*) prototype {
  return [[Function builder] mergeFrom:prototype];
}
- (Function_Builder*) builder {
  return [Function builder];
}
- (Function_Builder*) toBuilder {
  return [Function builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Function class]]) {
    return NO;
  }
  Function *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Function_Builder()
@property (retain) Function* result;
@end

@implementation Function_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Function alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Function_Builder*) clear {
  self.result = [[[Function alloc] init] autorelease];
  return self;
}
- (Function_Builder*) clone {
  return [Function builderWithPrototype:result];
}
- (Function*) defaultInstance {
  return [Function defaultInstance];
}
- (Function*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Function*) buildPartial {
  Function* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Function_Builder*) mergeFrom:(Function*) other {
  if (other == [Function defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Function_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Function_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Function_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Function_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Function_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Function_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSString*) value {
  return result.value;
}
- (Function_Builder*) setValue:(NSString*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (Function_Builder*) clearValue {
  result.hasValue = NO;
  result.value = @"";
  return self;
}
@end

