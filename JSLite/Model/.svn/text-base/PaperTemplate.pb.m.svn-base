// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PaperTemplate.pb.h"

@implementation PaperTemplateRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PaperTemplateRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PaperTemplate ()
@property (retain) NSString* id;
@property (retain) NSString* name;
@property (retain) User* createUser;
@property int32_t fieldCount;
@property (retain) NSString* fieldContent;
@property int32_t totalRecords;
@end

@implementation PaperTemplate

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasCreateUser {
  return !!hasCreateUser_;
}
- (void) setHasCreateUser:(BOOL) value_ {
  hasCreateUser_ = !!value_;
}
@synthesize createUser;
- (BOOL) hasFieldCount {
  return !!hasFieldCount_;
}
- (void) setHasFieldCount:(BOOL) value_ {
  hasFieldCount_ = !!value_;
}
@synthesize fieldCount;
- (BOOL) hasFieldContent {
  return !!hasFieldContent_;
}
- (void) setHasFieldContent:(BOOL) value_ {
  hasFieldContent_ = !!value_;
}
@synthesize fieldContent;
- (BOOL) hasTotalRecords {
  return !!hasTotalRecords_;
}
- (void) setHasTotalRecords:(BOOL) value_ {
  hasTotalRecords_ = !!value_;
}
@synthesize totalRecords;
- (void) dealloc {
  self.id = nil;
  self.name = nil;
  self.createUser = nil;
  self.fieldContent = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
    self.createUser = [User defaultInstance];
    self.fieldCount = 0;
    self.fieldContent = @"";
    self.totalRecords = 0;
  }
  return self;
}
static PaperTemplate* defaultPaperTemplateInstance = nil;
+ (void) initialize {
  if (self == [PaperTemplate class]) {
    defaultPaperTemplateInstance = [[PaperTemplate alloc] init];
  }
}
+ (PaperTemplate*) defaultInstance {
  return defaultPaperTemplateInstance;
}
- (PaperTemplate*) defaultInstance {
  return defaultPaperTemplateInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasFieldContent) {
    return NO;
  }
  if (self.hasCreateUser) {
    if (!self.createUser.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCreateUser) {
    [output writeMessage:3 value:self.createUser];
  }
  if (self.hasFieldCount) {
    [output writeInt32:4 value:self.fieldCount];
  }
  if (self.hasFieldContent) {
    [output writeString:5 value:self.fieldContent];
  }
  if (self.hasTotalRecords) {
    [output writeInt32:6 value:self.totalRecords];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasCreateUser) {
    size_ += computeMessageSize(3, self.createUser);
  }
  if (self.hasFieldCount) {
    size_ += computeInt32Size(4, self.fieldCount);
  }
  if (self.hasFieldContent) {
    size_ += computeStringSize(5, self.fieldContent);
  }
  if (self.hasTotalRecords) {
    size_ += computeInt32Size(6, self.totalRecords);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PaperTemplate*) parseFromData:(NSData*) data {
  return (PaperTemplate*)[[[PaperTemplate builder] mergeFromData:data] build];
}
+ (PaperTemplate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperTemplate*)[[[PaperTemplate builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PaperTemplate*) parseFromInputStream:(NSInputStream*) input {
  return (PaperTemplate*)[[[PaperTemplate builder] mergeFromInputStream:input] build];
}
+ (PaperTemplate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperTemplate*)[[[PaperTemplate builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperTemplate*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PaperTemplate*)[[[PaperTemplate builder] mergeFromCodedInputStream:input] build];
}
+ (PaperTemplate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PaperTemplate*)[[[PaperTemplate builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PaperTemplate_Builder*) builder {
  return [[[PaperTemplate_Builder alloc] init] autorelease];
}
+ (PaperTemplate_Builder*) builderWithPrototype:(PaperTemplate*) prototype {
  return [[PaperTemplate builder] mergeFrom:prototype];
}
- (PaperTemplate_Builder*) builder {
  return [PaperTemplate builder];
}
- (PaperTemplate_Builder*) toBuilder {
  return [PaperTemplate builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCreateUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"createUser"];
    [self.createUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFieldCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fieldCount", [NSNumber numberWithInt:self.fieldCount]];
  }
  if (self.hasFieldContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fieldContent", self.fieldContent];
  }
  if (self.hasTotalRecords) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalRecords", [NSNumber numberWithInt:self.totalRecords]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PaperTemplate class]]) {
    return NO;
  }
  PaperTemplate *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCreateUser == otherMessage.hasCreateUser &&
      (!self.hasCreateUser || [self.createUser isEqual:otherMessage.createUser]) &&
      self.hasFieldCount == otherMessage.hasFieldCount &&
      (!self.hasFieldCount || self.fieldCount == otherMessage.fieldCount) &&
      self.hasFieldContent == otherMessage.hasFieldContent &&
      (!self.hasFieldContent || [self.fieldContent isEqual:otherMessage.fieldContent]) &&
      self.hasTotalRecords == otherMessage.hasTotalRecords &&
      (!self.hasTotalRecords || self.totalRecords == otherMessage.totalRecords) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCreateUser) {
    hashCode = hashCode * 31 + [self.createUser hash];
  }
  if (self.hasFieldCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.fieldCount] hash];
  }
  if (self.hasFieldContent) {
    hashCode = hashCode * 31 + [self.fieldContent hash];
  }
  if (self.hasTotalRecords) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalRecords] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PaperTemplate_Builder()
@property (retain) PaperTemplate* result;
@end

@implementation PaperTemplate_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PaperTemplate alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PaperTemplate_Builder*) clear {
  self.result = [[[PaperTemplate alloc] init] autorelease];
  return self;
}
- (PaperTemplate_Builder*) clone {
  return [PaperTemplate builderWithPrototype:result];
}
- (PaperTemplate*) defaultInstance {
  return [PaperTemplate defaultInstance];
}
- (PaperTemplate*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PaperTemplate*) buildPartial {
  PaperTemplate* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PaperTemplate_Builder*) mergeFrom:(PaperTemplate*) other {
  if (other == [PaperTemplate defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCreateUser) {
    [self mergeCreateUser:other.createUser];
  }
  if (other.hasFieldCount) {
    [self setFieldCount:other.fieldCount];
  }
  if (other.hasFieldContent) {
    [self setFieldContent:other.fieldContent];
  }
  if (other.hasTotalRecords) {
    [self setTotalRecords:other.totalRecords];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PaperTemplate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PaperTemplate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        User_Builder* subBuilder = [User builder];
        if (self.hasCreateUser) {
          [subBuilder mergeFrom:self.createUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreateUser:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setFieldCount:[input readInt32]];
        break;
      }
      case 42: {
        [self setFieldContent:[input readString]];
        break;
      }
      case 48: {
        [self setTotalRecords:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (PaperTemplate_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PaperTemplate_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PaperTemplate_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PaperTemplate_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCreateUser {
  return result.hasCreateUser;
}
- (User*) createUser {
  return result.createUser;
}
- (PaperTemplate_Builder*) setCreateUser:(User*) value {
  result.hasCreateUser = YES;
  result.createUser = value;
  return self;
}
- (PaperTemplate_Builder*) setCreateUserBuilder:(User_Builder*) builderForValue {
  return [self setCreateUser:[builderForValue build]];
}
- (PaperTemplate_Builder*) mergeCreateUser:(User*) value {
  if (result.hasCreateUser &&
      result.createUser != [User defaultInstance]) {
    result.createUser =
      [[[User builderWithPrototype:result.createUser] mergeFrom:value] buildPartial];
  } else {
    result.createUser = value;
  }
  result.hasCreateUser = YES;
  return self;
}
- (PaperTemplate_Builder*) clearCreateUser {
  result.hasCreateUser = NO;
  result.createUser = [User defaultInstance];
  return self;
}
- (BOOL) hasFieldCount {
  return result.hasFieldCount;
}
- (int32_t) fieldCount {
  return result.fieldCount;
}
- (PaperTemplate_Builder*) setFieldCount:(int32_t) value {
  result.hasFieldCount = YES;
  result.fieldCount = value;
  return self;
}
- (PaperTemplate_Builder*) clearFieldCount {
  result.hasFieldCount = NO;
  result.fieldCount = 0;
  return self;
}
- (BOOL) hasFieldContent {
  return result.hasFieldContent;
}
- (NSString*) fieldContent {
  return result.fieldContent;
}
- (PaperTemplate_Builder*) setFieldContent:(NSString*) value {
  result.hasFieldContent = YES;
  result.fieldContent = value;
  return self;
}
- (PaperTemplate_Builder*) clearFieldContent {
  result.hasFieldContent = NO;
  result.fieldContent = @"";
  return self;
}
- (BOOL) hasTotalRecords {
  return result.hasTotalRecords;
}
- (int32_t) totalRecords {
  return result.totalRecords;
}
- (PaperTemplate_Builder*) setTotalRecords:(int32_t) value {
  result.hasTotalRecords = YES;
  result.totalRecords = value;
  return self;
}
- (PaperTemplate_Builder*) clearTotalRecords {
  result.hasTotalRecords = NO;
  result.totalRecords = 0;
  return self;
}
@end

