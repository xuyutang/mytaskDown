// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "BusinessOpportunity.pb.h"

@implementation BusinessOpportunityRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BusinessOpportunityRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GenericRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    [CustomerRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface BusinessOpportunity ()
@property int32_t id;
@property (retain) User* user;
@property (retain) Customer* customer;
@property (retain) NSString* bizOppName;
@property (retain) NSString* bizOppSummary;
@property (retain) NSString* bizOppDecision;
@property (retain) NSString* bizOppPrincipal;
@property (retain) NSString* bizOppRemark;
@property (retain) NSString* actionPlan;
@property (retain) NSString* expectedCost;
@property (retain) NSString* expectedSignTime;
@property (retain) NSString* createDate;
@property (retain) Location* location;
@property (retain) PBAppendableArray * businessOpportunityRepliesArray;
@property int32_t replyCount;
@property int32_t version;
@end

@implementation BusinessOpportunity

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasCustomer {
  return !!hasCustomer_;
}
- (void) setHasCustomer:(BOOL) value_ {
  hasCustomer_ = !!value_;
}
@synthesize customer;
- (BOOL) hasBizOppName {
  return !!hasBizOppName_;
}
- (void) setHasBizOppName:(BOOL) value_ {
  hasBizOppName_ = !!value_;
}
@synthesize bizOppName;
- (BOOL) hasBizOppSummary {
  return !!hasBizOppSummary_;
}
- (void) setHasBizOppSummary:(BOOL) value_ {
  hasBizOppSummary_ = !!value_;
}
@synthesize bizOppSummary;
- (BOOL) hasBizOppDecision {
  return !!hasBizOppDecision_;
}
- (void) setHasBizOppDecision:(BOOL) value_ {
  hasBizOppDecision_ = !!value_;
}
@synthesize bizOppDecision;
- (BOOL) hasBizOppPrincipal {
  return !!hasBizOppPrincipal_;
}
- (void) setHasBizOppPrincipal:(BOOL) value_ {
  hasBizOppPrincipal_ = !!value_;
}
@synthesize bizOppPrincipal;
- (BOOL) hasBizOppRemark {
  return !!hasBizOppRemark_;
}
- (void) setHasBizOppRemark:(BOOL) value_ {
  hasBizOppRemark_ = !!value_;
}
@synthesize bizOppRemark;
- (BOOL) hasActionPlan {
  return !!hasActionPlan_;
}
- (void) setHasActionPlan:(BOOL) value_ {
  hasActionPlan_ = !!value_;
}
@synthesize actionPlan;
- (BOOL) hasExpectedCost {
  return !!hasExpectedCost_;
}
- (void) setHasExpectedCost:(BOOL) value_ {
  hasExpectedCost_ = !!value_;
}
@synthesize expectedCost;
- (BOOL) hasExpectedSignTime {
  return !!hasExpectedSignTime_;
}
- (void) setHasExpectedSignTime:(BOOL) value_ {
  hasExpectedSignTime_ = !!value_;
}
@synthesize expectedSignTime;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value_ {
  hasLocation_ = !!value_;
}
@synthesize location;
@synthesize businessOpportunityRepliesArray;
@dynamic businessOpportunityReplies;
- (BOOL) hasReplyCount {
  return !!hasReplyCount_;
}
- (void) setHasReplyCount:(BOOL) value_ {
  hasReplyCount_ = !!value_;
}
@synthesize replyCount;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  self.user = nil;
  self.customer = nil;
  self.bizOppName = nil;
  self.bizOppSummary = nil;
  self.bizOppDecision = nil;
  self.bizOppPrincipal = nil;
  self.bizOppRemark = nil;
  self.actionPlan = nil;
  self.expectedCost = nil;
  self.expectedSignTime = nil;
  self.createDate = nil;
  self.location = nil;
  self.businessOpportunityRepliesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.user = [User defaultInstance];
    self.customer = [Customer defaultInstance];
    self.bizOppName = @"";
    self.bizOppSummary = @"";
    self.bizOppDecision = @"";
    self.bizOppPrincipal = @"";
    self.bizOppRemark = @"";
    self.actionPlan = @"";
    self.expectedCost = @"";
    self.expectedSignTime = @"";
    self.createDate = @"";
    self.location = [Location defaultInstance];
    self.replyCount = 0;
    self.version = 1;
  }
  return self;
}
static BusinessOpportunity* defaultBusinessOpportunityInstance = nil;
+ (void) initialize {
  if (self == [BusinessOpportunity class]) {
    defaultBusinessOpportunityInstance = [[BusinessOpportunity alloc] init];
  }
}
+ (BusinessOpportunity*) defaultInstance {
  return defaultBusinessOpportunityInstance;
}
- (BusinessOpportunity*) defaultInstance {
  return defaultBusinessOpportunityInstance;
}
- (PBArray *)businessOpportunityReplies {
  return businessOpportunityRepliesArray;
}
- (BusinessOpportunityReply*)businessOpportunityRepliesAtIndex:(NSUInteger)index {
  return [businessOpportunityRepliesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  if (self.hasCustomer) {
    if (!self.customer.isInitialized) {
      return NO;
    }
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  for (BusinessOpportunityReply* element in self.businessOpportunityReplies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasCustomer) {
    [output writeMessage:3 value:self.customer];
  }
  if (self.hasBizOppName) {
    [output writeString:4 value:self.bizOppName];
  }
  if (self.hasBizOppSummary) {
    [output writeString:5 value:self.bizOppSummary];
  }
  if (self.hasBizOppDecision) {
    [output writeString:6 value:self.bizOppDecision];
  }
  if (self.hasBizOppPrincipal) {
    [output writeString:7 value:self.bizOppPrincipal];
  }
  if (self.hasBizOppRemark) {
    [output writeString:8 value:self.bizOppRemark];
  }
  if (self.hasActionPlan) {
    [output writeString:9 value:self.actionPlan];
  }
  if (self.hasExpectedCost) {
    [output writeString:10 value:self.expectedCost];
  }
  if (self.hasExpectedSignTime) {
    [output writeString:11 value:self.expectedSignTime];
  }
  if (self.hasCreateDate) {
    [output writeString:12 value:self.createDate];
  }
  if (self.hasLocation) {
    [output writeMessage:13 value:self.location];
  }
  for (BusinessOpportunityReply *element in self.businessOpportunityRepliesArray) {
    [output writeMessage:14 value:element];
  }
  if (self.hasReplyCount) {
    [output writeInt32:15 value:self.replyCount];
  }
  if (self.hasVersion) {
    [output writeInt32:16 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  if (self.hasCustomer) {
    size_ += computeMessageSize(3, self.customer);
  }
  if (self.hasBizOppName) {
    size_ += computeStringSize(4, self.bizOppName);
  }
  if (self.hasBizOppSummary) {
    size_ += computeStringSize(5, self.bizOppSummary);
  }
  if (self.hasBizOppDecision) {
    size_ += computeStringSize(6, self.bizOppDecision);
  }
  if (self.hasBizOppPrincipal) {
    size_ += computeStringSize(7, self.bizOppPrincipal);
  }
  if (self.hasBizOppRemark) {
    size_ += computeStringSize(8, self.bizOppRemark);
  }
  if (self.hasActionPlan) {
    size_ += computeStringSize(9, self.actionPlan);
  }
  if (self.hasExpectedCost) {
    size_ += computeStringSize(10, self.expectedCost);
  }
  if (self.hasExpectedSignTime) {
    size_ += computeStringSize(11, self.expectedSignTime);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(12, self.createDate);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(13, self.location);
  }
  for (BusinessOpportunityReply *element in self.businessOpportunityRepliesArray) {
    size_ += computeMessageSize(14, element);
  }
  if (self.hasReplyCount) {
    size_ += computeInt32Size(15, self.replyCount);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(16, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BusinessOpportunity*) parseFromData:(NSData*) data {
  return (BusinessOpportunity*)[[[BusinessOpportunity builder] mergeFromData:data] build];
}
+ (BusinessOpportunity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunity*)[[[BusinessOpportunity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunity*) parseFromInputStream:(NSInputStream*) input {
  return (BusinessOpportunity*)[[[BusinessOpportunity builder] mergeFromInputStream:input] build];
}
+ (BusinessOpportunity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunity*)[[[BusinessOpportunity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BusinessOpportunity*)[[[BusinessOpportunity builder] mergeFromCodedInputStream:input] build];
}
+ (BusinessOpportunity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunity*)[[[BusinessOpportunity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunity_Builder*) builder {
  return [[[BusinessOpportunity_Builder alloc] init] autorelease];
}
+ (BusinessOpportunity_Builder*) builderWithPrototype:(BusinessOpportunity*) prototype {
  return [[BusinessOpportunity builder] mergeFrom:prototype];
}
- (BusinessOpportunity_Builder*) builder {
  return [BusinessOpportunity builder];
}
- (BusinessOpportunity_Builder*) toBuilder {
  return [BusinessOpportunity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCustomer) {
    [output appendFormat:@"%@%@ {\n", indent, @"customer"];
    [self.customer writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBizOppName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bizOppName", self.bizOppName];
  }
  if (self.hasBizOppSummary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bizOppSummary", self.bizOppSummary];
  }
  if (self.hasBizOppDecision) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bizOppDecision", self.bizOppDecision];
  }
  if (self.hasBizOppPrincipal) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bizOppPrincipal", self.bizOppPrincipal];
  }
  if (self.hasBizOppRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bizOppRemark", self.bizOppRemark];
  }
  if (self.hasActionPlan) {
    [output appendFormat:@"%@%@: %@\n", indent, @"actionPlan", self.actionPlan];
  }
  if (self.hasExpectedCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expectedCost", self.expectedCost];
  }
  if (self.hasExpectedSignTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expectedSignTime", self.expectedSignTime];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (BusinessOpportunityReply* element in self.businessOpportunityRepliesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessOpportunityReplies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasReplyCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyCount", [NSNumber numberWithInt:self.replyCount]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BusinessOpportunity class]]) {
    return NO;
  }
  BusinessOpportunity *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasCustomer == otherMessage.hasCustomer &&
      (!self.hasCustomer || [self.customer isEqual:otherMessage.customer]) &&
      self.hasBizOppName == otherMessage.hasBizOppName &&
      (!self.hasBizOppName || [self.bizOppName isEqual:otherMessage.bizOppName]) &&
      self.hasBizOppSummary == otherMessage.hasBizOppSummary &&
      (!self.hasBizOppSummary || [self.bizOppSummary isEqual:otherMessage.bizOppSummary]) &&
      self.hasBizOppDecision == otherMessage.hasBizOppDecision &&
      (!self.hasBizOppDecision || [self.bizOppDecision isEqual:otherMessage.bizOppDecision]) &&
      self.hasBizOppPrincipal == otherMessage.hasBizOppPrincipal &&
      (!self.hasBizOppPrincipal || [self.bizOppPrincipal isEqual:otherMessage.bizOppPrincipal]) &&
      self.hasBizOppRemark == otherMessage.hasBizOppRemark &&
      (!self.hasBizOppRemark || [self.bizOppRemark isEqual:otherMessage.bizOppRemark]) &&
      self.hasActionPlan == otherMessage.hasActionPlan &&
      (!self.hasActionPlan || [self.actionPlan isEqual:otherMessage.actionPlan]) &&
      self.hasExpectedCost == otherMessage.hasExpectedCost &&
      (!self.hasExpectedCost || [self.expectedCost isEqual:otherMessage.expectedCost]) &&
      self.hasExpectedSignTime == otherMessage.hasExpectedSignTime &&
      (!self.hasExpectedSignTime || [self.expectedSignTime isEqual:otherMessage.expectedSignTime]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      [self.businessOpportunityRepliesArray isEqualToArray:otherMessage.businessOpportunityRepliesArray] &&
      self.hasReplyCount == otherMessage.hasReplyCount &&
      (!self.hasReplyCount || self.replyCount == otherMessage.replyCount) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasCustomer) {
    hashCode = hashCode * 31 + [self.customer hash];
  }
  if (self.hasBizOppName) {
    hashCode = hashCode * 31 + [self.bizOppName hash];
  }
  if (self.hasBizOppSummary) {
    hashCode = hashCode * 31 + [self.bizOppSummary hash];
  }
  if (self.hasBizOppDecision) {
    hashCode = hashCode * 31 + [self.bizOppDecision hash];
  }
  if (self.hasBizOppPrincipal) {
    hashCode = hashCode * 31 + [self.bizOppPrincipal hash];
  }
  if (self.hasBizOppRemark) {
    hashCode = hashCode * 31 + [self.bizOppRemark hash];
  }
  if (self.hasActionPlan) {
    hashCode = hashCode * 31 + [self.actionPlan hash];
  }
  if (self.hasExpectedCost) {
    hashCode = hashCode * 31 + [self.expectedCost hash];
  }
  if (self.hasExpectedSignTime) {
    hashCode = hashCode * 31 + [self.expectedSignTime hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  for (BusinessOpportunityReply* element in self.businessOpportunityRepliesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasReplyCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.replyCount] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BusinessOpportunity_Builder()
@property (retain) BusinessOpportunity* result;
@end

@implementation BusinessOpportunity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BusinessOpportunity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BusinessOpportunity_Builder*) clear {
  self.result = [[[BusinessOpportunity alloc] init] autorelease];
  return self;
}
- (BusinessOpportunity_Builder*) clone {
  return [BusinessOpportunity builderWithPrototype:result];
}
- (BusinessOpportunity*) defaultInstance {
  return [BusinessOpportunity defaultInstance];
}
- (BusinessOpportunity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BusinessOpportunity*) buildPartial {
  BusinessOpportunity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BusinessOpportunity_Builder*) mergeFrom:(BusinessOpportunity*) other {
  if (other == [BusinessOpportunity defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasCustomer) {
    [self mergeCustomer:other.customer];
  }
  if (other.hasBizOppName) {
    [self setBizOppName:other.bizOppName];
  }
  if (other.hasBizOppSummary) {
    [self setBizOppSummary:other.bizOppSummary];
  }
  if (other.hasBizOppDecision) {
    [self setBizOppDecision:other.bizOppDecision];
  }
  if (other.hasBizOppPrincipal) {
    [self setBizOppPrincipal:other.bizOppPrincipal];
  }
  if (other.hasBizOppRemark) {
    [self setBizOppRemark:other.bizOppRemark];
  }
  if (other.hasActionPlan) {
    [self setActionPlan:other.actionPlan];
  }
  if (other.hasExpectedCost) {
    [self setExpectedCost:other.expectedCost];
  }
  if (other.hasExpectedSignTime) {
    [self setExpectedSignTime:other.expectedSignTime];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.businessOpportunityRepliesArray.count > 0) {
    if (result.businessOpportunityRepliesArray == nil) {
      result.businessOpportunityRepliesArray = [[other.businessOpportunityRepliesArray copyWithZone:[other.businessOpportunityRepliesArray zone]] autorelease];
    } else {
      [result.businessOpportunityRepliesArray appendArray:other.businessOpportunityRepliesArray];
    }
  }
  if (other.hasReplyCount) {
    [self setReplyCount:other.replyCount];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BusinessOpportunity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BusinessOpportunity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Customer_Builder* subBuilder = [Customer builder];
        if (self.hasCustomer) {
          [subBuilder mergeFrom:self.customer];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCustomer:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setBizOppName:[input readString]];
        break;
      }
      case 42: {
        [self setBizOppSummary:[input readString]];
        break;
      }
      case 50: {
        [self setBizOppDecision:[input readString]];
        break;
      }
      case 58: {
        [self setBizOppPrincipal:[input readString]];
        break;
      }
      case 66: {
        [self setBizOppRemark:[input readString]];
        break;
      }
      case 74: {
        [self setActionPlan:[input readString]];
        break;
      }
      case 82: {
        [self setExpectedCost:[input readString]];
        break;
      }
      case 90: {
        [self setExpectedSignTime:[input readString]];
        break;
      }
      case 98: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 106: {
        Location_Builder* subBuilder = [Location builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        BusinessOpportunityReply_Builder* subBuilder = [BusinessOpportunityReply builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBusinessOpportunityReplies:[subBuilder buildPartial]];
        break;
      }
      case 120: {
        [self setReplyCount:[input readInt32]];
        break;
      }
      case 128: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (BusinessOpportunity_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (BusinessOpportunity_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (BusinessOpportunity_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (BusinessOpportunity_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (BusinessOpportunity_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasCustomer {
  return result.hasCustomer;
}
- (Customer*) customer {
  return result.customer;
}
- (BusinessOpportunity_Builder*) setCustomer:(Customer*) value {
  result.hasCustomer = YES;
  result.customer = value;
  return self;
}
- (BusinessOpportunity_Builder*) setCustomerBuilder:(Customer_Builder*) builderForValue {
  return [self setCustomer:[builderForValue build]];
}
- (BusinessOpportunity_Builder*) mergeCustomer:(Customer*) value {
  if (result.hasCustomer &&
      result.customer != [Customer defaultInstance]) {
    result.customer =
      [[[Customer builderWithPrototype:result.customer] mergeFrom:value] buildPartial];
  } else {
    result.customer = value;
  }
  result.hasCustomer = YES;
  return self;
}
- (BusinessOpportunity_Builder*) clearCustomer {
  result.hasCustomer = NO;
  result.customer = [Customer defaultInstance];
  return self;
}
- (BOOL) hasBizOppName {
  return result.hasBizOppName;
}
- (NSString*) bizOppName {
  return result.bizOppName;
}
- (BusinessOpportunity_Builder*) setBizOppName:(NSString*) value {
  result.hasBizOppName = YES;
  result.bizOppName = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearBizOppName {
  result.hasBizOppName = NO;
  result.bizOppName = @"";
  return self;
}
- (BOOL) hasBizOppSummary {
  return result.hasBizOppSummary;
}
- (NSString*) bizOppSummary {
  return result.bizOppSummary;
}
- (BusinessOpportunity_Builder*) setBizOppSummary:(NSString*) value {
  result.hasBizOppSummary = YES;
  result.bizOppSummary = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearBizOppSummary {
  result.hasBizOppSummary = NO;
  result.bizOppSummary = @"";
  return self;
}
- (BOOL) hasBizOppDecision {
  return result.hasBizOppDecision;
}
- (NSString*) bizOppDecision {
  return result.bizOppDecision;
}
- (BusinessOpportunity_Builder*) setBizOppDecision:(NSString*) value {
  result.hasBizOppDecision = YES;
  result.bizOppDecision = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearBizOppDecision {
  result.hasBizOppDecision = NO;
  result.bizOppDecision = @"";
  return self;
}
- (BOOL) hasBizOppPrincipal {
  return result.hasBizOppPrincipal;
}
- (NSString*) bizOppPrincipal {
  return result.bizOppPrincipal;
}
- (BusinessOpportunity_Builder*) setBizOppPrincipal:(NSString*) value {
  result.hasBizOppPrincipal = YES;
  result.bizOppPrincipal = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearBizOppPrincipal {
  result.hasBizOppPrincipal = NO;
  result.bizOppPrincipal = @"";
  return self;
}
- (BOOL) hasBizOppRemark {
  return result.hasBizOppRemark;
}
- (NSString*) bizOppRemark {
  return result.bizOppRemark;
}
- (BusinessOpportunity_Builder*) setBizOppRemark:(NSString*) value {
  result.hasBizOppRemark = YES;
  result.bizOppRemark = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearBizOppRemark {
  result.hasBizOppRemark = NO;
  result.bizOppRemark = @"";
  return self;
}
- (BOOL) hasActionPlan {
  return result.hasActionPlan;
}
- (NSString*) actionPlan {
  return result.actionPlan;
}
- (BusinessOpportunity_Builder*) setActionPlan:(NSString*) value {
  result.hasActionPlan = YES;
  result.actionPlan = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearActionPlan {
  result.hasActionPlan = NO;
  result.actionPlan = @"";
  return self;
}
- (BOOL) hasExpectedCost {
  return result.hasExpectedCost;
}
- (NSString*) expectedCost {
  return result.expectedCost;
}
- (BusinessOpportunity_Builder*) setExpectedCost:(NSString*) value {
  result.hasExpectedCost = YES;
  result.expectedCost = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearExpectedCost {
  result.hasExpectedCost = NO;
  result.expectedCost = @"";
  return self;
}
- (BOOL) hasExpectedSignTime {
  return result.hasExpectedSignTime;
}
- (NSString*) expectedSignTime {
  return result.expectedSignTime;
}
- (BusinessOpportunity_Builder*) setExpectedSignTime:(NSString*) value {
  result.hasExpectedSignTime = YES;
  result.expectedSignTime = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearExpectedSignTime {
  result.hasExpectedSignTime = NO;
  result.expectedSignTime = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (BusinessOpportunity_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (Location*) location {
  return result.location;
}
- (BusinessOpportunity_Builder*) setLocation:(Location*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (BusinessOpportunity_Builder*) setLocationBuilder:(Location_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (BusinessOpportunity_Builder*) mergeLocation:(Location*) value {
  if (result.hasLocation &&
      result.location != [Location defaultInstance]) {
    result.location =
      [[[Location builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (BusinessOpportunity_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [Location defaultInstance];
  return self;
}
- (PBAppendableArray *)businessOpportunityReplies {
  return result.businessOpportunityRepliesArray;
}
- (BusinessOpportunityReply*)businessOpportunityRepliesAtIndex:(NSUInteger)index {
  return [result businessOpportunityRepliesAtIndex:index];
}
- (BusinessOpportunity_Builder *)addBusinessOpportunityReplies:(BusinessOpportunityReply*)value {
  if (result.businessOpportunityRepliesArray == nil) {
    result.businessOpportunityRepliesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.businessOpportunityRepliesArray addObject:value];
  return self;
}
- (BusinessOpportunity_Builder *)setBusinessOpportunityRepliesArray:(NSArray *)array {
  result.businessOpportunityRepliesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunity_Builder *)setBusinessOpportunityRepliesValues:(const BusinessOpportunityReply* *)values count:(NSUInteger)count {
  result.businessOpportunityRepliesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunity_Builder *)clearBusinessOpportunityReplies {
  result.businessOpportunityRepliesArray = nil;
  return self;
}
- (BOOL) hasReplyCount {
  return result.hasReplyCount;
}
- (int32_t) replyCount {
  return result.replyCount;
}
- (BusinessOpportunity_Builder*) setReplyCount:(int32_t) value {
  result.hasReplyCount = YES;
  result.replyCount = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearReplyCount {
  result.hasReplyCount = NO;
  result.replyCount = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (BusinessOpportunity_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (BusinessOpportunity_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
@end

@interface PageBusinessOpportunity ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * businessOpportunityArray;
@end

@implementation PageBusinessOpportunity

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize businessOpportunityArray;
@dynamic businessOpportunity;
- (void) dealloc {
  self.page = nil;
  self.businessOpportunityArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageBusinessOpportunity* defaultPageBusinessOpportunityInstance = nil;
+ (void) initialize {
  if (self == [PageBusinessOpportunity class]) {
    defaultPageBusinessOpportunityInstance = [[PageBusinessOpportunity alloc] init];
  }
}
+ (PageBusinessOpportunity*) defaultInstance {
  return defaultPageBusinessOpportunityInstance;
}
- (PageBusinessOpportunity*) defaultInstance {
  return defaultPageBusinessOpportunityInstance;
}
- (PBArray *)businessOpportunity {
  return businessOpportunityArray;
}
- (BusinessOpportunity*)businessOpportunityAtIndex:(NSUInteger)index {
  return [businessOpportunityArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (BusinessOpportunity* element in self.businessOpportunity) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (BusinessOpportunity *element in self.businessOpportunityArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (BusinessOpportunity *element in self.businessOpportunityArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageBusinessOpportunity*) parseFromData:(NSData*) data {
  return (PageBusinessOpportunity*)[[[PageBusinessOpportunity builder] mergeFromData:data] build];
}
+ (PageBusinessOpportunity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageBusinessOpportunity*)[[[PageBusinessOpportunity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageBusinessOpportunity*) parseFromInputStream:(NSInputStream*) input {
  return (PageBusinessOpportunity*)[[[PageBusinessOpportunity builder] mergeFromInputStream:input] build];
}
+ (PageBusinessOpportunity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageBusinessOpportunity*)[[[PageBusinessOpportunity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageBusinessOpportunity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageBusinessOpportunity*)[[[PageBusinessOpportunity builder] mergeFromCodedInputStream:input] build];
}
+ (PageBusinessOpportunity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageBusinessOpportunity*)[[[PageBusinessOpportunity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageBusinessOpportunity_Builder*) builder {
  return [[[PageBusinessOpportunity_Builder alloc] init] autorelease];
}
+ (PageBusinessOpportunity_Builder*) builderWithPrototype:(PageBusinessOpportunity*) prototype {
  return [[PageBusinessOpportunity builder] mergeFrom:prototype];
}
- (PageBusinessOpportunity_Builder*) builder {
  return [PageBusinessOpportunity builder];
}
- (PageBusinessOpportunity_Builder*) toBuilder {
  return [PageBusinessOpportunity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (BusinessOpportunity* element in self.businessOpportunityArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessOpportunity"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageBusinessOpportunity class]]) {
    return NO;
  }
  PageBusinessOpportunity *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.businessOpportunityArray isEqualToArray:otherMessage.businessOpportunityArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (BusinessOpportunity* element in self.businessOpportunityArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageBusinessOpportunity_Builder()
@property (retain) PageBusinessOpportunity* result;
@end

@implementation PageBusinessOpportunity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageBusinessOpportunity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageBusinessOpportunity_Builder*) clear {
  self.result = [[[PageBusinessOpportunity alloc] init] autorelease];
  return self;
}
- (PageBusinessOpportunity_Builder*) clone {
  return [PageBusinessOpportunity builderWithPrototype:result];
}
- (PageBusinessOpportunity*) defaultInstance {
  return [PageBusinessOpportunity defaultInstance];
}
- (PageBusinessOpportunity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageBusinessOpportunity*) buildPartial {
  PageBusinessOpportunity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageBusinessOpportunity_Builder*) mergeFrom:(PageBusinessOpportunity*) other {
  if (other == [PageBusinessOpportunity defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.businessOpportunityArray.count > 0) {
    if (result.businessOpportunityArray == nil) {
      result.businessOpportunityArray = [[other.businessOpportunityArray copyWithZone:[other.businessOpportunityArray zone]] autorelease];
    } else {
      [result.businessOpportunityArray appendArray:other.businessOpportunityArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageBusinessOpportunity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageBusinessOpportunity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        BusinessOpportunity_Builder* subBuilder = [BusinessOpportunity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBusinessOpportunity:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageBusinessOpportunity_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageBusinessOpportunity_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageBusinessOpportunity_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageBusinessOpportunity_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)businessOpportunity {
  return result.businessOpportunityArray;
}
- (BusinessOpportunity*)businessOpportunityAtIndex:(NSUInteger)index {
  return [result businessOpportunityAtIndex:index];
}
- (PageBusinessOpportunity_Builder *)addBusinessOpportunity:(BusinessOpportunity*)value {
  if (result.businessOpportunityArray == nil) {
    result.businessOpportunityArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.businessOpportunityArray addObject:value];
  return self;
}
- (PageBusinessOpportunity_Builder *)setBusinessOpportunityArray:(NSArray *)array {
  result.businessOpportunityArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageBusinessOpportunity_Builder *)setBusinessOpportunityValues:(const BusinessOpportunity* *)values count:(NSUInteger)count {
  result.businessOpportunityArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageBusinessOpportunity_Builder *)clearBusinessOpportunity {
  result.businessOpportunityArray = nil;
  return self;
}
@end

@interface BusinessOpportunityParams ()
@property int32_t page;
@property (retain) PBAppendableArray * usersArray;
@property (retain) PBAppendableArray * customerCategoryArray;
@property (retain) PBAppendableArray * customersArray;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PBAppendableArray * companiesArray;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t id;
@end

@implementation BusinessOpportunityParams

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize usersArray;
@dynamic users;
@synthesize customerCategoryArray;
@dynamic customerCategory;
@synthesize customersArray;
@dynamic customers;
@synthesize departmentsArray;
@dynamic departments;
@synthesize companiesArray;
@dynamic companies;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value_ {
  hasStartDate_ = !!value_;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value_ {
  hasEndDate_ = !!value_;
}
@synthesize endDate;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (void) dealloc {
  self.usersArray = nil;
  self.customerCategoryArray = nil;
  self.customersArray = nil;
  self.departmentsArray = nil;
  self.companiesArray = nil;
  self.startDate = nil;
  self.endDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = 0;
    self.startDate = @"";
    self.endDate = @"";
    self.id = 0;
  }
  return self;
}
static BusinessOpportunityParams* defaultBusinessOpportunityParamsInstance = nil;
+ (void) initialize {
  if (self == [BusinessOpportunityParams class]) {
    defaultBusinessOpportunityParamsInstance = [[BusinessOpportunityParams alloc] init];
  }
}
+ (BusinessOpportunityParams*) defaultInstance {
  return defaultBusinessOpportunityParamsInstance;
}
- (BusinessOpportunityParams*) defaultInstance {
  return defaultBusinessOpportunityParamsInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (PBArray *)customerCategory {
  return customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [customerCategoryArray objectAtIndex:index];
}
- (PBArray *)customers {
  return customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [customersArray objectAtIndex:index];
}
- (PBArray *)departments {
  return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (PBArray *)companies {
  return companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [companiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CustomerCategory* element in self.customerCategory) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Customer* element in self.customers) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.departments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Company* element in self.companies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:2 value:element];
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    [output writeMessage:3 value:element];
  }
  for (Customer *element in self.customersArray) {
    [output writeMessage:4 value:element];
  }
  for (Department *element in self.departmentsArray) {
    [output writeMessage:5 value:element];
  }
  for (Company *element in self.companiesArray) {
    [output writeMessage:6 value:element];
  }
  if (self.hasStartDate) {
    [output writeString:7 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:8 value:self.endDate];
  }
  if (self.hasId) {
    [output writeInt32:9 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(2, element);
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    size_ += computeMessageSize(3, element);
  }
  for (Customer *element in self.customersArray) {
    size_ += computeMessageSize(4, element);
  }
  for (Department *element in self.departmentsArray) {
    size_ += computeMessageSize(5, element);
  }
  for (Company *element in self.companiesArray) {
    size_ += computeMessageSize(6, element);
  }
  if (self.hasStartDate) {
    size_ += computeStringSize(7, self.startDate);
  }
  if (self.hasEndDate) {
    size_ += computeStringSize(8, self.endDate);
  }
  if (self.hasId) {
    size_ += computeInt32Size(9, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BusinessOpportunityParams*) parseFromData:(NSData*) data {
  return (BusinessOpportunityParams*)[[[BusinessOpportunityParams builder] mergeFromData:data] build];
}
+ (BusinessOpportunityParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunityParams*)[[[BusinessOpportunityParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunityParams*) parseFromInputStream:(NSInputStream*) input {
  return (BusinessOpportunityParams*)[[[BusinessOpportunityParams builder] mergeFromInputStream:input] build];
}
+ (BusinessOpportunityParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunityParams*)[[[BusinessOpportunityParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunityParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BusinessOpportunityParams*)[[[BusinessOpportunityParams builder] mergeFromCodedInputStream:input] build];
}
+ (BusinessOpportunityParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunityParams*)[[[BusinessOpportunityParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunityParams_Builder*) builder {
  return [[[BusinessOpportunityParams_Builder alloc] init] autorelease];
}
+ (BusinessOpportunityParams_Builder*) builderWithPrototype:(BusinessOpportunityParams*) prototype {
  return [[BusinessOpportunityParams builder] mergeFrom:prototype];
}
- (BusinessOpportunityParams_Builder*) builder {
  return [BusinessOpportunityParams builder];
}
- (BusinessOpportunityParams_Builder*) toBuilder {
  return [BusinessOpportunityParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customerCategory"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Customer* element in self.customersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Department* element in self.departmentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Company* element in self.companiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startDate", self.startDate];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", self.endDate];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BusinessOpportunityParams class]]) {
    return NO;
  }
  BusinessOpportunityParams *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      [self.customerCategoryArray isEqualToArray:otherMessage.customerCategoryArray] &&
      [self.customersArray isEqualToArray:otherMessage.customersArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.companiesArray isEqualToArray:otherMessage.companiesArray] &&
      self.hasStartDate == otherMessage.hasStartDate &&
      (!self.hasStartDate || [self.startDate isEqual:otherMessage.startDate]) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || [self.endDate isEqual:otherMessage.endDate]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Customer* element in self.customersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Department* element in self.departmentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Company* element in self.companiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasStartDate) {
    hashCode = hashCode * 31 + [self.startDate hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [self.endDate hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BusinessOpportunityParams_Builder()
@property (retain) BusinessOpportunityParams* result;
@end

@implementation BusinessOpportunityParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BusinessOpportunityParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BusinessOpportunityParams_Builder*) clear {
  self.result = [[[BusinessOpportunityParams alloc] init] autorelease];
  return self;
}
- (BusinessOpportunityParams_Builder*) clone {
  return [BusinessOpportunityParams builderWithPrototype:result];
}
- (BusinessOpportunityParams*) defaultInstance {
  return [BusinessOpportunityParams defaultInstance];
}
- (BusinessOpportunityParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BusinessOpportunityParams*) buildPartial {
  BusinessOpportunityParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BusinessOpportunityParams_Builder*) mergeFrom:(BusinessOpportunityParams*) other {
  if (other == [BusinessOpportunityParams defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  if (other.customerCategoryArray.count > 0) {
    if (result.customerCategoryArray == nil) {
      result.customerCategoryArray = [[other.customerCategoryArray copyWithZone:[other.customerCategoryArray zone]] autorelease];
    } else {
      [result.customerCategoryArray appendArray:other.customerCategoryArray];
    }
  }
  if (other.customersArray.count > 0) {
    if (result.customersArray == nil) {
      result.customersArray = [[other.customersArray copyWithZone:[other.customersArray zone]] autorelease];
    } else {
      [result.customersArray appendArray:other.customersArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
    } else {
      [result.departmentsArray appendArray:other.departmentsArray];
    }
  }
  if (other.companiesArray.count > 0) {
    if (result.companiesArray == nil) {
      result.companiesArray = [[other.companiesArray copyWithZone:[other.companiesArray zone]] autorelease];
    } else {
      [result.companiesArray appendArray:other.companiesArray];
    }
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BusinessOpportunityParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BusinessOpportunityParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        CustomerCategory_Builder* subBuilder = [CustomerCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomerCategory:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        Customer_Builder* subBuilder = [Customer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomers:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        Company_Builder* subBuilder = [Company builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanies:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setStartDate:[input readString]];
        break;
      }
      case 66: {
        [self setEndDate:[input readString]];
        break;
      }
      case 72: {
        [self setId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (BusinessOpportunityParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (BusinessOpportunityParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (BusinessOpportunityParams_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (BusinessOpportunityParams_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
- (PBAppendableArray *)customerCategory {
  return result.customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [result customerCategoryAtIndex:index];
}
- (BusinessOpportunityParams_Builder *)addCustomerCategory:(CustomerCategory*)value {
  if (result.customerCategoryArray == nil) {
    result.customerCategoryArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customerCategoryArray addObject:value];
  return self;
}
- (BusinessOpportunityParams_Builder *)setCustomerCategoryArray:(NSArray *)array {
  result.customerCategoryArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)setCustomerCategoryValues:(const CustomerCategory* *)values count:(NSUInteger)count {
  result.customerCategoryArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)clearCustomerCategory {
  result.customerCategoryArray = nil;
  return self;
}
- (PBAppendableArray *)customers {
  return result.customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [result customersAtIndex:index];
}
- (BusinessOpportunityParams_Builder *)addCustomers:(Customer*)value {
  if (result.customersArray == nil) {
    result.customersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customersArray addObject:value];
  return self;
}
- (BusinessOpportunityParams_Builder *)setCustomersArray:(NSArray *)array {
  result.customersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count {
  result.customersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)clearCustomers {
  result.customersArray = nil;
  return self;
}
- (PBAppendableArray *)departments {
  return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (BusinessOpportunityParams_Builder *)addDepartments:(Department*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (BusinessOpportunityParams_Builder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (PBAppendableArray *)companies {
  return result.companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [result companiesAtIndex:index];
}
- (BusinessOpportunityParams_Builder *)addCompanies:(Company*)value {
  if (result.companiesArray == nil) {
    result.companiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.companiesArray addObject:value];
  return self;
}
- (BusinessOpportunityParams_Builder *)setCompaniesArray:(NSArray *)array {
  result.companiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)setCompaniesValues:(const Company* *)values count:(NSUInteger)count {
  result.companiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityParams_Builder *)clearCompanies {
  result.companiesArray = nil;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (BusinessOpportunityParams_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (BusinessOpportunityParams_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (BusinessOpportunityParams_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (BusinessOpportunityParams_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (BusinessOpportunityParams_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (BusinessOpportunityParams_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
@end

@interface BusinessOpportunityReply ()
@property int32_t id;
@property int32_t businessOpportunityId;
@property (retain) User* sender;
@property (retain) PBAppendableArray * receiversArray;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property (retain) PBAppendableArray * filesArray;
@property (retain) PBAppendableArray * filePathArray;
@end

@implementation BusinessOpportunityReply

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasBusinessOpportunityId {
  return !!hasBusinessOpportunityId_;
}
- (void) setHasBusinessOpportunityId:(BOOL) value_ {
  hasBusinessOpportunityId_ = !!value_;
}
@synthesize businessOpportunityId;
- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize receiversArray;
@dynamic receivers;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
@synthesize filesArray;
@dynamic files;
@synthesize filePathArray;
@dynamic filePath;
- (void) dealloc {
  self.sender = nil;
  self.receiversArray = nil;
  self.content = nil;
  self.createDate = nil;
  self.filesArray = nil;
  self.filePathArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.businessOpportunityId = 0;
    self.sender = [User defaultInstance];
    self.content = @"";
    self.createDate = @"";
  }
  return self;
}
static BusinessOpportunityReply* defaultBusinessOpportunityReplyInstance = nil;
+ (void) initialize {
  if (self == [BusinessOpportunityReply class]) {
    defaultBusinessOpportunityReplyInstance = [[BusinessOpportunityReply alloc] init];
  }
}
+ (BusinessOpportunityReply*) defaultInstance {
  return defaultBusinessOpportunityReplyInstance;
}
- (BusinessOpportunityReply*) defaultInstance {
  return defaultBusinessOpportunityReplyInstance;
}
- (PBArray *)receivers {
  return receiversArray;
}
- (User*)receiversAtIndex:(NSUInteger)index {
  return [receiversArray objectAtIndex:index];
}
- (PBArray *)files {
  return filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (PBArray *)filePath {
  return filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [filePathArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasBusinessOpportunityId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (self.hasSender) {
    if (!self.sender.isInitialized) {
      return NO;
    }
  }
  for (User* element in self.receivers) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasBusinessOpportunityId) {
    [output writeInt32:2 value:self.businessOpportunityId];
  }
  if (self.hasSender) {
    [output writeMessage:3 value:self.sender];
  }
  for (User *element in self.receiversArray) {
    [output writeMessage:4 value:element];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:6 value:self.createDate];
  }
  const NSUInteger filesArrayCount = self.filesArray.count;
  if (filesArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < filesArrayCount; ++i) {
      [output writeData:7 value:values[i]];
    }
  }
  const NSUInteger filePathArrayCount = self.filePathArray.count;
  if (filePathArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < filePathArrayCount; ++i) {
      [output writeString:8 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasBusinessOpportunityId) {
    size_ += computeInt32Size(2, self.businessOpportunityId);
  }
  if (self.hasSender) {
    size_ += computeMessageSize(3, self.sender);
  }
  for (User *element in self.receiversArray) {
    size_ += computeMessageSize(4, element);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(6, self.createDate);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filesArray.count;
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filePathArray.count;
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BusinessOpportunityReply*) parseFromData:(NSData*) data {
  return (BusinessOpportunityReply*)[[[BusinessOpportunityReply builder] mergeFromData:data] build];
}
+ (BusinessOpportunityReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunityReply*)[[[BusinessOpportunityReply builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunityReply*) parseFromInputStream:(NSInputStream*) input {
  return (BusinessOpportunityReply*)[[[BusinessOpportunityReply builder] mergeFromInputStream:input] build];
}
+ (BusinessOpportunityReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunityReply*)[[[BusinessOpportunityReply builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunityReply*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BusinessOpportunityReply*)[[[BusinessOpportunityReply builder] mergeFromCodedInputStream:input] build];
}
+ (BusinessOpportunityReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessOpportunityReply*)[[[BusinessOpportunityReply builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessOpportunityReply_Builder*) builder {
  return [[[BusinessOpportunityReply_Builder alloc] init] autorelease];
}
+ (BusinessOpportunityReply_Builder*) builderWithPrototype:(BusinessOpportunityReply*) prototype {
  return [[BusinessOpportunityReply builder] mergeFrom:prototype];
}
- (BusinessOpportunityReply_Builder*) builder {
  return [BusinessOpportunityReply builder];
}
- (BusinessOpportunityReply_Builder*) toBuilder {
  return [BusinessOpportunityReply builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasBusinessOpportunityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"businessOpportunityId", [NSNumber numberWithInt:self.businessOpportunityId]];
  }
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (User* element in self.receiversArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"receivers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  for (NSData* element in self.filesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"files", element];
  }
  for (NSString* element in self.filePathArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"filePath", element];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BusinessOpportunityReply class]]) {
    return NO;
  }
  BusinessOpportunityReply *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasBusinessOpportunityId == otherMessage.hasBusinessOpportunityId &&
      (!self.hasBusinessOpportunityId || self.businessOpportunityId == otherMessage.businessOpportunityId) &&
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.receiversArray isEqualToArray:otherMessage.receiversArray] &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      [self.filePathArray isEqualToArray:otherMessage.filePathArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasBusinessOpportunityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.businessOpportunityId] hash];
  }
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  for (User* element in self.receiversArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  for (NSData* element in self.filesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSString* element in self.filePathArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BusinessOpportunityReply_Builder()
@property (retain) BusinessOpportunityReply* result;
@end

@implementation BusinessOpportunityReply_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BusinessOpportunityReply alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BusinessOpportunityReply_Builder*) clear {
  self.result = [[[BusinessOpportunityReply alloc] init] autorelease];
  return self;
}
- (BusinessOpportunityReply_Builder*) clone {
  return [BusinessOpportunityReply builderWithPrototype:result];
}
- (BusinessOpportunityReply*) defaultInstance {
  return [BusinessOpportunityReply defaultInstance];
}
- (BusinessOpportunityReply*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BusinessOpportunityReply*) buildPartial {
  BusinessOpportunityReply* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BusinessOpportunityReply_Builder*) mergeFrom:(BusinessOpportunityReply*) other {
  if (other == [BusinessOpportunityReply defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasBusinessOpportunityId) {
    [self setBusinessOpportunityId:other.businessOpportunityId];
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.receiversArray.count > 0) {
    if (result.receiversArray == nil) {
      result.receiversArray = [[other.receiversArray copyWithZone:[other.receiversArray zone]] autorelease];
    } else {
      [result.receiversArray appendArray:other.receiversArray];
    }
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[other.filesArray copyWithZone:[other.filesArray zone]] autorelease];
    } else {
      [result.filesArray appendArray:other.filesArray];
    }
  }
  if (other.filePathArray.count > 0) {
    if (result.filePathArray == nil) {
      result.filePathArray = [[other.filePathArray copyWithZone:[other.filePathArray zone]] autorelease];
    } else {
      [result.filePathArray appendArray:other.filePathArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BusinessOpportunityReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BusinessOpportunityReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 16: {
        [self setBusinessOpportunityId:[input readInt32]];
        break;
      }
      case 26: {
        User_Builder* subBuilder = [User builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReceivers:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 50: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 58: {
        [self addFiles:[input readData]];
        break;
      }
      case 66: {
        [self addFilePath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (BusinessOpportunityReply_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (BusinessOpportunityReply_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasBusinessOpportunityId {
  return result.hasBusinessOpportunityId;
}
- (int32_t) businessOpportunityId {
  return result.businessOpportunityId;
}
- (BusinessOpportunityReply_Builder*) setBusinessOpportunityId:(int32_t) value {
  result.hasBusinessOpportunityId = YES;
  result.businessOpportunityId = value;
  return self;
}
- (BusinessOpportunityReply_Builder*) clearBusinessOpportunityId {
  result.hasBusinessOpportunityId = NO;
  result.businessOpportunityId = 0;
  return self;
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (User*) sender {
  return result.sender;
}
- (BusinessOpportunityReply_Builder*) setSender:(User*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BusinessOpportunityReply_Builder*) setSenderBuilder:(User_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BusinessOpportunityReply_Builder*) mergeSender:(User*) value {
  if (result.hasSender &&
      result.sender != [User defaultInstance]) {
    result.sender =
      [[[User builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BusinessOpportunityReply_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [User defaultInstance];
  return self;
}
- (PBAppendableArray *)receivers {
  return result.receiversArray;
}
- (User*)receiversAtIndex:(NSUInteger)index {
  return [result receiversAtIndex:index];
}
- (BusinessOpportunityReply_Builder *)addReceivers:(User*)value {
  if (result.receiversArray == nil) {
    result.receiversArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.receiversArray addObject:value];
  return self;
}
- (BusinessOpportunityReply_Builder *)setReceiversArray:(NSArray *)array {
  result.receiversArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityReply_Builder *)setReceiversValues:(const User* *)values count:(NSUInteger)count {
  result.receiversArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityReply_Builder *)clearReceivers {
  result.receiversArray = nil;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (BusinessOpportunityReply_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (BusinessOpportunityReply_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (BusinessOpportunityReply_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (BusinessOpportunityReply_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (PBAppendableArray *)files {
  return result.filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (BusinessOpportunityReply_Builder *)addFiles:(NSData*)value {
  if (result.filesArray == nil) {
    result.filesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filesArray addObject:value];
  return self;
}
- (BusinessOpportunityReply_Builder *)setFilesArray:(NSArray *)array {
  result.filesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityReply_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count {
  result.filesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityReply_Builder *)clearFiles {
  result.filesArray = nil;
  return self;
}
- (PBAppendableArray *)filePath {
  return result.filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [result filePathAtIndex:index];
}
- (BusinessOpportunityReply_Builder *)addFilePath:(NSString*)value {
  if (result.filePathArray == nil) {
    result.filePathArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filePathArray addObject:value];
  return self;
}
- (BusinessOpportunityReply_Builder *)setFilePathArray:(NSArray *)array {
  result.filePathArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityReply_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count {
  result.filePathArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (BusinessOpportunityReply_Builder *)clearFilePath {
  result.filePathArray = nil;
  return self;
}
@end

