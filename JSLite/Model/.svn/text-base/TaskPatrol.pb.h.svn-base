// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Customer.pb.h"
#import "Patrol.pb.h"
#import "User.pb.h"
#import "Generic.pb.h"

@class AppSetting;
@class AppSetting_Builder;
@class Company;
@class Company_Builder;
@class Contact;
@class Contact_Builder;
@class Customer;
@class CustomerCategory;
@class CustomerCategory_Builder;
@class CustomerParams;
@class CustomerParams_Builder;
@class Customer_Builder;
@class Department;
@class Department_Builder;
@class Device;
@class Device_Builder;
@class Function;
@class Function_Builder;
@class Location;
@class Location_Builder;
@class PageCustomer;
@class PageCustomer_Builder;
@class PagePatrol;
@class PagePatrol_Builder;
@class PageTaskPatrol;
@class PageTaskPatrol_Builder;
@class PageUser;
@class PageUser_Builder;
@class Pagination;
@class Pagination_Builder;
@class Patrol;
@class PatrolCategory;
@class PatrolCategory_Builder;
@class PatrolMediaCategory;
@class PatrolMediaCategory_Builder;
@class PatrolParams;
@class PatrolParams_Builder;
@class PatrolReply;
@class PatrolReply_Builder;
@class PatrolVideoDurationCategory;
@class PatrolVideoDurationCategory_Builder;
@class Patrol_Builder;
@class Permission;
@class Permission_Builder;
@class Position;
@class Position_Builder;
@class Product;
@class ProductCategory;
@class ProductCategory_Builder;
@class Product_Builder;
@class SystemSetting;
@class SystemSetting_Builder;
@class TaskPatrol;
@class TaskPatrolDetail;
@class TaskPatrolDetailParams;
@class TaskPatrolDetailParams_Builder;
@class TaskPatrolDetail_Builder;
@class TaskPatrolParams;
@class TaskPatrolParams_Builder;
@class TaskPatrolReply;
@class TaskPatrolReply_Builder;
@class TaskPatrol_Builder;
@class User;
@class UserParams;
@class UserParams_Builder;
@class User_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface TaskPatrolRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface TaskPatrol : PBGeneratedMessage {
@private
  BOOL hasReplyCount_:1;
  BOOL hasTaskStatus_:1;
  BOOL hasUnfinishedCount_:1;
  BOOL hasTaskType_:1;
  BOOL hasFinishCount_:1;
  BOOL hasContent_:1;
  BOOL hasCycleDate_:1;
  BOOL hasName_:1;
  BOOL hasFinishDate_:1;
  BOOL hasEndDate_:1;
  BOOL hasStartDate_:1;
  BOOL hasId_:1;
  BOOL hasCompany_:1;
  BOOL hasUser_:1;
  int32_t replyCount;
  int32_t taskStatus;
  int32_t unfinishedCount;
  int32_t taskType;
  int32_t finishCount;
  NSString* content;
  NSString* cycleDate;
  NSString* name;
  NSString* finishDate;
  NSString* endDate;
  NSString* startDate;
  NSString* id;
  Company* company;
  User* user;
  PBAppendableArray * filePathsArray;
  PBAppendableArray * fileNamesArray;
  PBAppendableArray * detailArray;
  PBAppendableArray * filesArray;
}
- (BOOL) hasId;
- (BOOL) hasUser;
- (BOOL) hasStartDate;
- (BOOL) hasEndDate;
- (BOOL) hasFinishDate;
- (BOOL) hasTaskType;
- (BOOL) hasCompany;
- (BOOL) hasFinishCount;
- (BOOL) hasUnfinishedCount;
- (BOOL) hasTaskStatus;
- (BOOL) hasName;
- (BOOL) hasReplyCount;
- (BOOL) hasCycleDate;
- (BOOL) hasContent;
@property (readonly, retain) NSString* id;
@property (readonly, retain) User* user;
@property (readonly, retain) PBArray * detail;
@property (readonly, retain) NSString* startDate;
@property (readonly, retain) NSString* endDate;
@property (readonly, retain) NSString* finishDate;
@property (readonly) int32_t taskType;
@property (readonly, retain) Company* company;
@property (readonly) int32_t finishCount;
@property (readonly) int32_t unfinishedCount;
@property (readonly) int32_t taskStatus;
@property (readonly, retain) NSString* name;
@property (readonly) int32_t replyCount;
@property (readonly, retain) NSString* cycleDate;
@property (readonly, retain) NSString* content;
@property (readonly, retain) PBArray * files;
@property (readonly, retain) PBArray * filePaths;
@property (readonly, retain) PBArray * fileNames;
- (TaskPatrolDetail*)detailAtIndex:(NSUInteger)index;
- (NSData*)filesAtIndex:(NSUInteger)index;
- (NSString*)filePathsAtIndex:(NSUInteger)index;
- (NSString*)fileNamesAtIndex:(NSUInteger)index;

+ (TaskPatrol*) defaultInstance;
- (TaskPatrol*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TaskPatrol_Builder*) builder;
+ (TaskPatrol_Builder*) builder;
+ (TaskPatrol_Builder*) builderWithPrototype:(TaskPatrol*) prototype;
- (TaskPatrol_Builder*) toBuilder;

+ (TaskPatrol*) parseFromData:(NSData*) data;
+ (TaskPatrol*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrol*) parseFromInputStream:(NSInputStream*) input;
+ (TaskPatrol*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrol*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TaskPatrol*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TaskPatrol_Builder : PBGeneratedMessage_Builder {
@private
  TaskPatrol* result;
}

- (TaskPatrol*) defaultInstance;

- (TaskPatrol_Builder*) clear;
- (TaskPatrol_Builder*) clone;

- (TaskPatrol*) build;
- (TaskPatrol*) buildPartial;

- (TaskPatrol_Builder*) mergeFrom:(TaskPatrol*) other;
- (TaskPatrol_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TaskPatrol_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (TaskPatrol_Builder*) setId:(NSString*) value;
- (TaskPatrol_Builder*) clearId;

- (BOOL) hasUser;
- (User*) user;
- (TaskPatrol_Builder*) setUser:(User*) value;
- (TaskPatrol_Builder*) setUserBuilder:(User_Builder*) builderForValue;
- (TaskPatrol_Builder*) mergeUser:(User*) value;
- (TaskPatrol_Builder*) clearUser;

- (PBAppendableArray *)detail;
- (TaskPatrolDetail*)detailAtIndex:(NSUInteger)index;
- (TaskPatrol_Builder *)addDetail:(TaskPatrolDetail*)value;
- (TaskPatrol_Builder *)setDetailArray:(NSArray *)array;
- (TaskPatrol_Builder *)setDetailValues:(const TaskPatrolDetail* *)values count:(NSUInteger)count;
- (TaskPatrol_Builder *)clearDetail;

- (BOOL) hasStartDate;
- (NSString*) startDate;
- (TaskPatrol_Builder*) setStartDate:(NSString*) value;
- (TaskPatrol_Builder*) clearStartDate;

- (BOOL) hasEndDate;
- (NSString*) endDate;
- (TaskPatrol_Builder*) setEndDate:(NSString*) value;
- (TaskPatrol_Builder*) clearEndDate;

- (BOOL) hasFinishDate;
- (NSString*) finishDate;
- (TaskPatrol_Builder*) setFinishDate:(NSString*) value;
- (TaskPatrol_Builder*) clearFinishDate;

- (BOOL) hasTaskType;
- (int32_t) taskType;
- (TaskPatrol_Builder*) setTaskType:(int32_t) value;
- (TaskPatrol_Builder*) clearTaskType;

- (BOOL) hasCompany;
- (Company*) company;
- (TaskPatrol_Builder*) setCompany:(Company*) value;
- (TaskPatrol_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue;
- (TaskPatrol_Builder*) mergeCompany:(Company*) value;
- (TaskPatrol_Builder*) clearCompany;

- (BOOL) hasFinishCount;
- (int32_t) finishCount;
- (TaskPatrol_Builder*) setFinishCount:(int32_t) value;
- (TaskPatrol_Builder*) clearFinishCount;

- (BOOL) hasUnfinishedCount;
- (int32_t) unfinishedCount;
- (TaskPatrol_Builder*) setUnfinishedCount:(int32_t) value;
- (TaskPatrol_Builder*) clearUnfinishedCount;

- (BOOL) hasTaskStatus;
- (int32_t) taskStatus;
- (TaskPatrol_Builder*) setTaskStatus:(int32_t) value;
- (TaskPatrol_Builder*) clearTaskStatus;

- (BOOL) hasName;
- (NSString*) name;
- (TaskPatrol_Builder*) setName:(NSString*) value;
- (TaskPatrol_Builder*) clearName;

- (BOOL) hasReplyCount;
- (int32_t) replyCount;
- (TaskPatrol_Builder*) setReplyCount:(int32_t) value;
- (TaskPatrol_Builder*) clearReplyCount;

- (BOOL) hasCycleDate;
- (NSString*) cycleDate;
- (TaskPatrol_Builder*) setCycleDate:(NSString*) value;
- (TaskPatrol_Builder*) clearCycleDate;

- (BOOL) hasContent;
- (NSString*) content;
- (TaskPatrol_Builder*) setContent:(NSString*) value;
- (TaskPatrol_Builder*) clearContent;

- (PBAppendableArray *)files;
- (NSData*)filesAtIndex:(NSUInteger)index;
- (TaskPatrol_Builder *)addFiles:(NSData*)value;
- (TaskPatrol_Builder *)setFilesArray:(NSArray *)array;
- (TaskPatrol_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count;
- (TaskPatrol_Builder *)clearFiles;

- (PBAppendableArray *)filePaths;
- (NSString*)filePathsAtIndex:(NSUInteger)index;
- (TaskPatrol_Builder *)addFilePaths:(NSString*)value;
- (TaskPatrol_Builder *)setFilePathsArray:(NSArray *)array;
- (TaskPatrol_Builder *)setFilePathsValues:(const NSString* *)values count:(NSUInteger)count;
- (TaskPatrol_Builder *)clearFilePaths;

- (PBAppendableArray *)fileNames;
- (NSString*)fileNamesAtIndex:(NSUInteger)index;
- (TaskPatrol_Builder *)addFileNames:(NSString*)value;
- (TaskPatrol_Builder *)setFileNamesArray:(NSArray *)array;
- (TaskPatrol_Builder *)setFileNamesValues:(const NSString* *)values count:(NSUInteger)count;
- (TaskPatrol_Builder *)clearFileNames;
@end

@interface TaskPatrolDetail : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasPatrolId_:1;
  BOOL hasTaskStatus_:1;
  BOOL hasTaskId_:1;
  BOOL hasFinishDate_:1;
  BOOL hasPatrol_:1;
  BOOL hasUser_:1;
  BOOL hasCustomer_:1;
  int32_t id;
  int32_t patrolId;
  int32_t taskStatus;
  NSString* taskId;
  NSString* finishDate;
  Patrol* patrol;
  User* user;
  Customer* customer;
}
- (BOOL) hasId;
- (BOOL) hasTaskId;
- (BOOL) hasPatrolId;
- (BOOL) hasPatrol;
- (BOOL) hasUser;
- (BOOL) hasCustomer;
- (BOOL) hasTaskStatus;
- (BOOL) hasFinishDate;
@property (readonly) int32_t id;
@property (readonly, retain) NSString* taskId;
@property (readonly) int32_t patrolId;
@property (readonly, retain) Patrol* patrol;
@property (readonly, retain) User* user;
@property (readonly, retain) Customer* customer;
@property (readonly) int32_t taskStatus;
@property (readonly, retain) NSString* finishDate;

+ (TaskPatrolDetail*) defaultInstance;
- (TaskPatrolDetail*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TaskPatrolDetail_Builder*) builder;
+ (TaskPatrolDetail_Builder*) builder;
+ (TaskPatrolDetail_Builder*) builderWithPrototype:(TaskPatrolDetail*) prototype;
- (TaskPatrolDetail_Builder*) toBuilder;

+ (TaskPatrolDetail*) parseFromData:(NSData*) data;
+ (TaskPatrolDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolDetail*) parseFromInputStream:(NSInputStream*) input;
+ (TaskPatrolDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TaskPatrolDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TaskPatrolDetail_Builder : PBGeneratedMessage_Builder {
@private
  TaskPatrolDetail* result;
}

- (TaskPatrolDetail*) defaultInstance;

- (TaskPatrolDetail_Builder*) clear;
- (TaskPatrolDetail_Builder*) clone;

- (TaskPatrolDetail*) build;
- (TaskPatrolDetail*) buildPartial;

- (TaskPatrolDetail_Builder*) mergeFrom:(TaskPatrolDetail*) other;
- (TaskPatrolDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TaskPatrolDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (TaskPatrolDetail_Builder*) setId:(int32_t) value;
- (TaskPatrolDetail_Builder*) clearId;

- (BOOL) hasTaskId;
- (NSString*) taskId;
- (TaskPatrolDetail_Builder*) setTaskId:(NSString*) value;
- (TaskPatrolDetail_Builder*) clearTaskId;

- (BOOL) hasPatrolId;
- (int32_t) patrolId;
- (TaskPatrolDetail_Builder*) setPatrolId:(int32_t) value;
- (TaskPatrolDetail_Builder*) clearPatrolId;

- (BOOL) hasPatrol;
- (Patrol*) patrol;
- (TaskPatrolDetail_Builder*) setPatrol:(Patrol*) value;
- (TaskPatrolDetail_Builder*) setPatrolBuilder:(Patrol_Builder*) builderForValue;
- (TaskPatrolDetail_Builder*) mergePatrol:(Patrol*) value;
- (TaskPatrolDetail_Builder*) clearPatrol;

- (BOOL) hasUser;
- (User*) user;
- (TaskPatrolDetail_Builder*) setUser:(User*) value;
- (TaskPatrolDetail_Builder*) setUserBuilder:(User_Builder*) builderForValue;
- (TaskPatrolDetail_Builder*) mergeUser:(User*) value;
- (TaskPatrolDetail_Builder*) clearUser;

- (BOOL) hasCustomer;
- (Customer*) customer;
- (TaskPatrolDetail_Builder*) setCustomer:(Customer*) value;
- (TaskPatrolDetail_Builder*) setCustomerBuilder:(Customer_Builder*) builderForValue;
- (TaskPatrolDetail_Builder*) mergeCustomer:(Customer*) value;
- (TaskPatrolDetail_Builder*) clearCustomer;

- (BOOL) hasTaskStatus;
- (int32_t) taskStatus;
- (TaskPatrolDetail_Builder*) setTaskStatus:(int32_t) value;
- (TaskPatrolDetail_Builder*) clearTaskStatus;

- (BOOL) hasFinishDate;
- (NSString*) finishDate;
- (TaskPatrolDetail_Builder*) setFinishDate:(NSString*) value;
- (TaskPatrolDetail_Builder*) clearFinishDate;
@end

@interface TaskPatrolParams : PBGeneratedMessage {
@private
  BOOL hasTaskType_:1;
  BOOL hasTaskStatus_:1;
  BOOL hasPage_:1;
  BOOL hasStartDate_:1;
  BOOL hasEndDate_:1;
  BOOL hasSource_:1;
  BOOL hasId_:1;
  int32_t taskType;
  int32_t taskStatus;
  int32_t page;
  NSString* startDate;
  NSString* endDate;
  NSString* source;
  NSString* id;
  PBAppendableArray * paramUsersArray;
  PBAppendableArray * departmentsArray;
}
- (BOOL) hasTaskType;
- (BOOL) hasTaskStatus;
- (BOOL) hasStartDate;
- (BOOL) hasEndDate;
- (BOOL) hasSource;
- (BOOL) hasPage;
- (BOOL) hasId;
@property (readonly) int32_t taskType;
@property (readonly) int32_t taskStatus;
@property (readonly, retain) PBArray * paramUsers;
@property (readonly, retain) NSString* startDate;
@property (readonly, retain) NSString* endDate;
@property (readonly, retain) NSString* source;
@property (readonly, retain) PBArray * departments;
@property (readonly) int32_t page;
@property (readonly, retain) NSString* id;
- (User*)paramUsersAtIndex:(NSUInteger)index;
- (Department*)departmentsAtIndex:(NSUInteger)index;

+ (TaskPatrolParams*) defaultInstance;
- (TaskPatrolParams*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TaskPatrolParams_Builder*) builder;
+ (TaskPatrolParams_Builder*) builder;
+ (TaskPatrolParams_Builder*) builderWithPrototype:(TaskPatrolParams*) prototype;
- (TaskPatrolParams_Builder*) toBuilder;

+ (TaskPatrolParams*) parseFromData:(NSData*) data;
+ (TaskPatrolParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolParams*) parseFromInputStream:(NSInputStream*) input;
+ (TaskPatrolParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolParams*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TaskPatrolParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TaskPatrolParams_Builder : PBGeneratedMessage_Builder {
@private
  TaskPatrolParams* result;
}

- (TaskPatrolParams*) defaultInstance;

- (TaskPatrolParams_Builder*) clear;
- (TaskPatrolParams_Builder*) clone;

- (TaskPatrolParams*) build;
- (TaskPatrolParams*) buildPartial;

- (TaskPatrolParams_Builder*) mergeFrom:(TaskPatrolParams*) other;
- (TaskPatrolParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TaskPatrolParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTaskType;
- (int32_t) taskType;
- (TaskPatrolParams_Builder*) setTaskType:(int32_t) value;
- (TaskPatrolParams_Builder*) clearTaskType;

- (BOOL) hasTaskStatus;
- (int32_t) taskStatus;
- (TaskPatrolParams_Builder*) setTaskStatus:(int32_t) value;
- (TaskPatrolParams_Builder*) clearTaskStatus;

- (PBAppendableArray *)paramUsers;
- (User*)paramUsersAtIndex:(NSUInteger)index;
- (TaskPatrolParams_Builder *)addParamUsers:(User*)value;
- (TaskPatrolParams_Builder *)setParamUsersArray:(NSArray *)array;
- (TaskPatrolParams_Builder *)setParamUsersValues:(const User* *)values count:(NSUInteger)count;
- (TaskPatrolParams_Builder *)clearParamUsers;

- (BOOL) hasStartDate;
- (NSString*) startDate;
- (TaskPatrolParams_Builder*) setStartDate:(NSString*) value;
- (TaskPatrolParams_Builder*) clearStartDate;

- (BOOL) hasEndDate;
- (NSString*) endDate;
- (TaskPatrolParams_Builder*) setEndDate:(NSString*) value;
- (TaskPatrolParams_Builder*) clearEndDate;

- (BOOL) hasSource;
- (NSString*) source;
- (TaskPatrolParams_Builder*) setSource:(NSString*) value;
- (TaskPatrolParams_Builder*) clearSource;

- (PBAppendableArray *)departments;
- (Department*)departmentsAtIndex:(NSUInteger)index;
- (TaskPatrolParams_Builder *)addDepartments:(Department*)value;
- (TaskPatrolParams_Builder *)setDepartmentsArray:(NSArray *)array;
- (TaskPatrolParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count;
- (TaskPatrolParams_Builder *)clearDepartments;

- (BOOL) hasPage;
- (int32_t) page;
- (TaskPatrolParams_Builder*) setPage:(int32_t) value;
- (TaskPatrolParams_Builder*) clearPage;

- (BOOL) hasId;
- (NSString*) id;
- (TaskPatrolParams_Builder*) setId:(NSString*) value;
- (TaskPatrolParams_Builder*) clearId;
@end

@interface PageTaskPatrol : PBGeneratedMessage {
@private
  BOOL hasPage_:1;
  Pagination* page;
  PBAppendableArray * taskPatrolsArray;
}
- (BOOL) hasPage;
@property (readonly, retain) Pagination* page;
@property (readonly, retain) PBArray * taskPatrols;
- (TaskPatrol*)taskPatrolsAtIndex:(NSUInteger)index;

+ (PageTaskPatrol*) defaultInstance;
- (PageTaskPatrol*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PageTaskPatrol_Builder*) builder;
+ (PageTaskPatrol_Builder*) builder;
+ (PageTaskPatrol_Builder*) builderWithPrototype:(PageTaskPatrol*) prototype;
- (PageTaskPatrol_Builder*) toBuilder;

+ (PageTaskPatrol*) parseFromData:(NSData*) data;
+ (PageTaskPatrol*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PageTaskPatrol*) parseFromInputStream:(NSInputStream*) input;
+ (PageTaskPatrol*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PageTaskPatrol*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PageTaskPatrol*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PageTaskPatrol_Builder : PBGeneratedMessage_Builder {
@private
  PageTaskPatrol* result;
}

- (PageTaskPatrol*) defaultInstance;

- (PageTaskPatrol_Builder*) clear;
- (PageTaskPatrol_Builder*) clone;

- (PageTaskPatrol*) build;
- (PageTaskPatrol*) buildPartial;

- (PageTaskPatrol_Builder*) mergeFrom:(PageTaskPatrol*) other;
- (PageTaskPatrol_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PageTaskPatrol_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPage;
- (Pagination*) page;
- (PageTaskPatrol_Builder*) setPage:(Pagination*) value;
- (PageTaskPatrol_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue;
- (PageTaskPatrol_Builder*) mergePage:(Pagination*) value;
- (PageTaskPatrol_Builder*) clearPage;

- (PBAppendableArray *)taskPatrols;
- (TaskPatrol*)taskPatrolsAtIndex:(NSUInteger)index;
- (PageTaskPatrol_Builder *)addTaskPatrols:(TaskPatrol*)value;
- (PageTaskPatrol_Builder *)setTaskPatrolsArray:(NSArray *)array;
- (PageTaskPatrol_Builder *)setTaskPatrolsValues:(const TaskPatrol* *)values count:(NSUInteger)count;
- (PageTaskPatrol_Builder *)clearTaskPatrols;
@end

@interface TaskPatrolDetailParams : PBGeneratedMessage {
@private
  BOOL hasTaskId_:1;
  BOOL hasStartDate_:1;
  NSString* taskId;
  NSString* startDate;
}
- (BOOL) hasTaskId;
- (BOOL) hasStartDate;
@property (readonly, retain) NSString* taskId;
@property (readonly, retain) NSString* startDate;

+ (TaskPatrolDetailParams*) defaultInstance;
- (TaskPatrolDetailParams*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TaskPatrolDetailParams_Builder*) builder;
+ (TaskPatrolDetailParams_Builder*) builder;
+ (TaskPatrolDetailParams_Builder*) builderWithPrototype:(TaskPatrolDetailParams*) prototype;
- (TaskPatrolDetailParams_Builder*) toBuilder;

+ (TaskPatrolDetailParams*) parseFromData:(NSData*) data;
+ (TaskPatrolDetailParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolDetailParams*) parseFromInputStream:(NSInputStream*) input;
+ (TaskPatrolDetailParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolDetailParams*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TaskPatrolDetailParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TaskPatrolDetailParams_Builder : PBGeneratedMessage_Builder {
@private
  TaskPatrolDetailParams* result;
}

- (TaskPatrolDetailParams*) defaultInstance;

- (TaskPatrolDetailParams_Builder*) clear;
- (TaskPatrolDetailParams_Builder*) clone;

- (TaskPatrolDetailParams*) build;
- (TaskPatrolDetailParams*) buildPartial;

- (TaskPatrolDetailParams_Builder*) mergeFrom:(TaskPatrolDetailParams*) other;
- (TaskPatrolDetailParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TaskPatrolDetailParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTaskId;
- (NSString*) taskId;
- (TaskPatrolDetailParams_Builder*) setTaskId:(NSString*) value;
- (TaskPatrolDetailParams_Builder*) clearTaskId;

- (BOOL) hasStartDate;
- (NSString*) startDate;
- (TaskPatrolDetailParams_Builder*) setStartDate:(NSString*) value;
- (TaskPatrolDetailParams_Builder*) clearStartDate;
@end

@interface TaskPatrolReply : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasTaskId_:1;
  BOOL hasContent_:1;
  BOOL hasCreateDate_:1;
  BOOL hasSender_:1;
  int32_t id;
  NSString* taskId;
  NSString* content;
  NSString* createDate;
  User* sender;
  PBAppendableArray * filePathArray;
  PBAppendableArray * receiversArray;
  PBAppendableArray * filesArray;
}
- (BOOL) hasId;
- (BOOL) hasTaskId;
- (BOOL) hasSender;
- (BOOL) hasContent;
- (BOOL) hasCreateDate;
@property (readonly) int32_t id;
@property (readonly, retain) NSString* taskId;
@property (readonly, retain) User* sender;
@property (readonly, retain) PBArray * receivers;
@property (readonly, retain) NSString* content;
@property (readonly, retain) NSString* createDate;
@property (readonly, retain) PBArray * files;
@property (readonly, retain) PBArray * filePath;
- (User*)receiversAtIndex:(NSUInteger)index;
- (NSData*)filesAtIndex:(NSUInteger)index;
- (NSString*)filePathAtIndex:(NSUInteger)index;

+ (TaskPatrolReply*) defaultInstance;
- (TaskPatrolReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TaskPatrolReply_Builder*) builder;
+ (TaskPatrolReply_Builder*) builder;
+ (TaskPatrolReply_Builder*) builderWithPrototype:(TaskPatrolReply*) prototype;
- (TaskPatrolReply_Builder*) toBuilder;

+ (TaskPatrolReply*) parseFromData:(NSData*) data;
+ (TaskPatrolReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolReply*) parseFromInputStream:(NSInputStream*) input;
+ (TaskPatrolReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TaskPatrolReply*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TaskPatrolReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TaskPatrolReply_Builder : PBGeneratedMessage_Builder {
@private
  TaskPatrolReply* result;
}

- (TaskPatrolReply*) defaultInstance;

- (TaskPatrolReply_Builder*) clear;
- (TaskPatrolReply_Builder*) clone;

- (TaskPatrolReply*) build;
- (TaskPatrolReply*) buildPartial;

- (TaskPatrolReply_Builder*) mergeFrom:(TaskPatrolReply*) other;
- (TaskPatrolReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TaskPatrolReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (TaskPatrolReply_Builder*) setId:(int32_t) value;
- (TaskPatrolReply_Builder*) clearId;

- (BOOL) hasTaskId;
- (NSString*) taskId;
- (TaskPatrolReply_Builder*) setTaskId:(NSString*) value;
- (TaskPatrolReply_Builder*) clearTaskId;

- (BOOL) hasSender;
- (User*) sender;
- (TaskPatrolReply_Builder*) setSender:(User*) value;
- (TaskPatrolReply_Builder*) setSenderBuilder:(User_Builder*) builderForValue;
- (TaskPatrolReply_Builder*) mergeSender:(User*) value;
- (TaskPatrolReply_Builder*) clearSender;

- (PBAppendableArray *)receivers;
- (User*)receiversAtIndex:(NSUInteger)index;
- (TaskPatrolReply_Builder *)addReceivers:(User*)value;
- (TaskPatrolReply_Builder *)setReceiversArray:(NSArray *)array;
- (TaskPatrolReply_Builder *)setReceiversValues:(const User* *)values count:(NSUInteger)count;
- (TaskPatrolReply_Builder *)clearReceivers;

- (BOOL) hasContent;
- (NSString*) content;
- (TaskPatrolReply_Builder*) setContent:(NSString*) value;
- (TaskPatrolReply_Builder*) clearContent;

- (BOOL) hasCreateDate;
- (NSString*) createDate;
- (TaskPatrolReply_Builder*) setCreateDate:(NSString*) value;
- (TaskPatrolReply_Builder*) clearCreateDate;

- (PBAppendableArray *)files;
- (NSData*)filesAtIndex:(NSUInteger)index;
- (TaskPatrolReply_Builder *)addFiles:(NSData*)value;
- (TaskPatrolReply_Builder *)setFilesArray:(NSArray *)array;
- (TaskPatrolReply_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count;
- (TaskPatrolReply_Builder *)clearFiles;

- (PBAppendableArray *)filePath;
- (NSString*)filePathAtIndex:(NSUInteger)index;
- (TaskPatrolReply_Builder *)addFilePath:(NSString*)value;
- (TaskPatrolReply_Builder *)setFilePathArray:(NSArray *)array;
- (TaskPatrolReply_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count;
- (TaskPatrolReply_Builder *)clearFilePath;
@end

