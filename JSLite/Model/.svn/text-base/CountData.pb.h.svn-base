// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "User.pb.h"
#import "Customer.pb.h"

@class AppSetting;
@class AppSetting_Builder;
@class Company;
@class Company_Builder;
@class Contact;
@class Contact_Builder;
@class CountData;
@class CountData_Builder;
@class CountParams;
@class CountParams_Builder;
@class Customer;
@class CustomerCategory;
@class CustomerCategory_Builder;
@class CustomerParams;
@class CustomerParams_Builder;
@class CustomerTag;
@class CustomerTagValue;
@class CustomerTagValue_Builder;
@class CustomerTag_Builder;
@class Customer_Builder;
@class Department;
@class Department_Builder;
@class Device;
@class Device_Builder;
@class Function;
@class Function_Builder;
@class Location;
@class Location_Builder;
@class PageCustomer;
@class PageCustomer_Builder;
@class PageUser;
@class PageUser_Builder;
@class Pagination;
@class Pagination_Builder;
@class Permission;
@class Permission_Builder;
@class Position;
@class Position_Builder;
@class Product;
@class ProductCategory;
@class ProductCategory_Builder;
@class ProductParams;
@class ProductParams_Builder;
@class ProductSpecification;
@class ProductSpecificationValue;
@class ProductSpecificationValue_Builder;
@class ProductSpecification_Builder;
@class Product_Builder;
@class SystemSetting;
@class SystemSetting_Builder;
@class User;
@class UserParams;
@class UserParams_Builder;
@class User_Builder;
#ifndef __has_feature
#define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
#if __has_feature(attribute_ns_returns_not_retained)
#define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
#else
#define NS_RETURNS_NOT_RETAINED
#endif
#endif


@interface CountDataRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface CountParams : PBGeneratedMessage {
@private
    BOOL hasPage_:1;
    BOOL hasStartDate_:1;
    BOOL hasEndDate_:1;
    int32_t page;
    NSString* startDate;
    NSString* endDate;
    PBAppendableArray * usersArray;
    PBAppendableArray * customerCategoryArray;
    PBAppendableArray * customersArray;
    PBAppendableArray * departmentsArray;
    PBAppendableArray * companiesArray;
}
- (BOOL) hasPage;
- (BOOL) hasStartDate;
- (BOOL) hasEndDate;
@property (readonly) int32_t page;
@property (readonly, retain) PBArray * users;
@property (readonly, retain) PBArray * customerCategory;
@property (readonly, retain) PBArray * customers;
@property (readonly, retain) PBArray * departments;
@property (readonly, retain) PBArray * companies;
@property (readonly, retain) NSString* startDate;
@property (readonly, retain) NSString* endDate;
- (User*)usersAtIndex:(NSUInteger)index;
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index;
- (Customer*)customersAtIndex:(NSUInteger)index;
- (Department*)departmentsAtIndex:(NSUInteger)index;
- (Company*)companiesAtIndex:(NSUInteger)index;

+ (CountParams*) defaultInstance;
- (CountParams*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CountParams_Builder*) builder;
+ (CountParams_Builder*) builder;
+ (CountParams_Builder*) builderWithPrototype:(CountParams*) prototype;
- (CountParams_Builder*) toBuilder;

+ (CountParams*) parseFromData:(NSData*) data;
+ (CountParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CountParams*) parseFromInputStream:(NSInputStream*) input;
+ (CountParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CountParams*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CountParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CountParams_Builder : PBGeneratedMessage_Builder {
@private
    CountParams* result;
}

- (CountParams*) defaultInstance;

- (CountParams_Builder*) clear;
- (CountParams_Builder*) clone;

- (CountParams*) build;
- (CountParams*) buildPartial;

- (CountParams_Builder*) mergeFrom:(CountParams*) other;
- (CountParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CountParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPage;
- (int32_t) page;
- (CountParams_Builder*) setPage:(int32_t) value;
- (CountParams_Builder*) clearPage;

- (PBAppendableArray *)users;
- (User*)usersAtIndex:(NSUInteger)index;
- (CountParams_Builder *)addUsers:(User*)value;
- (CountParams_Builder *)setUsersArray:(NSArray *)array;
- (CountParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count;
- (CountParams_Builder *)clearUsers;

- (PBAppendableArray *)customerCategory;
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index;
- (CountParams_Builder *)addCustomerCategory:(CustomerCategory*)value;
- (CountParams_Builder *)setCustomerCategoryArray:(NSArray *)array;
- (CountParams_Builder *)setCustomerCategoryValues:(const CustomerCategory* *)values count:(NSUInteger)count;
- (CountParams_Builder *)clearCustomerCategory;

- (PBAppendableArray *)customers;
- (Customer*)customersAtIndex:(NSUInteger)index;
- (CountParams_Builder *)addCustomers:(Customer*)value;
- (CountParams_Builder *)setCustomersArray:(NSArray *)array;
- (CountParams_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count;
- (CountParams_Builder *)clearCustomers;

- (PBAppendableArray *)departments;
- (Department*)departmentsAtIndex:(NSUInteger)index;
- (CountParams_Builder *)addDepartments:(Department*)value;
- (CountParams_Builder *)setDepartmentsArray:(NSArray *)array;
- (CountParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count;
- (CountParams_Builder *)clearDepartments;

- (PBAppendableArray *)companies;
- (Company*)companiesAtIndex:(NSUInteger)index;
- (CountParams_Builder *)addCompanies:(Company*)value;
- (CountParams_Builder *)setCompaniesArray:(NSArray *)array;
- (CountParams_Builder *)setCompaniesValues:(const Company* *)values count:(NSUInteger)count;
- (CountParams_Builder *)clearCompanies;

- (BOOL) hasStartDate;
- (NSString*) startDate;
- (CountParams_Builder*) setStartDate:(NSString*) value;
- (CountParams_Builder*) clearStartDate;

- (BOOL) hasEndDate;
- (NSString*) endDate;
- (CountParams_Builder*) setEndDate:(NSString*) value;
- (CountParams_Builder*) clearEndDate;
@end

@interface CountData : PBGeneratedMessage {
@private
    BOOL hasVersion_:1;
    BOOL hasCheckinCount_:1;
    BOOL hasHolidayCount_:1;
    BOOL hasPaperPostCount_:1;
    BOOL hasVideoUploadCount_:1;
    BOOL hasTaskPatrolCount_:1;
    BOOL hasInspectionReportCount_:1;
    BOOL hasGiftStockCount_:1;
    BOOL hasGiftDistributeCount_:1;
    BOOL hasGiftDeliveryCount_:1;
    BOOL hasGiftPurchaseCount_:1;
    BOOL hasApplyItemCount_:1;
    BOOL hasBusinessOpportunityCount_:1;
    BOOL hasMarketResearchCount_:1;
    BOOL hasCompetitionGoodsCount_:1;
    BOOL hasSaleGoodsCount_:1;
    BOOL hasStockCount_:1;
    BOOL hasOrderGoodsCount_:1;
    BOOL hasAttendanceCount_:1;
    BOOL hasWorkLogCount_:1;
    BOOL hasPatrolCount_:1;
    BOOL hasNearByUserCount_:1;
    BOOL hasMyCustomerCount_:1;
    BOOL hasFavPatrolTypeCount_:1;
    BOOL hasFavProductCount_:1;
    BOOL hasFavCustomerCount_:1;
    int32_t version;
    NSString* checkinCount;
    NSString* holidayCount;
    NSString* paperPostCount;
    NSString* videoUploadCount;
    NSString* taskPatrolCount;
    NSString* inspectionReportCount;
    NSString* giftStockCount;
    NSString* giftDistributeCount;
    NSString* giftDeliveryCount;
    NSString* giftPurchaseCount;
    NSString* applyItemCount;
    NSString* businessOpportunityCount;
    NSString* marketResearchCount;
    NSString* competitionGoodsCount;
    NSString* saleGoodsCount;
    NSString* stockCount;
    NSString* orderGoodsCount;
    NSString* attendanceCount;
    NSString* workLogCount;
    NSString* patrolCount;
    NSString* nearByUserCount;
    NSString* myCustomerCount;
    NSString* favPatrolTypeCount;
    NSString* favProductCount;
    NSString* favCustomerCount;
}
- (BOOL) hasFavCustomerCount;
- (BOOL) hasFavProductCount;
- (BOOL) hasFavPatrolTypeCount;
- (BOOL) hasMyCustomerCount;
- (BOOL) hasNearByUserCount;
- (BOOL) hasPatrolCount;
- (BOOL) hasWorkLogCount;
- (BOOL) hasAttendanceCount;
- (BOOL) hasOrderGoodsCount;
- (BOOL) hasStockCount;
- (BOOL) hasSaleGoodsCount;
- (BOOL) hasCompetitionGoodsCount;
- (BOOL) hasMarketResearchCount;
- (BOOL) hasBusinessOpportunityCount;
- (BOOL) hasApplyItemCount;
- (BOOL) hasGiftPurchaseCount;
- (BOOL) hasGiftDeliveryCount;
- (BOOL) hasGiftDistributeCount;
- (BOOL) hasGiftStockCount;
- (BOOL) hasInspectionReportCount;
- (BOOL) hasTaskPatrolCount;
- (BOOL) hasVideoUploadCount;
- (BOOL) hasPaperPostCount;
- (BOOL) hasHolidayCount;
- (BOOL) hasCheckinCount;
- (BOOL) hasVersion;
@property (readonly, retain) NSString* favCustomerCount;
@property (readonly, retain) NSString* favProductCount;
@property (readonly, retain) NSString* favPatrolTypeCount;
@property (readonly, retain) NSString* myCustomerCount;
@property (readonly, retain) NSString* nearByUserCount;
@property (readonly, retain) NSString* patrolCount;
@property (readonly, retain) NSString* workLogCount;
@property (readonly, retain) NSString* attendanceCount;
@property (readonly, retain) NSString* orderGoodsCount;
@property (readonly, retain) NSString* stockCount;
@property (readonly, retain) NSString* saleGoodsCount;
@property (readonly, retain) NSString* competitionGoodsCount;
@property (readonly, retain) NSString* marketResearchCount;
@property (readonly, retain) NSString* businessOpportunityCount;
@property (readonly, retain) NSString* applyItemCount;
@property (readonly, retain) NSString* giftPurchaseCount;
@property (readonly, retain) NSString* giftDeliveryCount;
@property (readonly, retain) NSString* giftDistributeCount;
@property (readonly, retain) NSString* giftStockCount;
@property (readonly, retain) NSString* inspectionReportCount;
@property (readonly, retain) NSString* taskPatrolCount;
@property (readonly, retain) NSString* videoUploadCount;
@property (readonly, retain) NSString* paperPostCount;
@property (readonly, retain) NSString* holidayCount;
@property (readonly, retain) NSString* checkinCount;
@property (readonly) int32_t version;

+ (CountData*) defaultInstance;
- (CountData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CountData_Builder*) builder;
+ (CountData_Builder*) builder;
+ (CountData_Builder*) builderWithPrototype:(CountData*) prototype;
- (CountData_Builder*) toBuilder;

+ (CountData*) parseFromData:(NSData*) data;
+ (CountData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CountData*) parseFromInputStream:(NSInputStream*) input;
+ (CountData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CountData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CountData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CountData_Builder : PBGeneratedMessage_Builder {
@private
    CountData* result;
}

- (CountData*) defaultInstance;

- (CountData_Builder*) clear;
- (CountData_Builder*) clone;

- (CountData*) build;
- (CountData*) buildPartial;

- (CountData_Builder*) mergeFrom:(CountData*) other;
- (CountData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CountData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFavCustomerCount;
- (NSString*) favCustomerCount;
- (CountData_Builder*) setFavCustomerCount:(NSString*) value;
- (CountData_Builder*) clearFavCustomerCount;

- (BOOL) hasFavProductCount;
- (NSString*) favProductCount;
- (CountData_Builder*) setFavProductCount:(NSString*) value;
- (CountData_Builder*) clearFavProductCount;

- (BOOL) hasFavPatrolTypeCount;
- (NSString*) favPatrolTypeCount;
- (CountData_Builder*) setFavPatrolTypeCount:(NSString*) value;
- (CountData_Builder*) clearFavPatrolTypeCount;

- (BOOL) hasMyCustomerCount;
- (NSString*) myCustomerCount;
- (CountData_Builder*) setMyCustomerCount:(NSString*) value;
- (CountData_Builder*) clearMyCustomerCount;

- (BOOL) hasNearByUserCount;
- (NSString*) nearByUserCount;
- (CountData_Builder*) setNearByUserCount:(NSString*) value;
- (CountData_Builder*) clearNearByUserCount;

- (BOOL) hasPatrolCount;
- (NSString*) patrolCount;
- (CountData_Builder*) setPatrolCount:(NSString*) value;
- (CountData_Builder*) clearPatrolCount;

- (BOOL) hasWorkLogCount;
- (NSString*) workLogCount;
- (CountData_Builder*) setWorkLogCount:(NSString*) value;
- (CountData_Builder*) clearWorkLogCount;

- (BOOL) hasAttendanceCount;
- (NSString*) attendanceCount;
- (CountData_Builder*) setAttendanceCount:(NSString*) value;
- (CountData_Builder*) clearAttendanceCount;

- (BOOL) hasOrderGoodsCount;
- (NSString*) orderGoodsCount;
- (CountData_Builder*) setOrderGoodsCount:(NSString*) value;
- (CountData_Builder*) clearOrderGoodsCount;

- (BOOL) hasStockCount;
- (NSString*) stockCount;
- (CountData_Builder*) setStockCount:(NSString*) value;
- (CountData_Builder*) clearStockCount;

- (BOOL) hasSaleGoodsCount;
- (NSString*) saleGoodsCount;
- (CountData_Builder*) setSaleGoodsCount:(NSString*) value;
- (CountData_Builder*) clearSaleGoodsCount;

- (BOOL) hasCompetitionGoodsCount;
- (NSString*) competitionGoodsCount;
- (CountData_Builder*) setCompetitionGoodsCount:(NSString*) value;
- (CountData_Builder*) clearCompetitionGoodsCount;

- (BOOL) hasMarketResearchCount;
- (NSString*) marketResearchCount;
- (CountData_Builder*) setMarketResearchCount:(NSString*) value;
- (CountData_Builder*) clearMarketResearchCount;

- (BOOL) hasBusinessOpportunityCount;
- (NSString*) businessOpportunityCount;
- (CountData_Builder*) setBusinessOpportunityCount:(NSString*) value;
- (CountData_Builder*) clearBusinessOpportunityCount;

- (BOOL) hasApplyItemCount;
- (NSString*) applyItemCount;
- (CountData_Builder*) setApplyItemCount:(NSString*) value;
- (CountData_Builder*) clearApplyItemCount;

- (BOOL) hasGiftPurchaseCount;
- (NSString*) giftPurchaseCount;
- (CountData_Builder*) setGiftPurchaseCount:(NSString*) value;
- (CountData_Builder*) clearGiftPurchaseCount;

- (BOOL) hasGiftDeliveryCount;
- (NSString*) giftDeliveryCount;
- (CountData_Builder*) setGiftDeliveryCount:(NSString*) value;
- (CountData_Builder*) clearGiftDeliveryCount;

- (BOOL) hasGiftDistributeCount;
- (NSString*) giftDistributeCount;
- (CountData_Builder*) setGiftDistributeCount:(NSString*) value;
- (CountData_Builder*) clearGiftDistributeCount;

- (BOOL) hasGiftStockCount;
- (NSString*) giftStockCount;
- (CountData_Builder*) setGiftStockCount:(NSString*) value;
- (CountData_Builder*) clearGiftStockCount;

- (BOOL) hasInspectionReportCount;
- (NSString*) inspectionReportCount;
- (CountData_Builder*) setInspectionReportCount:(NSString*) value;
- (CountData_Builder*) clearInspectionReportCount;

- (BOOL) hasTaskPatrolCount;
- (NSString*) taskPatrolCount;
- (CountData_Builder*) setTaskPatrolCount:(NSString*) value;
- (CountData_Builder*) clearTaskPatrolCount;

- (BOOL) hasVideoUploadCount;
- (NSString*) videoUploadCount;
- (CountData_Builder*) setVideoUploadCount:(NSString*) value;
- (CountData_Builder*) clearVideoUploadCount;

- (BOOL) hasPaperPostCount;
- (NSString*) paperPostCount;
- (CountData_Builder*) setPaperPostCount:(NSString*) value;
- (CountData_Builder*) clearPaperPostCount;

- (BOOL) hasHolidayCount;
- (NSString*) holidayCount;
- (CountData_Builder*) setHolidayCount:(NSString*) value;
- (CountData_Builder*) clearHolidayCount;

- (BOOL) hasCheckinCount;
- (NSString*) checkinCount;
- (CountData_Builder*) setCheckinCount:(NSString*) value;
- (CountData_Builder*) clearCheckinCount;

- (BOOL) hasVersion;
- (int32_t) version;
- (CountData_Builder*) setVersion:(int32_t) value;
- (CountData_Builder*) clearVersion;
@end

