// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Generic.pb.h"
#import "User.pb.h"

@class AppSetting;
@class AppSetting_Builder;
@class Company;
@class Company_Builder;
@class Department;
@class Department_Builder;
@class Device;
@class Device_Builder;
@class Function;
@class Function_Builder;
@class Location;
@class Location_Builder;
@class PageUser;
@class PageUser_Builder;
@class PageWorkLog;
@class PageWorkLog_Builder;
@class Pagination;
@class Pagination_Builder;
@class Permission;
@class Permission_Builder;
@class Position;
@class Position_Builder;
@class SystemSetting;
@class SystemSetting_Builder;
@class User;
@class UserParams;
@class UserParams_Builder;
@class User_Builder;
@class WorkLog;
@class WorkLogParams;
@class WorkLogParams_Builder;
@class WorkLogReply;
@class WorkLogReply_Builder;
@class WorkLog_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface WorklogRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface WorkLog : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasReplyCount_:1;
  BOOL hasToday_:1;
  BOOL hasPlan_:1;
  BOOL hasSpecial_:1;
  BOOL hasCreateDate_:1;
  BOOL hasUser_:1;
  int32_t id;
  int32_t replyCount;
  NSString* today;
  NSString* plan;
  NSString* special;
  NSString* createDate;
  User* user;
}
- (BOOL) hasUser;
- (BOOL) hasId;
- (BOOL) hasToday;
- (BOOL) hasPlan;
- (BOOL) hasSpecial;
- (BOOL) hasCreateDate;
- (BOOL) hasReplyCount;
@property (readonly, retain) User* user;
@property (readonly) int32_t id;
@property (readonly, retain) NSString* today;
@property (readonly, retain) NSString* plan;
@property (readonly, retain) NSString* special;
@property (readonly, retain) NSString* createDate;
@property (readonly) int32_t replyCount;

+ (WorkLog*) defaultInstance;
- (WorkLog*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (WorkLog_Builder*) builder;
+ (WorkLog_Builder*) builder;
+ (WorkLog_Builder*) builderWithPrototype:(WorkLog*) prototype;
- (WorkLog_Builder*) toBuilder;

+ (WorkLog*) parseFromData:(NSData*) data;
+ (WorkLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WorkLog*) parseFromInputStream:(NSInputStream*) input;
+ (WorkLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WorkLog*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (WorkLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface WorkLog_Builder : PBGeneratedMessage_Builder {
@private
  WorkLog* result;
}

- (WorkLog*) defaultInstance;

- (WorkLog_Builder*) clear;
- (WorkLog_Builder*) clone;

- (WorkLog*) build;
- (WorkLog*) buildPartial;

- (WorkLog_Builder*) mergeFrom:(WorkLog*) other;
- (WorkLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (WorkLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUser;
- (User*) user;
- (WorkLog_Builder*) setUser:(User*) value;
- (WorkLog_Builder*) setUserBuilder:(User_Builder*) builderForValue;
- (WorkLog_Builder*) mergeUser:(User*) value;
- (WorkLog_Builder*) clearUser;

- (BOOL) hasId;
- (int32_t) id;
- (WorkLog_Builder*) setId:(int32_t) value;
- (WorkLog_Builder*) clearId;

- (BOOL) hasToday;
- (NSString*) today;
- (WorkLog_Builder*) setToday:(NSString*) value;
- (WorkLog_Builder*) clearToday;

- (BOOL) hasPlan;
- (NSString*) plan;
- (WorkLog_Builder*) setPlan:(NSString*) value;
- (WorkLog_Builder*) clearPlan;

- (BOOL) hasSpecial;
- (NSString*) special;
- (WorkLog_Builder*) setSpecial:(NSString*) value;
- (WorkLog_Builder*) clearSpecial;

- (BOOL) hasCreateDate;
- (NSString*) createDate;
- (WorkLog_Builder*) setCreateDate:(NSString*) value;
- (WorkLog_Builder*) clearCreateDate;

- (BOOL) hasReplyCount;
- (int32_t) replyCount;
- (WorkLog_Builder*) setReplyCount:(int32_t) value;
- (WorkLog_Builder*) clearReplyCount;
@end

@interface WorkLogReply : PBGeneratedMessage {
@private
  BOOL hasId_:1;
  BOOL hasWorkLogId_:1;
  BOOL hasContent_:1;
  BOOL hasCreateDate_:1;
  BOOL hasSender_:1;
  int32_t id;
  int32_t workLogId;
  NSString* content;
  NSString* createDate;
  User* sender;
  PBAppendableArray * filePathArray;
  PBAppendableArray * receiversArray;
  PBAppendableArray * filesArray;
}
- (BOOL) hasId;
- (BOOL) hasWorkLogId;
- (BOOL) hasSender;
- (BOOL) hasContent;
- (BOOL) hasCreateDate;
@property (readonly) int32_t id;
@property (readonly) int32_t workLogId;
@property (readonly, retain) User* sender;
@property (readonly, retain) PBArray * receivers;
@property (readonly, retain) NSString* content;
@property (readonly, retain) NSString* createDate;
@property (readonly, retain) PBArray * files;
@property (readonly, retain) PBArray * filePath;
- (User*)receiversAtIndex:(NSUInteger)index;
- (NSData*)filesAtIndex:(NSUInteger)index;
- (NSString*)filePathAtIndex:(NSUInteger)index;

+ (WorkLogReply*) defaultInstance;
- (WorkLogReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (WorkLogReply_Builder*) builder;
+ (WorkLogReply_Builder*) builder;
+ (WorkLogReply_Builder*) builderWithPrototype:(WorkLogReply*) prototype;
- (WorkLogReply_Builder*) toBuilder;

+ (WorkLogReply*) parseFromData:(NSData*) data;
+ (WorkLogReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WorkLogReply*) parseFromInputStream:(NSInputStream*) input;
+ (WorkLogReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WorkLogReply*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (WorkLogReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface WorkLogReply_Builder : PBGeneratedMessage_Builder {
@private
  WorkLogReply* result;
}

- (WorkLogReply*) defaultInstance;

- (WorkLogReply_Builder*) clear;
- (WorkLogReply_Builder*) clone;

- (WorkLogReply*) build;
- (WorkLogReply*) buildPartial;

- (WorkLogReply_Builder*) mergeFrom:(WorkLogReply*) other;
- (WorkLogReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (WorkLogReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (WorkLogReply_Builder*) setId:(int32_t) value;
- (WorkLogReply_Builder*) clearId;

- (BOOL) hasWorkLogId;
- (int32_t) workLogId;
- (WorkLogReply_Builder*) setWorkLogId:(int32_t) value;
- (WorkLogReply_Builder*) clearWorkLogId;

- (BOOL) hasSender;
- (User*) sender;
- (WorkLogReply_Builder*) setSender:(User*) value;
- (WorkLogReply_Builder*) setSenderBuilder:(User_Builder*) builderForValue;
- (WorkLogReply_Builder*) mergeSender:(User*) value;
- (WorkLogReply_Builder*) clearSender;

- (PBAppendableArray *)receivers;
- (User*)receiversAtIndex:(NSUInteger)index;
- (WorkLogReply_Builder *)addReceivers:(User*)value;
- (WorkLogReply_Builder *)setReceiversArray:(NSArray *)array;
- (WorkLogReply_Builder *)setReceiversValues:(const User* *)values count:(NSUInteger)count;
- (WorkLogReply_Builder *)clearReceivers;

- (BOOL) hasContent;
- (NSString*) content;
- (WorkLogReply_Builder*) setContent:(NSString*) value;
- (WorkLogReply_Builder*) clearContent;

- (BOOL) hasCreateDate;
- (NSString*) createDate;
- (WorkLogReply_Builder*) setCreateDate:(NSString*) value;
- (WorkLogReply_Builder*) clearCreateDate;

- (PBAppendableArray *)files;
- (NSData*)filesAtIndex:(NSUInteger)index;
- (WorkLogReply_Builder *)addFiles:(NSData*)value;
- (WorkLogReply_Builder *)setFilesArray:(NSArray *)array;
- (WorkLogReply_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count;
- (WorkLogReply_Builder *)clearFiles;

- (PBAppendableArray *)filePath;
- (NSString*)filePathAtIndex:(NSUInteger)index;
- (WorkLogReply_Builder *)addFilePath:(NSString*)value;
- (WorkLogReply_Builder *)setFilePathArray:(NSArray *)array;
- (WorkLogReply_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count;
- (WorkLogReply_Builder *)clearFilePath;
@end

@interface WorkLogParams : PBGeneratedMessage {
@private
  BOOL hasPage_:1;
  BOOL hasId_:1;
  BOOL hasStartDate_:1;
  BOOL hasEndDate_:1;
  int32_t page;
  int32_t id;
  NSString* startDate;
  NSString* endDate;
  PBAppendableArray * usersArray;
  PBAppendableArray * departmentsArray;
}
- (BOOL) hasStartDate;
- (BOOL) hasEndDate;
- (BOOL) hasPage;
- (BOOL) hasId;
@property (readonly, retain) PBArray * users;
@property (readonly, retain) PBArray * departments;
@property (readonly, retain) NSString* startDate;
@property (readonly, retain) NSString* endDate;
@property (readonly) int32_t page;
@property (readonly) int32_t id;
- (User*)usersAtIndex:(NSUInteger)index;
- (Department*)departmentsAtIndex:(NSUInteger)index;

+ (WorkLogParams*) defaultInstance;
- (WorkLogParams*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (WorkLogParams_Builder*) builder;
+ (WorkLogParams_Builder*) builder;
+ (WorkLogParams_Builder*) builderWithPrototype:(WorkLogParams*) prototype;
- (WorkLogParams_Builder*) toBuilder;

+ (WorkLogParams*) parseFromData:(NSData*) data;
+ (WorkLogParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WorkLogParams*) parseFromInputStream:(NSInputStream*) input;
+ (WorkLogParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WorkLogParams*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (WorkLogParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface WorkLogParams_Builder : PBGeneratedMessage_Builder {
@private
  WorkLogParams* result;
}

- (WorkLogParams*) defaultInstance;

- (WorkLogParams_Builder*) clear;
- (WorkLogParams_Builder*) clone;

- (WorkLogParams*) build;
- (WorkLogParams*) buildPartial;

- (WorkLogParams_Builder*) mergeFrom:(WorkLogParams*) other;
- (WorkLogParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (WorkLogParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)users;
- (User*)usersAtIndex:(NSUInteger)index;
- (WorkLogParams_Builder *)addUsers:(User*)value;
- (WorkLogParams_Builder *)setUsersArray:(NSArray *)array;
- (WorkLogParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count;
- (WorkLogParams_Builder *)clearUsers;

- (PBAppendableArray *)departments;
- (Department*)departmentsAtIndex:(NSUInteger)index;
- (WorkLogParams_Builder *)addDepartments:(Department*)value;
- (WorkLogParams_Builder *)setDepartmentsArray:(NSArray *)array;
- (WorkLogParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count;
- (WorkLogParams_Builder *)clearDepartments;

- (BOOL) hasStartDate;
- (NSString*) startDate;
- (WorkLogParams_Builder*) setStartDate:(NSString*) value;
- (WorkLogParams_Builder*) clearStartDate;

- (BOOL) hasEndDate;
- (NSString*) endDate;
- (WorkLogParams_Builder*) setEndDate:(NSString*) value;
- (WorkLogParams_Builder*) clearEndDate;

- (BOOL) hasPage;
- (int32_t) page;
- (WorkLogParams_Builder*) setPage:(int32_t) value;
- (WorkLogParams_Builder*) clearPage;

- (BOOL) hasId;
- (int32_t) id;
- (WorkLogParams_Builder*) setId:(int32_t) value;
- (WorkLogParams_Builder*) clearId;
@end

@interface PageWorkLog : PBGeneratedMessage {
@private
  BOOL hasPage_:1;
  Pagination* page;
  PBAppendableArray * workLogsArray;
}
- (BOOL) hasPage;
@property (readonly, retain) Pagination* page;
@property (readonly, retain) PBArray * workLogs;
- (WorkLog*)workLogsAtIndex:(NSUInteger)index;

+ (PageWorkLog*) defaultInstance;
- (PageWorkLog*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PageWorkLog_Builder*) builder;
+ (PageWorkLog_Builder*) builder;
+ (PageWorkLog_Builder*) builderWithPrototype:(PageWorkLog*) prototype;
- (PageWorkLog_Builder*) toBuilder;

+ (PageWorkLog*) parseFromData:(NSData*) data;
+ (PageWorkLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PageWorkLog*) parseFromInputStream:(NSInputStream*) input;
+ (PageWorkLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PageWorkLog*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PageWorkLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PageWorkLog_Builder : PBGeneratedMessage_Builder {
@private
  PageWorkLog* result;
}

- (PageWorkLog*) defaultInstance;

- (PageWorkLog_Builder*) clear;
- (PageWorkLog_Builder*) clone;

- (PageWorkLog*) build;
- (PageWorkLog*) buildPartial;

- (PageWorkLog_Builder*) mergeFrom:(PageWorkLog*) other;
- (PageWorkLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PageWorkLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPage;
- (Pagination*) page;
- (PageWorkLog_Builder*) setPage:(Pagination*) value;
- (PageWorkLog_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue;
- (PageWorkLog_Builder*) mergePage:(Pagination*) value;
- (PageWorkLog_Builder*) clearPage;

- (PBAppendableArray *)workLogs;
- (WorkLog*)workLogsAtIndex:(NSUInteger)index;
- (PageWorkLog_Builder *)addWorkLogs:(WorkLog*)value;
- (PageWorkLog_Builder *)setWorkLogsArray:(NSArray *)array;
- (PageWorkLog_Builder *)setWorkLogsValues:(const WorkLog* *)values count:(NSUInteger)count;
- (PageWorkLog_Builder *)clearWorkLogs;
@end

