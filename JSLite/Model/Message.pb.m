// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Message.pb.h"

@implementation MessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GenericRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL MessageTypeIsValidValue(MessageType value) {
  switch (value) {
    case MessageTypeService:
    case MessageTypeAnnounce:
    case MessageTypeSyncdata:
    case MessageTypeException:
      return YES;
    default:
      return NO;
  }
}
BOOL SyncTypeIsValidValue(SyncType value) {
  switch (value) {
    case SyncTypeSync:
      return YES;
    default:
      return NO;
  }
}
BOOL SyncTargetIsValidValue(SyncTarget value) {
  switch (value) {
    case SyncTargetUser:
    case SyncTargetPosition:
    case SyncTargetDepartment:
    case SyncTargetCompany:
    case SyncTargetProductCategory:
    case SyncTargetProduct:
    case SyncTargetCompetitionProduct:
    case SyncTargetGiftProductCategory:
    case SyncTargetGiftProduct:
    case SyncTargetCustomerCategory:
    case SyncTargetCustomer:
    case SyncTargetSystemSetting:
    case SyncTargetFunction:
    case SyncTargetInspectionType:
    case SyncTargetInspectionModel:
    case SyncTargetInspectionStatus:
    case SyncTargetInspectionTarget:
    case SyncTargetInspectionReportCategory:
    case SyncTargetAttendanceCategory:
    case SyncTargetApplyCategory:
    case SyncTargetAppSetting:
    case SyncTargetPatrolCategory:
    case SyncTargetVideoCategory:
    case SyncTargetVideoDurationCategory:
    case SyncTargetPatrolMediaCategory:
    case SyncTargetPatrolVideoDurationCategory:
    case SyncTargetCameraCategory:
    case SyncTargetProductSpec:
    case SyncTargetCustomerTag:
    case SyncTargetPaperTemplate:
      return YES;
    default:
      return NO;
  }
}
@interface SessionMessage ()
@property (retain) NSString* sequence;
@property (retain) MessageHeader* header;
@property (retain) MessageBody* body;
@end

@implementation SessionMessage

- (BOOL) hasSequence {
  return !!hasSequence_;
}
- (void) setHasSequence:(BOOL) value_ {
  hasSequence_ = !!value_;
}
@synthesize sequence;
- (BOOL) hasHeader {
  return !!hasHeader_;
}
- (void) setHasHeader:(BOOL) value_ {
  hasHeader_ = !!value_;
}
@synthesize header;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) value_ {
  hasBody_ = !!value_;
}
@synthesize body;
- (void) dealloc {
  self.sequence = nil;
  self.header = nil;
  self.body = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sequence = @"";
    self.header = [MessageHeader defaultInstance];
    self.body = [MessageBody defaultInstance];
  }
  return self;
}
static SessionMessage* defaultSessionMessageInstance = nil;
+ (void) initialize {
  if (self == [SessionMessage class]) {
    defaultSessionMessageInstance = [[SessionMessage alloc] init];
  }
}
+ (SessionMessage*) defaultInstance {
  return defaultSessionMessageInstance;
}
- (SessionMessage*) defaultInstance {
  return defaultSessionMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSequence) {
    return NO;
  }
  if (self.hasHeader) {
    if (!self.header.isInitialized) {
      return NO;
    }
  }
  if (self.hasBody) {
    if (!self.body.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSequence) {
    [output writeString:1 value:self.sequence];
  }
  if (self.hasHeader) {
    [output writeMessage:2 value:self.header];
  }
  if (self.hasBody) {
    [output writeMessage:3 value:self.body];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSequence) {
    size_ += computeStringSize(1, self.sequence);
  }
  if (self.hasHeader) {
    size_ += computeMessageSize(2, self.header);
  }
  if (self.hasBody) {
    size_ += computeMessageSize(3, self.body);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SessionMessage*) parseFromData:(NSData*) data {
  return (SessionMessage*)[[[SessionMessage builder] mergeFromData:data] build];
}
+ (SessionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionMessage*)[[[SessionMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SessionMessage*) parseFromInputStream:(NSInputStream*) input {
  return (SessionMessage*)[[[SessionMessage builder] mergeFromInputStream:input] build];
}
+ (SessionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionMessage*)[[[SessionMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SessionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SessionMessage*)[[[SessionMessage builder] mergeFromCodedInputStream:input] build];
}
+ (SessionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionMessage*)[[[SessionMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SessionMessage_Builder*) builder {
  return [[[SessionMessage_Builder alloc] init] autorelease];
}
+ (SessionMessage_Builder*) builderWithPrototype:(SessionMessage*) prototype {
  return [[SessionMessage builder] mergeFrom:prototype];
}
- (SessionMessage_Builder*) builder {
  return [SessionMessage builder];
}
- (SessionMessage_Builder*) toBuilder {
  return [SessionMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSequence) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sequence", self.sequence];
  }
  if (self.hasHeader) {
    [output appendFormat:@"%@%@ {\n", indent, @"header"];
    [self.header writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@ {\n", indent, @"body"];
    [self.body writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SessionMessage class]]) {
    return NO;
  }
  SessionMessage *otherMessage = other;
  return
      self.hasSequence == otherMessage.hasSequence &&
      (!self.hasSequence || [self.sequence isEqual:otherMessage.sequence]) &&
      self.hasHeader == otherMessage.hasHeader &&
      (!self.hasHeader || [self.header isEqual:otherMessage.header]) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSequence) {
    hashCode = hashCode * 31 + [self.sequence hash];
  }
  if (self.hasHeader) {
    hashCode = hashCode * 31 + [self.header hash];
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SessionMessage_Builder()
@property (retain) SessionMessage* result;
@end

@implementation SessionMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SessionMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SessionMessage_Builder*) clear {
  self.result = [[[SessionMessage alloc] init] autorelease];
  return self;
}
- (SessionMessage_Builder*) clone {
  return [SessionMessage builderWithPrototype:result];
}
- (SessionMessage*) defaultInstance {
  return [SessionMessage defaultInstance];
}
- (SessionMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SessionMessage*) buildPartial {
  SessionMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SessionMessage_Builder*) mergeFrom:(SessionMessage*) other {
  if (other == [SessionMessage defaultInstance]) {
    return self;
  }
  if (other.hasSequence) {
    [self setSequence:other.sequence];
  }
  if (other.hasHeader) {
    [self mergeHeader:other.header];
  }
  if (other.hasBody) {
    [self mergeBody:other.body];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SessionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SessionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSequence:[input readString]];
        break;
      }
      case 18: {
        MessageHeader_Builder* subBuilder = [MessageHeader builder];
        if (self.hasHeader) {
          [subBuilder mergeFrom:self.header];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setHeader:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        MessageBody_Builder* subBuilder = [MessageBody builder];
        if (self.hasBody) {
          [subBuilder mergeFrom:self.body];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBody:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSequence {
  return result.hasSequence;
}
- (NSString*) sequence {
  return result.sequence;
}
- (SessionMessage_Builder*) setSequence:(NSString*) value {
  result.hasSequence = YES;
  result.sequence = value;
  return self;
}
- (SessionMessage_Builder*) clearSequence {
  result.hasSequence = NO;
  result.sequence = @"";
  return self;
}
- (BOOL) hasHeader {
  return result.hasHeader;
}
- (MessageHeader*) header {
  return result.header;
}
- (SessionMessage_Builder*) setHeader:(MessageHeader*) value {
  result.hasHeader = YES;
  result.header = value;
  return self;
}
- (SessionMessage_Builder*) setHeaderBuilder:(MessageHeader_Builder*) builderForValue {
  return [self setHeader:[builderForValue build]];
}
- (SessionMessage_Builder*) mergeHeader:(MessageHeader*) value {
  if (result.hasHeader &&
      result.header != [MessageHeader defaultInstance]) {
    result.header =
      [[[MessageHeader builderWithPrototype:result.header] mergeFrom:value] buildPartial];
  } else {
    result.header = value;
  }
  result.hasHeader = YES;
  return self;
}
- (SessionMessage_Builder*) clearHeader {
  result.hasHeader = NO;
  result.header = [MessageHeader defaultInstance];
  return self;
}
- (BOOL) hasBody {
  return result.hasBody;
}
- (MessageBody*) body {
  return result.body;
}
- (SessionMessage_Builder*) setBody:(MessageBody*) value {
  result.hasBody = YES;
  result.body = value;
  return self;
}
- (SessionMessage_Builder*) setBodyBuilder:(MessageBody_Builder*) builderForValue {
  return [self setBody:[builderForValue build]];
}
- (SessionMessage_Builder*) mergeBody:(MessageBody*) value {
  if (result.hasBody &&
      result.body != [MessageBody defaultInstance]) {
    result.body =
      [[[MessageBody builderWithPrototype:result.body] mergeFrom:value] buildPartial];
  } else {
    result.body = value;
  }
  result.hasBody = YES;
  return self;
}
- (SessionMessage_Builder*) clearBody {
  result.hasBody = NO;
  result.body = [MessageBody defaultInstance];
  return self;
}
@end

@interface MessageBody ()
@property (retain) NSData* content;
@end

@implementation MessageBody

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (void) dealloc {
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.content = [NSData data];
  }
  return self;
}
static MessageBody* defaultMessageBodyInstance = nil;
+ (void) initialize {
  if (self == [MessageBody class]) {
    defaultMessageBodyInstance = [[MessageBody alloc] init];
  }
}
+ (MessageBody*) defaultInstance {
  return defaultMessageBodyInstance;
}
- (MessageBody*) defaultInstance {
  return defaultMessageBodyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeData:1 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContent) {
    size_ += computeDataSize(1, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBody*) parseFromData:(NSData*) data {
  return (MessageBody*)[[[MessageBody builder] mergeFromData:data] build];
}
+ (MessageBody*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBody*)[[[MessageBody builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBody*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBody*)[[[MessageBody builder] mergeFromInputStream:input] build];
}
+ (MessageBody*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBody*)[[[MessageBody builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBody*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBody*)[[[MessageBody builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBody*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBody*)[[[MessageBody builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBody_Builder*) builder {
  return [[[MessageBody_Builder alloc] init] autorelease];
}
+ (MessageBody_Builder*) builderWithPrototype:(MessageBody*) prototype {
  return [[MessageBody builder] mergeFrom:prototype];
}
- (MessageBody_Builder*) builder {
  return [MessageBody builder];
}
- (MessageBody_Builder*) toBuilder {
  return [MessageBody builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBody class]]) {
    return NO;
  }
  MessageBody *otherMessage = other;
  return
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBody_Builder()
@property (retain) MessageBody* result;
@end

@implementation MessageBody_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MessageBody alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MessageBody_Builder*) clear {
  self.result = [[[MessageBody alloc] init] autorelease];
  return self;
}
- (MessageBody_Builder*) clone {
  return [MessageBody builderWithPrototype:result];
}
- (MessageBody*) defaultInstance {
  return [MessageBody defaultInstance];
}
- (MessageBody*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBody*) buildPartial {
  MessageBody* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MessageBody_Builder*) mergeFrom:(MessageBody*) other {
  if (other == [MessageBody defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBody_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBody_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSData*) content {
  return result.content;
}
- (MessageBody_Builder*) setContent:(NSData*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (MessageBody_Builder*) clearContent {
  result.hasContent = NO;
  result.content = [NSData data];
  return self;
}
@end

@interface MessageHeader ()
@property (retain) User* sender;
@property (retain) PBAppendableArray * receiversArray;
@property (retain) NSString* messageType;
@property (retain) NSString* postDate;
@end

@implementation MessageHeader

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize receiversArray;
@dynamic receivers;
- (BOOL) hasMessageType {
  return !!hasMessageType_;
}
- (void) setHasMessageType:(BOOL) value_ {
  hasMessageType_ = !!value_;
}
@synthesize messageType;
- (BOOL) hasPostDate {
  return !!hasPostDate_;
}
- (void) setHasPostDate:(BOOL) value_ {
  hasPostDate_ = !!value_;
}
@synthesize postDate;
- (void) dealloc {
  self.sender = nil;
  self.receiversArray = nil;
  self.messageType = nil;
  self.postDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [User defaultInstance];
    self.messageType = @"";
    self.postDate = @"";
  }
  return self;
}
static MessageHeader* defaultMessageHeaderInstance = nil;
+ (void) initialize {
  if (self == [MessageHeader class]) {
    defaultMessageHeaderInstance = [[MessageHeader alloc] init];
  }
}
+ (MessageHeader*) defaultInstance {
  return defaultMessageHeaderInstance;
}
- (MessageHeader*) defaultInstance {
  return defaultMessageHeaderInstance;
}
- (PBArray *)receivers {
  return receiversArray;
}
- (NSString*)receiversAtIndex:(NSUInteger)index {
  return [receiversArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasSender) {
    if (!self.sender.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  const NSUInteger receiversArrayCount = self.receiversArray.count;
  if (receiversArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.receiversArray.data;
    for (NSUInteger i = 0; i < receiversArrayCount; ++i) {
      [output writeString:2 value:values[i]];
    }
  }
  if (self.hasMessageType) {
    [output writeString:3 value:self.messageType];
  }
  if (self.hasPostDate) {
    [output writeString:4 value:self.postDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.receiversArray.count;
    const NSString* *values = (const NSString* *)self.receiversArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasMessageType) {
    size_ += computeStringSize(3, self.messageType);
  }
  if (self.hasPostDate) {
    size_ += computeStringSize(4, self.postDate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageHeader*) parseFromData:(NSData*) data {
  return (MessageHeader*)[[[MessageHeader builder] mergeFromData:data] build];
}
+ (MessageHeader*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageHeader*)[[[MessageHeader builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageHeader*) parseFromInputStream:(NSInputStream*) input {
  return (MessageHeader*)[[[MessageHeader builder] mergeFromInputStream:input] build];
}
+ (MessageHeader*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageHeader*)[[[MessageHeader builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageHeader*)[[[MessageHeader builder] mergeFromCodedInputStream:input] build];
}
+ (MessageHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageHeader*)[[[MessageHeader builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageHeader_Builder*) builder {
  return [[[MessageHeader_Builder alloc] init] autorelease];
}
+ (MessageHeader_Builder*) builderWithPrototype:(MessageHeader*) prototype {
  return [[MessageHeader builder] mergeFrom:prototype];
}
- (MessageHeader_Builder*) builder {
  return [MessageHeader builder];
}
- (MessageHeader_Builder*) toBuilder {
  return [MessageHeader builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSString* element in self.receiversArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receivers", element];
  }
  if (self.hasMessageType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"messageType", self.messageType];
  }
  if (self.hasPostDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postDate", self.postDate];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageHeader class]]) {
    return NO;
  }
  MessageHeader *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.receiversArray isEqualToArray:otherMessage.receiversArray] &&
      self.hasMessageType == otherMessage.hasMessageType &&
      (!self.hasMessageType || [self.messageType isEqual:otherMessage.messageType]) &&
      self.hasPostDate == otherMessage.hasPostDate &&
      (!self.hasPostDate || [self.postDate isEqual:otherMessage.postDate]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  for (NSString* element in self.receiversArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasMessageType) {
    hashCode = hashCode * 31 + [self.messageType hash];
  }
  if (self.hasPostDate) {
    hashCode = hashCode * 31 + [self.postDate hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageHeader_Builder()
@property (retain) MessageHeader* result;
@end

@implementation MessageHeader_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MessageHeader alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MessageHeader_Builder*) clear {
  self.result = [[[MessageHeader alloc] init] autorelease];
  return self;
}
- (MessageHeader_Builder*) clone {
  return [MessageHeader builderWithPrototype:result];
}
- (MessageHeader*) defaultInstance {
  return [MessageHeader defaultInstance];
}
- (MessageHeader*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageHeader*) buildPartial {
  MessageHeader* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MessageHeader_Builder*) mergeFrom:(MessageHeader*) other {
  if (other == [MessageHeader defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.receiversArray.count > 0) {
    if (result.receiversArray == nil) {
      result.receiversArray = [[other.receiversArray copyWithZone:[other.receiversArray zone]] autorelease];
    } else {
      [result.receiversArray appendArray:other.receiversArray];
    }
  }
  if (other.hasMessageType) {
    [self setMessageType:other.messageType];
  }
  if (other.hasPostDate) {
    [self setPostDate:other.postDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageHeader_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageHeader_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        User_Builder* subBuilder = [User builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addReceivers:[input readString]];
        break;
      }
      case 26: {
        [self setMessageType:[input readString]];
        break;
      }
      case 34: {
        [self setPostDate:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (User*) sender {
  return result.sender;
}
- (MessageHeader_Builder*) setSender:(User*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (MessageHeader_Builder*) setSenderBuilder:(User_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (MessageHeader_Builder*) mergeSender:(User*) value {
  if (result.hasSender &&
      result.sender != [User defaultInstance]) {
    result.sender =
      [[[User builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (MessageHeader_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [User defaultInstance];
  return self;
}
- (PBAppendableArray *)receivers {
  return result.receiversArray;
}
- (NSString*)receiversAtIndex:(NSUInteger)index {
  return [result receiversAtIndex:index];
}
- (MessageHeader_Builder *)addReceivers:(NSString*)value {
  if (result.receiversArray == nil) {
    result.receiversArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.receiversArray addObject:value];
  return self;
}
- (MessageHeader_Builder *)setReceiversArray:(NSArray *)array {
  result.receiversArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MessageHeader_Builder *)setReceiversValues:(const NSString* *)values count:(NSUInteger)count {
  result.receiversArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MessageHeader_Builder *)clearReceivers {
  result.receiversArray = nil;
  return self;
}
- (BOOL) hasMessageType {
  return result.hasMessageType;
}
- (NSString*) messageType {
  return result.messageType;
}
- (MessageHeader_Builder*) setMessageType:(NSString*) value {
  result.hasMessageType = YES;
  result.messageType = value;
  return self;
}
- (MessageHeader_Builder*) clearMessageType {
  result.hasMessageType = NO;
  result.messageType = @"";
  return self;
}
- (BOOL) hasPostDate {
  return result.hasPostDate;
}
- (NSString*) postDate {
  return result.postDate;
}
- (MessageHeader_Builder*) setPostDate:(NSString*) value {
  result.hasPostDate = YES;
  result.postDate = value;
  return self;
}
- (MessageHeader_Builder*) clearPostDate {
  result.hasPostDate = NO;
  result.postDate = @"";
  return self;
}
@end

@interface ExceptionMessage ()
@property (retain) NSString* deviceId;
@property (retain) NSString* content;
@property int32_t version;
@end

@implementation ExceptionMessage

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value_ {
  hasDeviceId_ = !!value_;
}
@synthesize deviceId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  self.deviceId = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = @"";
    self.content = @"";
    self.version = 1;
  }
  return self;
}
static ExceptionMessage* defaultExceptionMessageInstance = nil;
+ (void) initialize {
  if (self == [ExceptionMessage class]) {
    defaultExceptionMessageInstance = [[ExceptionMessage alloc] init];
  }
}
+ (ExceptionMessage*) defaultInstance {
  return defaultExceptionMessageInstance;
}
- (ExceptionMessage*) defaultInstance {
  return defaultExceptionMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeString:1 value:self.deviceId];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasVersion) {
    [output writeInt32:3 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDeviceId) {
    size_ += computeStringSize(1, self.deviceId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(3, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ExceptionMessage*) parseFromData:(NSData*) data {
  return (ExceptionMessage*)[[[ExceptionMessage builder] mergeFromData:data] build];
}
+ (ExceptionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExceptionMessage*)[[[ExceptionMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExceptionMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ExceptionMessage*)[[[ExceptionMessage builder] mergeFromInputStream:input] build];
}
+ (ExceptionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExceptionMessage*)[[[ExceptionMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExceptionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExceptionMessage*)[[[ExceptionMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ExceptionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExceptionMessage*)[[[ExceptionMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExceptionMessage_Builder*) builder {
  return [[[ExceptionMessage_Builder alloc] init] autorelease];
}
+ (ExceptionMessage_Builder*) builderWithPrototype:(ExceptionMessage*) prototype {
  return [[ExceptionMessage builder] mergeFrom:prototype];
}
- (ExceptionMessage_Builder*) builder {
  return [ExceptionMessage builder];
}
- (ExceptionMessage_Builder*) toBuilder {
  return [ExceptionMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ExceptionMessage class]]) {
    return NO;
  }
  ExceptionMessage *otherMessage = other;
  return
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ExceptionMessage_Builder()
@property (retain) ExceptionMessage* result;
@end

@implementation ExceptionMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExceptionMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExceptionMessage_Builder*) clear {
  self.result = [[[ExceptionMessage alloc] init] autorelease];
  return self;
}
- (ExceptionMessage_Builder*) clone {
  return [ExceptionMessage builderWithPrototype:result];
}
- (ExceptionMessage*) defaultInstance {
  return [ExceptionMessage defaultInstance];
}
- (ExceptionMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExceptionMessage*) buildPartial {
  ExceptionMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExceptionMessage_Builder*) mergeFrom:(ExceptionMessage*) other {
  if (other == [ExceptionMessage defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExceptionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExceptionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 24: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (NSString*) deviceId {
  return result.deviceId;
}
- (ExceptionMessage_Builder*) setDeviceId:(NSString*) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (ExceptionMessage_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (ExceptionMessage_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (ExceptionMessage_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (ExceptionMessage_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (ExceptionMessage_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
@end

@interface SyncDataMessage ()
@property (retain) NSString* id;
@property (retain) NSString* syncType;
@property (retain) NSString* syncTarget;
@property (retain) NSString* dataSourceId;
@property (retain) NSString* createDate;
@property int32_t version;
@end

@implementation SyncDataMessage

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasSyncType {
  return !!hasSyncType_;
}
- (void) setHasSyncType:(BOOL) value_ {
  hasSyncType_ = !!value_;
}
@synthesize syncType;
- (BOOL) hasSyncTarget {
  return !!hasSyncTarget_;
}
- (void) setHasSyncTarget:(BOOL) value_ {
  hasSyncTarget_ = !!value_;
}
@synthesize syncTarget;
- (BOOL) hasDataSourceId {
  return !!hasDataSourceId_;
}
- (void) setHasDataSourceId:(BOOL) value_ {
  hasDataSourceId_ = !!value_;
}
@synthesize dataSourceId;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  self.id = nil;
  self.syncType = nil;
  self.syncTarget = nil;
  self.dataSourceId = nil;
  self.createDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.syncType = @"";
    self.syncTarget = @"";
    self.dataSourceId = @"";
    self.createDate = @"";
    self.version = 1;
  }
  return self;
}
static SyncDataMessage* defaultSyncDataMessageInstance = nil;
+ (void) initialize {
  if (self == [SyncDataMessage class]) {
    defaultSyncDataMessageInstance = [[SyncDataMessage alloc] init];
  }
}
+ (SyncDataMessage*) defaultInstance {
  return defaultSyncDataMessageInstance;
}
- (SyncDataMessage*) defaultInstance {
  return defaultSyncDataMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasSyncType) {
    [output writeString:2 value:self.syncType];
  }
  if (self.hasSyncTarget) {
    [output writeString:3 value:self.syncTarget];
  }
  if (self.hasDataSourceId) {
    [output writeString:4 value:self.dataSourceId];
  }
  if (self.hasCreateDate) {
    [output writeString:5 value:self.createDate];
  }
  if (self.hasVersion) {
    [output writeInt32:6 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasSyncType) {
    size_ += computeStringSize(2, self.syncType);
  }
  if (self.hasSyncTarget) {
    size_ += computeStringSize(3, self.syncTarget);
  }
  if (self.hasDataSourceId) {
    size_ += computeStringSize(4, self.dataSourceId);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(5, self.createDate);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(6, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SyncDataMessage*) parseFromData:(NSData*) data {
  return (SyncDataMessage*)[[[SyncDataMessage builder] mergeFromData:data] build];
}
+ (SyncDataMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDataMessage*)[[[SyncDataMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncDataMessage*) parseFromInputStream:(NSInputStream*) input {
  return (SyncDataMessage*)[[[SyncDataMessage builder] mergeFromInputStream:input] build];
}
+ (SyncDataMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDataMessage*)[[[SyncDataMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDataMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncDataMessage*)[[[SyncDataMessage builder] mergeFromCodedInputStream:input] build];
}
+ (SyncDataMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDataMessage*)[[[SyncDataMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDataMessage_Builder*) builder {
  return [[[SyncDataMessage_Builder alloc] init] autorelease];
}
+ (SyncDataMessage_Builder*) builderWithPrototype:(SyncDataMessage*) prototype {
  return [[SyncDataMessage builder] mergeFrom:prototype];
}
- (SyncDataMessage_Builder*) builder {
  return [SyncDataMessage builder];
}
- (SyncDataMessage_Builder*) toBuilder {
  return [SyncDataMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasSyncType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncType", self.syncType];
  }
  if (self.hasSyncTarget) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncTarget", self.syncTarget];
  }
  if (self.hasDataSourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dataSourceId", self.dataSourceId];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SyncDataMessage class]]) {
    return NO;
  }
  SyncDataMessage *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasSyncType == otherMessage.hasSyncType &&
      (!self.hasSyncType || [self.syncType isEqual:otherMessage.syncType]) &&
      self.hasSyncTarget == otherMessage.hasSyncTarget &&
      (!self.hasSyncTarget || [self.syncTarget isEqual:otherMessage.syncTarget]) &&
      self.hasDataSourceId == otherMessage.hasDataSourceId &&
      (!self.hasDataSourceId || [self.dataSourceId isEqual:otherMessage.dataSourceId]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasSyncType) {
    hashCode = hashCode * 31 + [self.syncType hash];
  }
  if (self.hasSyncTarget) {
    hashCode = hashCode * 31 + [self.syncTarget hash];
  }
  if (self.hasDataSourceId) {
    hashCode = hashCode * 31 + [self.dataSourceId hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SyncDataMessage_Builder()
@property (retain) SyncDataMessage* result;
@end

@implementation SyncDataMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncDataMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncDataMessage_Builder*) clear {
  self.result = [[[SyncDataMessage alloc] init] autorelease];
  return self;
}
- (SyncDataMessage_Builder*) clone {
  return [SyncDataMessage builderWithPrototype:result];
}
- (SyncDataMessage*) defaultInstance {
  return [SyncDataMessage defaultInstance];
}
- (SyncDataMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncDataMessage*) buildPartial {
  SyncDataMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncDataMessage_Builder*) mergeFrom:(SyncDataMessage*) other {
  if (other == [SyncDataMessage defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasSyncType) {
    [self setSyncType:other.syncType];
  }
  if (other.hasSyncTarget) {
    [self setSyncTarget:other.syncTarget];
  }
  if (other.hasDataSourceId) {
    [self setDataSourceId:other.dataSourceId];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncDataMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncDataMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setSyncType:[input readString]];
        break;
      }
      case 26: {
        [self setSyncTarget:[input readString]];
        break;
      }
      case 34: {
        [self setDataSourceId:[input readString]];
        break;
      }
      case 42: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 48: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (SyncDataMessage_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SyncDataMessage_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasSyncType {
  return result.hasSyncType;
}
- (NSString*) syncType {
  return result.syncType;
}
- (SyncDataMessage_Builder*) setSyncType:(NSString*) value {
  result.hasSyncType = YES;
  result.syncType = value;
  return self;
}
- (SyncDataMessage_Builder*) clearSyncType {
  result.hasSyncType = NO;
  result.syncType = @"";
  return self;
}
- (BOOL) hasSyncTarget {
  return result.hasSyncTarget;
}
- (NSString*) syncTarget {
  return result.syncTarget;
}
- (SyncDataMessage_Builder*) setSyncTarget:(NSString*) value {
  result.hasSyncTarget = YES;
  result.syncTarget = value;
  return self;
}
- (SyncDataMessage_Builder*) clearSyncTarget {
  result.hasSyncTarget = NO;
  result.syncTarget = @"";
  return self;
}
- (BOOL) hasDataSourceId {
  return result.hasDataSourceId;
}
- (NSString*) dataSourceId {
  return result.dataSourceId;
}
- (SyncDataMessage_Builder*) setDataSourceId:(NSString*) value {
  result.hasDataSourceId = YES;
  result.dataSourceId = value;
  return self;
}
- (SyncDataMessage_Builder*) clearDataSourceId {
  result.hasDataSourceId = NO;
  result.dataSourceId = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (SyncDataMessage_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (SyncDataMessage_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (SyncDataMessage_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (SyncDataMessage_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
@end

@interface Announce ()
@property int32_t id;
@property (retain) NSString* subject;
@property (retain) NSString* createDate;
@property (retain) NSString* receiveStatus;
@property (retain) NSString* readStatus;
@end

@implementation Announce

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasSubject {
  return !!hasSubject_;
}
- (void) setHasSubject:(BOOL) value_ {
  hasSubject_ = !!value_;
}
@synthesize subject;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasReceiveStatus {
  return !!hasReceiveStatus_;
}
- (void) setHasReceiveStatus:(BOOL) value_ {
  hasReceiveStatus_ = !!value_;
}
@synthesize receiveStatus;
- (BOOL) hasReadStatus {
  return !!hasReadStatus_;
}
- (void) setHasReadStatus:(BOOL) value_ {
  hasReadStatus_ = !!value_;
}
@synthesize readStatus;
- (void) dealloc {
  self.subject = nil;
  self.createDate = nil;
  self.receiveStatus = nil;
  self.readStatus = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.subject = @"";
    self.createDate = @"";
    self.receiveStatus = @"";
    self.readStatus = @"";
  }
  return self;
}
static Announce* defaultAnnounceInstance = nil;
+ (void) initialize {
  if (self == [Announce class]) {
    defaultAnnounceInstance = [[Announce alloc] init];
  }
}
+ (Announce*) defaultInstance {
  return defaultAnnounceInstance;
}
- (Announce*) defaultInstance {
  return defaultAnnounceInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasSubject) {
    [output writeString:2 value:self.subject];
  }
  if (self.hasCreateDate) {
    [output writeString:3 value:self.createDate];
  }
  if (self.hasReceiveStatus) {
    [output writeString:4 value:self.receiveStatus];
  }
  if (self.hasReadStatus) {
    [output writeString:5 value:self.readStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasSubject) {
    size_ += computeStringSize(2, self.subject);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(3, self.createDate);
  }
  if (self.hasReceiveStatus) {
    size_ += computeStringSize(4, self.receiveStatus);
  }
  if (self.hasReadStatus) {
    size_ += computeStringSize(5, self.readStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Announce*) parseFromData:(NSData*) data {
  return (Announce*)[[[Announce builder] mergeFromData:data] build];
}
+ (Announce*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Announce*)[[[Announce builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Announce*) parseFromInputStream:(NSInputStream*) input {
  return (Announce*)[[[Announce builder] mergeFromInputStream:input] build];
}
+ (Announce*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Announce*)[[[Announce builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Announce*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Announce*)[[[Announce builder] mergeFromCodedInputStream:input] build];
}
+ (Announce*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Announce*)[[[Announce builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Announce_Builder*) builder {
  return [[[Announce_Builder alloc] init] autorelease];
}
+ (Announce_Builder*) builderWithPrototype:(Announce*) prototype {
  return [[Announce builder] mergeFrom:prototype];
}
- (Announce_Builder*) builder {
  return [Announce builder];
}
- (Announce_Builder*) toBuilder {
  return [Announce builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasSubject) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subject", self.subject];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasReceiveStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receiveStatus", self.receiveStatus];
  }
  if (self.hasReadStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readStatus", self.readStatus];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Announce class]]) {
    return NO;
  }
  Announce *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasSubject == otherMessage.hasSubject &&
      (!self.hasSubject || [self.subject isEqual:otherMessage.subject]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasReceiveStatus == otherMessage.hasReceiveStatus &&
      (!self.hasReceiveStatus || [self.receiveStatus isEqual:otherMessage.receiveStatus]) &&
      self.hasReadStatus == otherMessage.hasReadStatus &&
      (!self.hasReadStatus || [self.readStatus isEqual:otherMessage.readStatus]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasSubject) {
    hashCode = hashCode * 31 + [self.subject hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasReceiveStatus) {
    hashCode = hashCode * 31 + [self.receiveStatus hash];
  }
  if (self.hasReadStatus) {
    hashCode = hashCode * 31 + [self.readStatus hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Announce_Builder()
@property (retain) Announce* result;
@end

@implementation Announce_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Announce alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Announce_Builder*) clear {
  self.result = [[[Announce alloc] init] autorelease];
  return self;
}
- (Announce_Builder*) clone {
  return [Announce builderWithPrototype:result];
}
- (Announce*) defaultInstance {
  return [Announce defaultInstance];
}
- (Announce*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Announce*) buildPartial {
  Announce* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Announce_Builder*) mergeFrom:(Announce*) other {
  if (other == [Announce defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasSubject) {
    [self setSubject:other.subject];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasReceiveStatus) {
    [self setReceiveStatus:other.receiveStatus];
  }
  if (other.hasReadStatus) {
    [self setReadStatus:other.readStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Announce_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Announce_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setSubject:[input readString]];
        break;
      }
      case 26: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 34: {
        [self setReceiveStatus:[input readString]];
        break;
      }
      case 42: {
        [self setReadStatus:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Announce_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Announce_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasSubject {
  return result.hasSubject;
}
- (NSString*) subject {
  return result.subject;
}
- (Announce_Builder*) setSubject:(NSString*) value {
  result.hasSubject = YES;
  result.subject = value;
  return self;
}
- (Announce_Builder*) clearSubject {
  result.hasSubject = NO;
  result.subject = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (Announce_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (Announce_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasReceiveStatus {
  return result.hasReceiveStatus;
}
- (NSString*) receiveStatus {
  return result.receiveStatus;
}
- (Announce_Builder*) setReceiveStatus:(NSString*) value {
  result.hasReceiveStatus = YES;
  result.receiveStatus = value;
  return self;
}
- (Announce_Builder*) clearReceiveStatus {
  result.hasReceiveStatus = NO;
  result.receiveStatus = @"";
  return self;
}
- (BOOL) hasReadStatus {
  return result.hasReadStatus;
}
- (NSString*) readStatus {
  return result.readStatus;
}
- (Announce_Builder*) setReadStatus:(NSString*) value {
  result.hasReadStatus = YES;
  result.readStatus = value;
  return self;
}
- (Announce_Builder*) clearReadStatus {
  result.hasReadStatus = NO;
  result.readStatus = @"";
  return self;
}
@end

@interface PageAnnounce ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * announcesArray;
@end

@implementation PageAnnounce

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize announcesArray;
@dynamic announces;
- (void) dealloc {
  self.page = nil;
  self.announcesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageAnnounce* defaultPageAnnounceInstance = nil;
+ (void) initialize {
  if (self == [PageAnnounce class]) {
    defaultPageAnnounceInstance = [[PageAnnounce alloc] init];
  }
}
+ (PageAnnounce*) defaultInstance {
  return defaultPageAnnounceInstance;
}
- (PageAnnounce*) defaultInstance {
  return defaultPageAnnounceInstance;
}
- (PBArray *)announces {
  return announcesArray;
}
- (Announce*)announcesAtIndex:(NSUInteger)index {
  return [announcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (Announce* element in self.announces) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (Announce *element in self.announcesArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (Announce *element in self.announcesArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageAnnounce*) parseFromData:(NSData*) data {
  return (PageAnnounce*)[[[PageAnnounce builder] mergeFromData:data] build];
}
+ (PageAnnounce*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageAnnounce*)[[[PageAnnounce builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageAnnounce*) parseFromInputStream:(NSInputStream*) input {
  return (PageAnnounce*)[[[PageAnnounce builder] mergeFromInputStream:input] build];
}
+ (PageAnnounce*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageAnnounce*)[[[PageAnnounce builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageAnnounce*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageAnnounce*)[[[PageAnnounce builder] mergeFromCodedInputStream:input] build];
}
+ (PageAnnounce*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageAnnounce*)[[[PageAnnounce builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageAnnounce_Builder*) builder {
  return [[[PageAnnounce_Builder alloc] init] autorelease];
}
+ (PageAnnounce_Builder*) builderWithPrototype:(PageAnnounce*) prototype {
  return [[PageAnnounce builder] mergeFrom:prototype];
}
- (PageAnnounce_Builder*) builder {
  return [PageAnnounce builder];
}
- (PageAnnounce_Builder*) toBuilder {
  return [PageAnnounce builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Announce* element in self.announcesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"announces"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageAnnounce class]]) {
    return NO;
  }
  PageAnnounce *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.announcesArray isEqualToArray:otherMessage.announcesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (Announce* element in self.announcesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageAnnounce_Builder()
@property (retain) PageAnnounce* result;
@end

@implementation PageAnnounce_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageAnnounce alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageAnnounce_Builder*) clear {
  self.result = [[[PageAnnounce alloc] init] autorelease];
  return self;
}
- (PageAnnounce_Builder*) clone {
  return [PageAnnounce builderWithPrototype:result];
}
- (PageAnnounce*) defaultInstance {
  return [PageAnnounce defaultInstance];
}
- (PageAnnounce*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageAnnounce*) buildPartial {
  PageAnnounce* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageAnnounce_Builder*) mergeFrom:(PageAnnounce*) other {
  if (other == [PageAnnounce defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.announcesArray.count > 0) {
    if (result.announcesArray == nil) {
      result.announcesArray = [[other.announcesArray copyWithZone:[other.announcesArray zone]] autorelease];
    } else {
      [result.announcesArray appendArray:other.announcesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageAnnounce_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageAnnounce_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Announce_Builder* subBuilder = [Announce builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAnnounces:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageAnnounce_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageAnnounce_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageAnnounce_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageAnnounce_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)announces {
  return result.announcesArray;
}
- (Announce*)announcesAtIndex:(NSUInteger)index {
  return [result announcesAtIndex:index];
}
- (PageAnnounce_Builder *)addAnnounces:(Announce*)value {
  if (result.announcesArray == nil) {
    result.announcesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.announcesArray addObject:value];
  return self;
}
- (PageAnnounce_Builder *)setAnnouncesArray:(NSArray *)array {
  result.announcesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageAnnounce_Builder *)setAnnouncesValues:(const Announce* *)values count:(NSUInteger)count {
  result.announcesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageAnnounce_Builder *)clearAnnounces {
  result.announcesArray = nil;
  return self;
}
@end

@interface AnnounceParams ()
@property (retain) User* user;
@property int32_t page;
@end

@implementation AnnounceParams

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
- (void) dealloc {
  self.user = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.user = [User defaultInstance];
    self.page = 0;
  }
  return self;
}
static AnnounceParams* defaultAnnounceParamsInstance = nil;
+ (void) initialize {
  if (self == [AnnounceParams class]) {
    defaultAnnounceParamsInstance = [[AnnounceParams alloc] init];
  }
}
+ (AnnounceParams*) defaultInstance {
  return defaultAnnounceParamsInstance;
}
- (AnnounceParams*) defaultInstance {
  return defaultAnnounceParamsInstance;
}
- (BOOL) isInitialized {
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasPage) {
    [output writeInt32:2 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(2, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AnnounceParams*) parseFromData:(NSData*) data {
  return (AnnounceParams*)[[[AnnounceParams builder] mergeFromData:data] build];
}
+ (AnnounceParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AnnounceParams*)[[[AnnounceParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AnnounceParams*) parseFromInputStream:(NSInputStream*) input {
  return (AnnounceParams*)[[[AnnounceParams builder] mergeFromInputStream:input] build];
}
+ (AnnounceParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AnnounceParams*)[[[AnnounceParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AnnounceParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AnnounceParams*)[[[AnnounceParams builder] mergeFromCodedInputStream:input] build];
}
+ (AnnounceParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AnnounceParams*)[[[AnnounceParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AnnounceParams_Builder*) builder {
  return [[[AnnounceParams_Builder alloc] init] autorelease];
}
+ (AnnounceParams_Builder*) builderWithPrototype:(AnnounceParams*) prototype {
  return [[AnnounceParams builder] mergeFrom:prototype];
}
- (AnnounceParams_Builder*) builder {
  return [AnnounceParams builder];
}
- (AnnounceParams_Builder*) toBuilder {
  return [AnnounceParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AnnounceParams class]]) {
    return NO;
  }
  AnnounceParams *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AnnounceParams_Builder()
@property (retain) AnnounceParams* result;
@end

@implementation AnnounceParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AnnounceParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AnnounceParams_Builder*) clear {
  self.result = [[[AnnounceParams alloc] init] autorelease];
  return self;
}
- (AnnounceParams_Builder*) clone {
  return [AnnounceParams builderWithPrototype:result];
}
- (AnnounceParams*) defaultInstance {
  return [AnnounceParams defaultInstance];
}
- (AnnounceParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AnnounceParams*) buildPartial {
  AnnounceParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AnnounceParams_Builder*) mergeFrom:(AnnounceParams*) other {
  if (other == [AnnounceParams defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AnnounceParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AnnounceParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (AnnounceParams_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (AnnounceParams_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (AnnounceParams_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (AnnounceParams_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (AnnounceParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (AnnounceParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
@end

@interface SysMessage ()
@property int32_t id;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property int32_t type;
@property (retain) NSString* sourceId;
@property (retain) NSString* receiveStatus;
@property (retain) NSString* readStatus;
@end

@implementation SysMessage

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasSourceId {
  return !!hasSourceId_;
}
- (void) setHasSourceId:(BOOL) value_ {
  hasSourceId_ = !!value_;
}
@synthesize sourceId;
- (BOOL) hasReceiveStatus {
  return !!hasReceiveStatus_;
}
- (void) setHasReceiveStatus:(BOOL) value_ {
  hasReceiveStatus_ = !!value_;
}
@synthesize receiveStatus;
- (BOOL) hasReadStatus {
  return !!hasReadStatus_;
}
- (void) setHasReadStatus:(BOOL) value_ {
  hasReadStatus_ = !!value_;
}
@synthesize readStatus;
- (void) dealloc {
  self.content = nil;
  self.createDate = nil;
  self.sourceId = nil;
  self.receiveStatus = nil;
  self.readStatus = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.content = @"";
    self.createDate = @"";
    self.type = 0;
    self.sourceId = @"";
    self.receiveStatus = @"";
    self.readStatus = @"";
  }
  return self;
}
static SysMessage* defaultSysMessageInstance = nil;
+ (void) initialize {
  if (self == [SysMessage class]) {
    defaultSysMessageInstance = [[SysMessage alloc] init];
  }
}
+ (SysMessage*) defaultInstance {
  return defaultSysMessageInstance;
}
- (SysMessage*) defaultInstance {
  return defaultSysMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:3 value:self.createDate];
  }
  if (self.hasType) {
    [output writeInt32:4 value:self.type];
  }
  if (self.hasSourceId) {
    [output writeString:5 value:self.sourceId];
  }
  if (self.hasReceiveStatus) {
    [output writeString:6 value:self.receiveStatus];
  }
  if (self.hasReadStatus) {
    [output writeString:7 value:self.readStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(3, self.createDate);
  }
  if (self.hasType) {
    size_ += computeInt32Size(4, self.type);
  }
  if (self.hasSourceId) {
    size_ += computeStringSize(5, self.sourceId);
  }
  if (self.hasReceiveStatus) {
    size_ += computeStringSize(6, self.receiveStatus);
  }
  if (self.hasReadStatus) {
    size_ += computeStringSize(7, self.readStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SysMessage*) parseFromData:(NSData*) data {
  return (SysMessage*)[[[SysMessage builder] mergeFromData:data] build];
}
+ (SysMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessage*)[[[SysMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SysMessage*) parseFromInputStream:(NSInputStream*) input {
  return (SysMessage*)[[[SysMessage builder] mergeFromInputStream:input] build];
}
+ (SysMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessage*)[[[SysMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SysMessage*)[[[SysMessage builder] mergeFromCodedInputStream:input] build];
}
+ (SysMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessage*)[[[SysMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysMessage_Builder*) builder {
  return [[[SysMessage_Builder alloc] init] autorelease];
}
+ (SysMessage_Builder*) builderWithPrototype:(SysMessage*) prototype {
  return [[SysMessage builder] mergeFrom:prototype];
}
- (SysMessage_Builder*) builder {
  return [SysMessage builder];
}
- (SysMessage_Builder*) toBuilder {
  return [SysMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInt:self.type]];
  }
  if (self.hasSourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceId", self.sourceId];
  }
  if (self.hasReceiveStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receiveStatus", self.receiveStatus];
  }
  if (self.hasReadStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readStatus", self.readStatus];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SysMessage class]]) {
    return NO;
  }
  SysMessage *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasSourceId == otherMessage.hasSourceId &&
      (!self.hasSourceId || [self.sourceId isEqual:otherMessage.sourceId]) &&
      self.hasReceiveStatus == otherMessage.hasReceiveStatus &&
      (!self.hasReceiveStatus || [self.receiveStatus isEqual:otherMessage.receiveStatus]) &&
      self.hasReadStatus == otherMessage.hasReadStatus &&
      (!self.hasReadStatus || [self.readStatus isEqual:otherMessage.readStatus]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.type] hash];
  }
  if (self.hasSourceId) {
    hashCode = hashCode * 31 + [self.sourceId hash];
  }
  if (self.hasReceiveStatus) {
    hashCode = hashCode * 31 + [self.receiveStatus hash];
  }
  if (self.hasReadStatus) {
    hashCode = hashCode * 31 + [self.readStatus hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SysMessage_Builder()
@property (retain) SysMessage* result;
@end

@implementation SysMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SysMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SysMessage_Builder*) clear {
  self.result = [[[SysMessage alloc] init] autorelease];
  return self;
}
- (SysMessage_Builder*) clone {
  return [SysMessage builderWithPrototype:result];
}
- (SysMessage*) defaultInstance {
  return [SysMessage defaultInstance];
}
- (SysMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SysMessage*) buildPartial {
  SysMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SysMessage_Builder*) mergeFrom:(SysMessage*) other {
  if (other == [SysMessage defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSourceId) {
    [self setSourceId:other.sourceId];
  }
  if (other.hasReceiveStatus) {
    [self setReceiveStatus:other.receiveStatus];
  }
  if (other.hasReadStatus) {
    [self setReadStatus:other.readStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SysMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SysMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 26: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 32: {
        [self setType:[input readInt32]];
        break;
      }
      case 42: {
        [self setSourceId:[input readString]];
        break;
      }
      case 50: {
        [self setReceiveStatus:[input readString]];
        break;
      }
      case 58: {
        [self setReadStatus:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SysMessage_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SysMessage_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (SysMessage_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (SysMessage_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (SysMessage_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (SysMessage_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (SysMessage_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (SysMessage_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasSourceId {
  return result.hasSourceId;
}
- (NSString*) sourceId {
  return result.sourceId;
}
- (SysMessage_Builder*) setSourceId:(NSString*) value {
  result.hasSourceId = YES;
  result.sourceId = value;
  return self;
}
- (SysMessage_Builder*) clearSourceId {
  result.hasSourceId = NO;
  result.sourceId = @"";
  return self;
}
- (BOOL) hasReceiveStatus {
  return result.hasReceiveStatus;
}
- (NSString*) receiveStatus {
  return result.receiveStatus;
}
- (SysMessage_Builder*) setReceiveStatus:(NSString*) value {
  result.hasReceiveStatus = YES;
  result.receiveStatus = value;
  return self;
}
- (SysMessage_Builder*) clearReceiveStatus {
  result.hasReceiveStatus = NO;
  result.receiveStatus = @"";
  return self;
}
- (BOOL) hasReadStatus {
  return result.hasReadStatus;
}
- (NSString*) readStatus {
  return result.readStatus;
}
- (SysMessage_Builder*) setReadStatus:(NSString*) value {
  result.hasReadStatus = YES;
  result.readStatus = value;
  return self;
}
- (SysMessage_Builder*) clearReadStatus {
  result.hasReadStatus = NO;
  result.readStatus = @"";
  return self;
}
@end

@interface PageSysMessage ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * messagesArray;
@end

@implementation PageSysMessage

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize messagesArray;
@dynamic messages;
- (void) dealloc {
  self.page = nil;
  self.messagesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageSysMessage* defaultPageSysMessageInstance = nil;
+ (void) initialize {
  if (self == [PageSysMessage class]) {
    defaultPageSysMessageInstance = [[PageSysMessage alloc] init];
  }
}
+ (PageSysMessage*) defaultInstance {
  return defaultPageSysMessageInstance;
}
- (PageSysMessage*) defaultInstance {
  return defaultPageSysMessageInstance;
}
- (PBArray *)messages {
  return messagesArray;
}
- (SysMessage*)messagesAtIndex:(NSUInteger)index {
  return [messagesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (SysMessage* element in self.messages) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (SysMessage *element in self.messagesArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (SysMessage *element in self.messagesArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageSysMessage*) parseFromData:(NSData*) data {
  return (PageSysMessage*)[[[PageSysMessage builder] mergeFromData:data] build];
}
+ (PageSysMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageSysMessage*)[[[PageSysMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageSysMessage*) parseFromInputStream:(NSInputStream*) input {
  return (PageSysMessage*)[[[PageSysMessage builder] mergeFromInputStream:input] build];
}
+ (PageSysMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageSysMessage*)[[[PageSysMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageSysMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageSysMessage*)[[[PageSysMessage builder] mergeFromCodedInputStream:input] build];
}
+ (PageSysMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageSysMessage*)[[[PageSysMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageSysMessage_Builder*) builder {
  return [[[PageSysMessage_Builder alloc] init] autorelease];
}
+ (PageSysMessage_Builder*) builderWithPrototype:(PageSysMessage*) prototype {
  return [[PageSysMessage builder] mergeFrom:prototype];
}
- (PageSysMessage_Builder*) builder {
  return [PageSysMessage builder];
}
- (PageSysMessage_Builder*) toBuilder {
  return [PageSysMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (SysMessage* element in self.messagesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"messages"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageSysMessage class]]) {
    return NO;
  }
  PageSysMessage *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.messagesArray isEqualToArray:otherMessage.messagesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (SysMessage* element in self.messagesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageSysMessage_Builder()
@property (retain) PageSysMessage* result;
@end

@implementation PageSysMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageSysMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageSysMessage_Builder*) clear {
  self.result = [[[PageSysMessage alloc] init] autorelease];
  return self;
}
- (PageSysMessage_Builder*) clone {
  return [PageSysMessage builderWithPrototype:result];
}
- (PageSysMessage*) defaultInstance {
  return [PageSysMessage defaultInstance];
}
- (PageSysMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageSysMessage*) buildPartial {
  PageSysMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageSysMessage_Builder*) mergeFrom:(PageSysMessage*) other {
  if (other == [PageSysMessage defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.messagesArray.count > 0) {
    if (result.messagesArray == nil) {
      result.messagesArray = [[other.messagesArray copyWithZone:[other.messagesArray zone]] autorelease];
    } else {
      [result.messagesArray appendArray:other.messagesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageSysMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageSysMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        SysMessage_Builder* subBuilder = [SysMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMessages:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageSysMessage_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageSysMessage_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageSysMessage_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageSysMessage_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)messages {
  return result.messagesArray;
}
- (SysMessage*)messagesAtIndex:(NSUInteger)index {
  return [result messagesAtIndex:index];
}
- (PageSysMessage_Builder *)addMessages:(SysMessage*)value {
  if (result.messagesArray == nil) {
    result.messagesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.messagesArray addObject:value];
  return self;
}
- (PageSysMessage_Builder *)setMessagesArray:(NSArray *)array {
  result.messagesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageSysMessage_Builder *)setMessagesValues:(const SysMessage* *)values count:(NSUInteger)count {
  result.messagesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageSysMessage_Builder *)clearMessages {
  result.messagesArray = nil;
  return self;
}
@end

@interface SysMessageParams ()
@property (retain) User* user;
@property int32_t page;
@end

@implementation SysMessageParams

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
- (void) dealloc {
  self.user = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.user = [User defaultInstance];
    self.page = 0;
  }
  return self;
}
static SysMessageParams* defaultSysMessageParamsInstance = nil;
+ (void) initialize {
  if (self == [SysMessageParams class]) {
    defaultSysMessageParamsInstance = [[SysMessageParams alloc] init];
  }
}
+ (SysMessageParams*) defaultInstance {
  return defaultSysMessageParamsInstance;
}
- (SysMessageParams*) defaultInstance {
  return defaultSysMessageParamsInstance;
}
- (BOOL) isInitialized {
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasPage) {
    [output writeInt32:2 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(2, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SysMessageParams*) parseFromData:(NSData*) data {
  return (SysMessageParams*)[[[SysMessageParams builder] mergeFromData:data] build];
}
+ (SysMessageParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessageParams*)[[[SysMessageParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SysMessageParams*) parseFromInputStream:(NSInputStream*) input {
  return (SysMessageParams*)[[[SysMessageParams builder] mergeFromInputStream:input] build];
}
+ (SysMessageParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessageParams*)[[[SysMessageParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysMessageParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SysMessageParams*)[[[SysMessageParams builder] mergeFromCodedInputStream:input] build];
}
+ (SysMessageParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessageParams*)[[[SysMessageParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysMessageParams_Builder*) builder {
  return [[[SysMessageParams_Builder alloc] init] autorelease];
}
+ (SysMessageParams_Builder*) builderWithPrototype:(SysMessageParams*) prototype {
  return [[SysMessageParams builder] mergeFrom:prototype];
}
- (SysMessageParams_Builder*) builder {
  return [SysMessageParams builder];
}
- (SysMessageParams_Builder*) toBuilder {
  return [SysMessageParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SysMessageParams class]]) {
    return NO;
  }
  SysMessageParams *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SysMessageParams_Builder()
@property (retain) SysMessageParams* result;
@end

@implementation SysMessageParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SysMessageParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SysMessageParams_Builder*) clear {
  self.result = [[[SysMessageParams alloc] init] autorelease];
  return self;
}
- (SysMessageParams_Builder*) clone {
  return [SysMessageParams builderWithPrototype:result];
}
- (SysMessageParams*) defaultInstance {
  return [SysMessageParams defaultInstance];
}
- (SysMessageParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SysMessageParams*) buildPartial {
  SysMessageParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SysMessageParams_Builder*) mergeFrom:(SysMessageParams*) other {
  if (other == [SysMessageParams defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SysMessageParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SysMessageParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (SysMessageParams_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (SysMessageParams_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (SysMessageParams_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (SysMessageParams_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (SysMessageParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (SysMessageParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
@end

