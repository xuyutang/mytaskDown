// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "CompanySpace.pb.h"

@implementation CompanySpaceRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CompanySpaceRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GenericRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CompanySpaceCategory ()
@property int32_t id;
@property (retain) NSString* name;
@property (retain) NSString* companyId;
@end

@implementation CompanySpaceCategory

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasCompanyId {
  return !!hasCompanyId_;
}
- (void) setHasCompanyId:(BOOL) value_ {
  hasCompanyId_ = !!value_;
}
@synthesize companyId;
- (void) dealloc {
  self.name = nil;
  self.companyId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.companyId = @"";
  }
  return self;
}
static CompanySpaceCategory* defaultCompanySpaceCategoryInstance = nil;
+ (void) initialize {
  if (self == [CompanySpaceCategory class]) {
    defaultCompanySpaceCategoryInstance = [[CompanySpaceCategory alloc] init];
  }
}
+ (CompanySpaceCategory*) defaultInstance {
  return defaultCompanySpaceCategoryInstance;
}
- (CompanySpaceCategory*) defaultInstance {
  return defaultCompanySpaceCategoryInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCompanyId) {
    [output writeString:3 value:self.companyId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasCompanyId) {
    size_ += computeStringSize(3, self.companyId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CompanySpaceCategory*) parseFromData:(NSData*) data {
  return (CompanySpaceCategory*)[[[CompanySpaceCategory builder] mergeFromData:data] build];
}
+ (CompanySpaceCategory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpaceCategory*)[[[CompanySpaceCategory builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompanySpaceCategory*) parseFromInputStream:(NSInputStream*) input {
  return (CompanySpaceCategory*)[[[CompanySpaceCategory builder] mergeFromInputStream:input] build];
}
+ (CompanySpaceCategory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpaceCategory*)[[[CompanySpaceCategory builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompanySpaceCategory*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompanySpaceCategory*)[[[CompanySpaceCategory builder] mergeFromCodedInputStream:input] build];
}
+ (CompanySpaceCategory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpaceCategory*)[[[CompanySpaceCategory builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompanySpaceCategory_Builder*) builder {
  return [[[CompanySpaceCategory_Builder alloc] init] autorelease];
}
+ (CompanySpaceCategory_Builder*) builderWithPrototype:(CompanySpaceCategory*) prototype {
  return [[CompanySpaceCategory builder] mergeFrom:prototype];
}
- (CompanySpaceCategory_Builder*) builder {
  return [CompanySpaceCategory builder];
}
- (CompanySpaceCategory_Builder*) toBuilder {
  return [CompanySpaceCategory builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCompanyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyId", self.companyId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompanySpaceCategory class]]) {
    return NO;
  }
  CompanySpaceCategory *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCompanyId == otherMessage.hasCompanyId &&
      (!self.hasCompanyId || [self.companyId isEqual:otherMessage.companyId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCompanyId) {
    hashCode = hashCode * 31 + [self.companyId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CompanySpaceCategory_Builder()
@property (retain) CompanySpaceCategory* result;
@end

@implementation CompanySpaceCategory_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CompanySpaceCategory alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompanySpaceCategory_Builder*) clear {
  self.result = [[[CompanySpaceCategory alloc] init] autorelease];
  return self;
}
- (CompanySpaceCategory_Builder*) clone {
  return [CompanySpaceCategory builderWithPrototype:result];
}
- (CompanySpaceCategory*) defaultInstance {
  return [CompanySpaceCategory defaultInstance];
}
- (CompanySpaceCategory*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompanySpaceCategory*) buildPartial {
  CompanySpaceCategory* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CompanySpaceCategory_Builder*) mergeFrom:(CompanySpaceCategory*) other {
  if (other == [CompanySpaceCategory defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCompanyId) {
    [self setCompanyId:other.companyId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompanySpaceCategory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompanySpaceCategory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setCompanyId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (CompanySpaceCategory_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (CompanySpaceCategory_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CompanySpaceCategory_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CompanySpaceCategory_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCompanyId {
  return result.hasCompanyId;
}
- (NSString*) companyId {
  return result.companyId;
}
- (CompanySpaceCategory_Builder*) setCompanyId:(NSString*) value {
  result.hasCompanyId = YES;
  result.companyId = value;
  return self;
}
- (CompanySpaceCategory_Builder*) clearCompanyId {
  result.hasCompanyId = NO;
  result.companyId = @"";
  return self;
}
@end

@interface CompanySpace ()
@property int32_t id;
@property (retain) CompanySpaceCategory* category;
@property (retain) NSString* title;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property (retain) NSString* companyId;
@end

@implementation CompanySpace

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value_ {
  hasCategory_ = !!value_;
}
@synthesize category;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value_ {
  hasTitle_ = !!value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasCompanyId {
  return !!hasCompanyId_;
}
- (void) setHasCompanyId:(BOOL) value_ {
  hasCompanyId_ = !!value_;
}
@synthesize companyId;
- (void) dealloc {
  self.category = nil;
  self.title = nil;
  self.content = nil;
  self.createDate = nil;
  self.companyId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.category = [CompanySpaceCategory defaultInstance];
    self.title = @"";
    self.content = @"";
    self.createDate = @"";
    self.companyId = @"";
  }
  return self;
}
static CompanySpace* defaultCompanySpaceInstance = nil;
+ (void) initialize {
  if (self == [CompanySpace class]) {
    defaultCompanySpaceInstance = [[CompanySpace alloc] init];
  }
}
+ (CompanySpace*) defaultInstance {
  return defaultCompanySpaceInstance;
}
- (CompanySpace*) defaultInstance {
  return defaultCompanySpaceInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (self.hasCategory) {
    if (!self.category.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasCategory) {
    [output writeMessage:2 value:self.category];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:5 value:self.createDate];
  }
  if (self.hasCompanyId) {
    [output writeString:6 value:self.companyId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasCategory) {
    size_ += computeMessageSize(2, self.category);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(3, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(5, self.createDate);
  }
  if (self.hasCompanyId) {
    size_ += computeStringSize(6, self.companyId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CompanySpace*) parseFromData:(NSData*) data {
  return (CompanySpace*)[[[CompanySpace builder] mergeFromData:data] build];
}
+ (CompanySpace*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpace*)[[[CompanySpace builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompanySpace*) parseFromInputStream:(NSInputStream*) input {
  return (CompanySpace*)[[[CompanySpace builder] mergeFromInputStream:input] build];
}
+ (CompanySpace*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpace*)[[[CompanySpace builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompanySpace*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompanySpace*)[[[CompanySpace builder] mergeFromCodedInputStream:input] build];
}
+ (CompanySpace*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpace*)[[[CompanySpace builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompanySpace_Builder*) builder {
  return [[[CompanySpace_Builder alloc] init] autorelease];
}
+ (CompanySpace_Builder*) builderWithPrototype:(CompanySpace*) prototype {
  return [[CompanySpace builder] mergeFrom:prototype];
}
- (CompanySpace_Builder*) builder {
  return [CompanySpace builder];
}
- (CompanySpace_Builder*) toBuilder {
  return [CompanySpace builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"category"];
    [self.category writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasCompanyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyId", self.companyId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompanySpace class]]) {
    return NO;
  }
  CompanySpace *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || [self.category isEqual:otherMessage.category]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasCompanyId == otherMessage.hasCompanyId &&
      (!self.hasCompanyId || [self.companyId isEqual:otherMessage.companyId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasCategory) {
    hashCode = hashCode * 31 + [self.category hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasCompanyId) {
    hashCode = hashCode * 31 + [self.companyId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CompanySpace_Builder()
@property (retain) CompanySpace* result;
@end

@implementation CompanySpace_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CompanySpace alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompanySpace_Builder*) clear {
  self.result = [[[CompanySpace alloc] init] autorelease];
  return self;
}
- (CompanySpace_Builder*) clone {
  return [CompanySpace builderWithPrototype:result];
}
- (CompanySpace*) defaultInstance {
  return [CompanySpace defaultInstance];
}
- (CompanySpace*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompanySpace*) buildPartial {
  CompanySpace* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CompanySpace_Builder*) mergeFrom:(CompanySpace*) other {
  if (other == [CompanySpace defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasCompanyId) {
    [self setCompanyId:other.companyId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompanySpace_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompanySpace_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        CompanySpaceCategory_Builder* subBuilder = [CompanySpaceCategory builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 50: {
        [self setCompanyId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (CompanySpace_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (CompanySpace_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (CompanySpaceCategory*) category {
  return result.category;
}
- (CompanySpace_Builder*) setCategory:(CompanySpaceCategory*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (CompanySpace_Builder*) setCategoryBuilder:(CompanySpaceCategory_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (CompanySpace_Builder*) mergeCategory:(CompanySpaceCategory*) value {
  if (result.hasCategory &&
      result.category != [CompanySpaceCategory defaultInstance]) {
    result.category =
      [[[CompanySpaceCategory builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (CompanySpace_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [CompanySpaceCategory defaultInstance];
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (CompanySpace_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (CompanySpace_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (CompanySpace_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (CompanySpace_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (CompanySpace_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (CompanySpace_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasCompanyId {
  return result.hasCompanyId;
}
- (NSString*) companyId {
  return result.companyId;
}
- (CompanySpace_Builder*) setCompanyId:(NSString*) value {
  result.hasCompanyId = YES;
  result.companyId = value;
  return self;
}
- (CompanySpace_Builder*) clearCompanyId {
  result.hasCompanyId = NO;
  result.companyId = @"";
  return self;
}
@end

@interface PageCompanySpace ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * companySpaceArray;
@end

@implementation PageCompanySpace

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize companySpaceArray;
@dynamic companySpace;
- (void) dealloc {
  self.page = nil;
  self.companySpaceArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageCompanySpace* defaultPageCompanySpaceInstance = nil;
+ (void) initialize {
  if (self == [PageCompanySpace class]) {
    defaultPageCompanySpaceInstance = [[PageCompanySpace alloc] init];
  }
}
+ (PageCompanySpace*) defaultInstance {
  return defaultPageCompanySpaceInstance;
}
- (PageCompanySpace*) defaultInstance {
  return defaultPageCompanySpaceInstance;
}
- (PBArray *)companySpace {
  return companySpaceArray;
}
- (CompanySpace*)companySpaceAtIndex:(NSUInteger)index {
  return [companySpaceArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (CompanySpace* element in self.companySpace) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (CompanySpace *element in self.companySpaceArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (CompanySpace *element in self.companySpaceArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageCompanySpace*) parseFromData:(NSData*) data {
  return (PageCompanySpace*)[[[PageCompanySpace builder] mergeFromData:data] build];
}
+ (PageCompanySpace*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageCompanySpace*)[[[PageCompanySpace builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageCompanySpace*) parseFromInputStream:(NSInputStream*) input {
  return (PageCompanySpace*)[[[PageCompanySpace builder] mergeFromInputStream:input] build];
}
+ (PageCompanySpace*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageCompanySpace*)[[[PageCompanySpace builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageCompanySpace*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageCompanySpace*)[[[PageCompanySpace builder] mergeFromCodedInputStream:input] build];
}
+ (PageCompanySpace*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageCompanySpace*)[[[PageCompanySpace builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageCompanySpace_Builder*) builder {
  return [[[PageCompanySpace_Builder alloc] init] autorelease];
}
+ (PageCompanySpace_Builder*) builderWithPrototype:(PageCompanySpace*) prototype {
  return [[PageCompanySpace builder] mergeFrom:prototype];
}
- (PageCompanySpace_Builder*) builder {
  return [PageCompanySpace builder];
}
- (PageCompanySpace_Builder*) toBuilder {
  return [PageCompanySpace builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CompanySpace* element in self.companySpaceArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companySpace"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageCompanySpace class]]) {
    return NO;
  }
  PageCompanySpace *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.companySpaceArray isEqualToArray:otherMessage.companySpaceArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (CompanySpace* element in self.companySpaceArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageCompanySpace_Builder()
@property (retain) PageCompanySpace* result;
@end

@implementation PageCompanySpace_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageCompanySpace alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageCompanySpace_Builder*) clear {
  self.result = [[[PageCompanySpace alloc] init] autorelease];
  return self;
}
- (PageCompanySpace_Builder*) clone {
  return [PageCompanySpace builderWithPrototype:result];
}
- (PageCompanySpace*) defaultInstance {
  return [PageCompanySpace defaultInstance];
}
- (PageCompanySpace*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageCompanySpace*) buildPartial {
  PageCompanySpace* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageCompanySpace_Builder*) mergeFrom:(PageCompanySpace*) other {
  if (other == [PageCompanySpace defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.companySpaceArray.count > 0) {
    if (result.companySpaceArray == nil) {
      result.companySpaceArray = [[other.companySpaceArray copyWithZone:[other.companySpaceArray zone]] autorelease];
    } else {
      [result.companySpaceArray appendArray:other.companySpaceArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageCompanySpace_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageCompanySpace_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        CompanySpace_Builder* subBuilder = [CompanySpace builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanySpace:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageCompanySpace_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageCompanySpace_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageCompanySpace_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageCompanySpace_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)companySpace {
  return result.companySpaceArray;
}
- (CompanySpace*)companySpaceAtIndex:(NSUInteger)index {
  return [result companySpaceAtIndex:index];
}
- (PageCompanySpace_Builder *)addCompanySpace:(CompanySpace*)value {
  if (result.companySpaceArray == nil) {
    result.companySpaceArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.companySpaceArray addObject:value];
  return self;
}
- (PageCompanySpace_Builder *)setCompanySpaceArray:(NSArray *)array {
  result.companySpaceArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageCompanySpace_Builder *)setCompanySpaceValues:(const CompanySpace* *)values count:(NSUInteger)count {
  result.companySpaceArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageCompanySpace_Builder *)clearCompanySpace {
  result.companySpaceArray = nil;
  return self;
}
@end

@interface CompanySpaceParams ()
@property (retain) NSString* companyId;
@property int32_t page;
@property int32_t companySpaceCategoryId;
@end

@implementation CompanySpaceParams

- (BOOL) hasCompanyId {
  return !!hasCompanyId_;
}
- (void) setHasCompanyId:(BOOL) value_ {
  hasCompanyId_ = !!value_;
}
@synthesize companyId;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
- (BOOL) hasCompanySpaceCategoryId {
  return !!hasCompanySpaceCategoryId_;
}
- (void) setHasCompanySpaceCategoryId:(BOOL) value_ {
  hasCompanySpaceCategoryId_ = !!value_;
}
@synthesize companySpaceCategoryId;
- (void) dealloc {
  self.companyId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.companyId = @"";
    self.page = 0;
    self.companySpaceCategoryId = 0;
  }
  return self;
}
static CompanySpaceParams* defaultCompanySpaceParamsInstance = nil;
+ (void) initialize {
  if (self == [CompanySpaceParams class]) {
    defaultCompanySpaceParamsInstance = [[CompanySpaceParams alloc] init];
  }
}
+ (CompanySpaceParams*) defaultInstance {
  return defaultCompanySpaceParamsInstance;
}
- (CompanySpaceParams*) defaultInstance {
  return defaultCompanySpaceParamsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCompanyId) {
    [output writeString:1 value:self.companyId];
  }
  if (self.hasPage) {
    [output writeInt32:2 value:self.page];
  }
  if (self.hasCompanySpaceCategoryId) {
    [output writeInt32:3 value:self.companySpaceCategoryId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCompanyId) {
    size_ += computeStringSize(1, self.companyId);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(2, self.page);
  }
  if (self.hasCompanySpaceCategoryId) {
    size_ += computeInt32Size(3, self.companySpaceCategoryId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CompanySpaceParams*) parseFromData:(NSData*) data {
  return (CompanySpaceParams*)[[[CompanySpaceParams builder] mergeFromData:data] build];
}
+ (CompanySpaceParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpaceParams*)[[[CompanySpaceParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompanySpaceParams*) parseFromInputStream:(NSInputStream*) input {
  return (CompanySpaceParams*)[[[CompanySpaceParams builder] mergeFromInputStream:input] build];
}
+ (CompanySpaceParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpaceParams*)[[[CompanySpaceParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompanySpaceParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompanySpaceParams*)[[[CompanySpaceParams builder] mergeFromCodedInputStream:input] build];
}
+ (CompanySpaceParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompanySpaceParams*)[[[CompanySpaceParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompanySpaceParams_Builder*) builder {
  return [[[CompanySpaceParams_Builder alloc] init] autorelease];
}
+ (CompanySpaceParams_Builder*) builderWithPrototype:(CompanySpaceParams*) prototype {
  return [[CompanySpaceParams builder] mergeFrom:prototype];
}
- (CompanySpaceParams_Builder*) builder {
  return [CompanySpaceParams builder];
}
- (CompanySpaceParams_Builder*) toBuilder {
  return [CompanySpaceParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCompanyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companyId", self.companyId];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  if (self.hasCompanySpaceCategoryId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"companySpaceCategoryId", [NSNumber numberWithInt:self.companySpaceCategoryId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompanySpaceParams class]]) {
    return NO;
  }
  CompanySpaceParams *otherMessage = other;
  return
      self.hasCompanyId == otherMessage.hasCompanyId &&
      (!self.hasCompanyId || [self.companyId isEqual:otherMessage.companyId]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      self.hasCompanySpaceCategoryId == otherMessage.hasCompanySpaceCategoryId &&
      (!self.hasCompanySpaceCategoryId || self.companySpaceCategoryId == otherMessage.companySpaceCategoryId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCompanyId) {
    hashCode = hashCode * 31 + [self.companyId hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  if (self.hasCompanySpaceCategoryId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.companySpaceCategoryId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CompanySpaceParams_Builder()
@property (retain) CompanySpaceParams* result;
@end

@implementation CompanySpaceParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CompanySpaceParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompanySpaceParams_Builder*) clear {
  self.result = [[[CompanySpaceParams alloc] init] autorelease];
  return self;
}
- (CompanySpaceParams_Builder*) clone {
  return [CompanySpaceParams builderWithPrototype:result];
}
- (CompanySpaceParams*) defaultInstance {
  return [CompanySpaceParams defaultInstance];
}
- (CompanySpaceParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompanySpaceParams*) buildPartial {
  CompanySpaceParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CompanySpaceParams_Builder*) mergeFrom:(CompanySpaceParams*) other {
  if (other == [CompanySpaceParams defaultInstance]) {
    return self;
  }
  if (other.hasCompanyId) {
    [self setCompanyId:other.companyId];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.hasCompanySpaceCategoryId) {
    [self setCompanySpaceCategoryId:other.companySpaceCategoryId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompanySpaceParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompanySpaceParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCompanyId:[input readString]];
        break;
      }
      case 16: {
        [self setPage:[input readInt32]];
        break;
      }
      case 24: {
        [self setCompanySpaceCategoryId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCompanyId {
  return result.hasCompanyId;
}
- (NSString*) companyId {
  return result.companyId;
}
- (CompanySpaceParams_Builder*) setCompanyId:(NSString*) value {
  result.hasCompanyId = YES;
  result.companyId = value;
  return self;
}
- (CompanySpaceParams_Builder*) clearCompanyId {
  result.hasCompanyId = NO;
  result.companyId = @"";
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (CompanySpaceParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (CompanySpaceParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (BOOL) hasCompanySpaceCategoryId {
  return result.hasCompanySpaceCategoryId;
}
- (int32_t) companySpaceCategoryId {
  return result.companySpaceCategoryId;
}
- (CompanySpaceParams_Builder*) setCompanySpaceCategoryId:(int32_t) value {
  result.hasCompanySpaceCategoryId = YES;
  result.companySpaceCategoryId = value;
  return self;
}
- (CompanySpaceParams_Builder*) clearCompanySpaceCategoryId {
  result.hasCompanySpaceCategoryId = NO;
  result.companySpaceCategoryId = 0;
  return self;
}
@end

