// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Gift.pb.h"

@implementation GiftRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GiftRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GenericRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    [ApplyRoot registerAllExtensions:registry];
    [CustomerRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface GiftPurchase ()
@property int32_t id;
@property (retain) User* user;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property (retain) Location* location;
@property (retain) PBAppendableArray * applyItemsArray;
@property (retain) Company* company;
@property (retain) PBAppendableArray * filesArray;
@property (retain) PBAppendableArray * filePathArray;
@property (retain) PBAppendableArray * productsArray;
@end

@implementation GiftPurchase

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value_ {
  hasLocation_ = !!value_;
}
@synthesize location;
@synthesize applyItemsArray;
@dynamic applyItems;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
@synthesize filesArray;
@dynamic files;
@synthesize filePathArray;
@dynamic filePath;
@synthesize productsArray;
@dynamic products;
- (void) dealloc {
  self.user = nil;
  self.content = nil;
  self.createDate = nil;
  self.location = nil;
  self.applyItemsArray = nil;
  self.company = nil;
  self.filesArray = nil;
  self.filePathArray = nil;
  self.productsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.user = [User defaultInstance];
    self.content = @"";
    self.createDate = @"";
    self.location = [Location defaultInstance];
    self.company = [Company defaultInstance];
  }
  return self;
}
static GiftPurchase* defaultGiftPurchaseInstance = nil;
+ (void) initialize {
  if (self == [GiftPurchase class]) {
    defaultGiftPurchaseInstance = [[GiftPurchase alloc] init];
  }
}
+ (GiftPurchase*) defaultInstance {
  return defaultGiftPurchaseInstance;
}
- (GiftPurchase*) defaultInstance {
  return defaultGiftPurchaseInstance;
}
- (PBArray *)applyItems {
  return applyItemsArray;
}
- (ApplyItem*)applyItemsAtIndex:(NSUInteger)index {
  return [applyItemsArray objectAtIndex:index];
}
- (PBArray *)files {
  return filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (PBArray *)filePath {
  return filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [filePathArray objectAtIndex:index];
}
- (PBArray *)products {
  return productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [productsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  for (ApplyItem* element in self.applyItems) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  for (GiftProductModel* element in self.products) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:4 value:self.createDate];
  }
  if (self.hasLocation) {
    [output writeMessage:5 value:self.location];
  }
  for (ApplyItem *element in self.applyItemsArray) {
    [output writeMessage:6 value:element];
  }
  if (self.hasCompany) {
    [output writeMessage:7 value:self.company];
  }
  const NSUInteger filesArrayCount = self.filesArray.count;
  if (filesArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < filesArrayCount; ++i) {
      [output writeData:8 value:values[i]];
    }
  }
  const NSUInteger filePathArrayCount = self.filePathArray.count;
  if (filePathArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < filePathArrayCount; ++i) {
      [output writeString:9 value:values[i]];
    }
  }
  for (GiftProductModel *element in self.productsArray) {
    [output writeMessage:10 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(4, self.createDate);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(5, self.location);
  }
  for (ApplyItem *element in self.applyItemsArray) {
    size_ += computeMessageSize(6, element);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(7, self.company);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filesArray.count;
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filePathArray.count;
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  for (GiftProductModel *element in self.productsArray) {
    size_ += computeMessageSize(10, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftPurchase*) parseFromData:(NSData*) data {
  return (GiftPurchase*)[[[GiftPurchase builder] mergeFromData:data] build];
}
+ (GiftPurchase*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftPurchase*)[[[GiftPurchase builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftPurchase*) parseFromInputStream:(NSInputStream*) input {
  return (GiftPurchase*)[[[GiftPurchase builder] mergeFromInputStream:input] build];
}
+ (GiftPurchase*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftPurchase*)[[[GiftPurchase builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftPurchase*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftPurchase*)[[[GiftPurchase builder] mergeFromCodedInputStream:input] build];
}
+ (GiftPurchase*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftPurchase*)[[[GiftPurchase builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftPurchase_Builder*) builder {
  return [[[GiftPurchase_Builder alloc] init] autorelease];
}
+ (GiftPurchase_Builder*) builderWithPrototype:(GiftPurchase*) prototype {
  return [[GiftPurchase builder] mergeFrom:prototype];
}
- (GiftPurchase_Builder*) builder {
  return [GiftPurchase builder];
}
- (GiftPurchase_Builder*) toBuilder {
  return [GiftPurchase builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (ApplyItem* element in self.applyItemsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"applyItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSData* element in self.filesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"files", element];
  }
  for (NSString* element in self.filePathArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"filePath", element];
  }
  for (GiftProductModel* element in self.productsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"products"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftPurchase class]]) {
    return NO;
  }
  GiftPurchase *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      [self.applyItemsArray isEqualToArray:otherMessage.applyItemsArray] &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      [self.filePathArray isEqualToArray:otherMessage.filePathArray] &&
      [self.productsArray isEqualToArray:otherMessage.productsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  for (ApplyItem* element in self.applyItemsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  for (NSData* element in self.filesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSString* element in self.filePathArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (GiftProductModel* element in self.productsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftPurchase_Builder()
@property (retain) GiftPurchase* result;
@end

@implementation GiftPurchase_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftPurchase alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftPurchase_Builder*) clear {
  self.result = [[[GiftPurchase alloc] init] autorelease];
  return self;
}
- (GiftPurchase_Builder*) clone {
  return [GiftPurchase builderWithPrototype:result];
}
- (GiftPurchase*) defaultInstance {
  return [GiftPurchase defaultInstance];
}
- (GiftPurchase*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftPurchase*) buildPartial {
  GiftPurchase* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftPurchase_Builder*) mergeFrom:(GiftPurchase*) other {
  if (other == [GiftPurchase defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.applyItemsArray.count > 0) {
    if (result.applyItemsArray == nil) {
      result.applyItemsArray = [[other.applyItemsArray copyWithZone:[other.applyItemsArray zone]] autorelease];
    } else {
      [result.applyItemsArray appendArray:other.applyItemsArray];
    }
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[other.filesArray copyWithZone:[other.filesArray zone]] autorelease];
    } else {
      [result.filesArray appendArray:other.filesArray];
    }
  }
  if (other.filePathArray.count > 0) {
    if (result.filePathArray == nil) {
      result.filePathArray = [[other.filePathArray copyWithZone:[other.filePathArray zone]] autorelease];
    } else {
      [result.filePathArray appendArray:other.filePathArray];
    }
  }
  if (other.productsArray.count > 0) {
    if (result.productsArray == nil) {
      result.productsArray = [[other.productsArray copyWithZone:[other.productsArray zone]] autorelease];
    } else {
      [result.productsArray appendArray:other.productsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftPurchase_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftPurchase_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 42: {
        Location_Builder* subBuilder = [Location builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        ApplyItem_Builder* subBuilder = [ApplyItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addApplyItems:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        [self addFiles:[input readData]];
        break;
      }
      case 74: {
        [self addFilePath:[input readString]];
        break;
      }
      case 82: {
        GiftProductModel_Builder* subBuilder = [GiftProductModel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProducts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftPurchase_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftPurchase_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (GiftPurchase_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (GiftPurchase_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (GiftPurchase_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (GiftPurchase_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (GiftPurchase_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (GiftPurchase_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (GiftPurchase_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (GiftPurchase_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (Location*) location {
  return result.location;
}
- (GiftPurchase_Builder*) setLocation:(Location*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (GiftPurchase_Builder*) setLocationBuilder:(Location_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (GiftPurchase_Builder*) mergeLocation:(Location*) value {
  if (result.hasLocation &&
      result.location != [Location defaultInstance]) {
    result.location =
      [[[Location builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (GiftPurchase_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [Location defaultInstance];
  return self;
}
- (PBAppendableArray *)applyItems {
  return result.applyItemsArray;
}
- (ApplyItem*)applyItemsAtIndex:(NSUInteger)index {
  return [result applyItemsAtIndex:index];
}
- (GiftPurchase_Builder *)addApplyItems:(ApplyItem*)value {
  if (result.applyItemsArray == nil) {
    result.applyItemsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.applyItemsArray addObject:value];
  return self;
}
- (GiftPurchase_Builder *)setApplyItemsArray:(NSArray *)array {
  result.applyItemsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)setApplyItemsValues:(const ApplyItem* *)values count:(NSUInteger)count {
  result.applyItemsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)clearApplyItems {
  result.applyItemsArray = nil;
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftPurchase_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftPurchase_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftPurchase_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftPurchase_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
- (PBAppendableArray *)files {
  return result.filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (GiftPurchase_Builder *)addFiles:(NSData*)value {
  if (result.filesArray == nil) {
    result.filesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filesArray addObject:value];
  return self;
}
- (GiftPurchase_Builder *)setFilesArray:(NSArray *)array {
  result.filesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count {
  result.filesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)clearFiles {
  result.filesArray = nil;
  return self;
}
- (PBAppendableArray *)filePath {
  return result.filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [result filePathAtIndex:index];
}
- (GiftPurchase_Builder *)addFilePath:(NSString*)value {
  if (result.filePathArray == nil) {
    result.filePathArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filePathArray addObject:value];
  return self;
}
- (GiftPurchase_Builder *)setFilePathArray:(NSArray *)array {
  result.filePathArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count {
  result.filePathArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)clearFilePath {
  result.filePathArray = nil;
  return self;
}
- (PBAppendableArray *)products {
  return result.productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [result productsAtIndex:index];
}
- (GiftPurchase_Builder *)addProducts:(GiftProductModel*)value {
  if (result.productsArray == nil) {
    result.productsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.productsArray addObject:value];
  return self;
}
- (GiftPurchase_Builder *)setProductsArray:(NSArray *)array {
  result.productsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)setProductsValues:(const GiftProductModel* *)values count:(NSUInteger)count {
  result.productsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchase_Builder *)clearProducts {
  result.productsArray = nil;
  return self;
}
@end

@interface PageGiftPurchase ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * giftPurchasesArray;
@end

@implementation PageGiftPurchase

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize giftPurchasesArray;
@dynamic giftPurchases;
- (void) dealloc {
  self.page = nil;
  self.giftPurchasesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageGiftPurchase* defaultPageGiftPurchaseInstance = nil;
+ (void) initialize {
  if (self == [PageGiftPurchase class]) {
    defaultPageGiftPurchaseInstance = [[PageGiftPurchase alloc] init];
  }
}
+ (PageGiftPurchase*) defaultInstance {
  return defaultPageGiftPurchaseInstance;
}
- (PageGiftPurchase*) defaultInstance {
  return defaultPageGiftPurchaseInstance;
}
- (PBArray *)giftPurchases {
  return giftPurchasesArray;
}
- (GiftPurchase*)giftPurchasesAtIndex:(NSUInteger)index {
  return [giftPurchasesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (GiftPurchase* element in self.giftPurchases) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (GiftPurchase *element in self.giftPurchasesArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (GiftPurchase *element in self.giftPurchasesArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageGiftPurchase*) parseFromData:(NSData*) data {
  return (PageGiftPurchase*)[[[PageGiftPurchase builder] mergeFromData:data] build];
}
+ (PageGiftPurchase*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftPurchase*)[[[PageGiftPurchase builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageGiftPurchase*) parseFromInputStream:(NSInputStream*) input {
  return (PageGiftPurchase*)[[[PageGiftPurchase builder] mergeFromInputStream:input] build];
}
+ (PageGiftPurchase*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftPurchase*)[[[PageGiftPurchase builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftPurchase*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageGiftPurchase*)[[[PageGiftPurchase builder] mergeFromCodedInputStream:input] build];
}
+ (PageGiftPurchase*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftPurchase*)[[[PageGiftPurchase builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftPurchase_Builder*) builder {
  return [[[PageGiftPurchase_Builder alloc] init] autorelease];
}
+ (PageGiftPurchase_Builder*) builderWithPrototype:(PageGiftPurchase*) prototype {
  return [[PageGiftPurchase builder] mergeFrom:prototype];
}
- (PageGiftPurchase_Builder*) builder {
  return [PageGiftPurchase builder];
}
- (PageGiftPurchase_Builder*) toBuilder {
  return [PageGiftPurchase builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (GiftPurchase* element in self.giftPurchasesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftPurchases"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageGiftPurchase class]]) {
    return NO;
  }
  PageGiftPurchase *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.giftPurchasesArray isEqualToArray:otherMessage.giftPurchasesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (GiftPurchase* element in self.giftPurchasesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageGiftPurchase_Builder()
@property (retain) PageGiftPurchase* result;
@end

@implementation PageGiftPurchase_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageGiftPurchase alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageGiftPurchase_Builder*) clear {
  self.result = [[[PageGiftPurchase alloc] init] autorelease];
  return self;
}
- (PageGiftPurchase_Builder*) clone {
  return [PageGiftPurchase builderWithPrototype:result];
}
- (PageGiftPurchase*) defaultInstance {
  return [PageGiftPurchase defaultInstance];
}
- (PageGiftPurchase*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageGiftPurchase*) buildPartial {
  PageGiftPurchase* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageGiftPurchase_Builder*) mergeFrom:(PageGiftPurchase*) other {
  if (other == [PageGiftPurchase defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.giftPurchasesArray.count > 0) {
    if (result.giftPurchasesArray == nil) {
      result.giftPurchasesArray = [[other.giftPurchasesArray copyWithZone:[other.giftPurchasesArray zone]] autorelease];
    } else {
      [result.giftPurchasesArray appendArray:other.giftPurchasesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageGiftPurchase_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageGiftPurchase_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GiftPurchase_Builder* subBuilder = [GiftPurchase builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGiftPurchases:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageGiftPurchase_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageGiftPurchase_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageGiftPurchase_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageGiftPurchase_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)giftPurchases {
  return result.giftPurchasesArray;
}
- (GiftPurchase*)giftPurchasesAtIndex:(NSUInteger)index {
  return [result giftPurchasesAtIndex:index];
}
- (PageGiftPurchase_Builder *)addGiftPurchases:(GiftPurchase*)value {
  if (result.giftPurchasesArray == nil) {
    result.giftPurchasesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.giftPurchasesArray addObject:value];
  return self;
}
- (PageGiftPurchase_Builder *)setGiftPurchasesArray:(NSArray *)array {
  result.giftPurchasesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftPurchase_Builder *)setGiftPurchasesValues:(const GiftPurchase* *)values count:(NSUInteger)count {
  result.giftPurchasesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftPurchase_Builder *)clearGiftPurchases {
  result.giftPurchasesArray = nil;
  return self;
}
@end

@interface GiftPurchaseParams ()
@property (retain) GiftProductCategory* giftCategory;
@property (retain) NSString* giftName;
@property (retain) ApplyCategory* applyCategory;
@property int32_t page;
@property (retain) PBAppendableArray * usersArray;
@property (retain) PBAppendableArray * customerCategoryArray;
@property (retain) PBAppendableArray * customersArray;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PBAppendableArray * companiesArray;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t id;
@end

@implementation GiftPurchaseParams

- (BOOL) hasGiftCategory {
  return !!hasGiftCategory_;
}
- (void) setHasGiftCategory:(BOOL) value_ {
  hasGiftCategory_ = !!value_;
}
@synthesize giftCategory;
- (BOOL) hasGiftName {
  return !!hasGiftName_;
}
- (void) setHasGiftName:(BOOL) value_ {
  hasGiftName_ = !!value_;
}
@synthesize giftName;
- (BOOL) hasApplyCategory {
  return !!hasApplyCategory_;
}
- (void) setHasApplyCategory:(BOOL) value_ {
  hasApplyCategory_ = !!value_;
}
@synthesize applyCategory;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize usersArray;
@dynamic users;
@synthesize customerCategoryArray;
@dynamic customerCategory;
@synthesize customersArray;
@dynamic customers;
@synthesize departmentsArray;
@dynamic departments;
@synthesize companiesArray;
@dynamic companies;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value_ {
  hasStartDate_ = !!value_;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value_ {
  hasEndDate_ = !!value_;
}
@synthesize endDate;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (void) dealloc {
  self.giftCategory = nil;
  self.giftName = nil;
  self.applyCategory = nil;
  self.usersArray = nil;
  self.customerCategoryArray = nil;
  self.customersArray = nil;
  self.departmentsArray = nil;
  self.companiesArray = nil;
  self.startDate = nil;
  self.endDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.giftCategory = [GiftProductCategory defaultInstance];
    self.giftName = @"";
    self.applyCategory = [ApplyCategory defaultInstance];
    self.page = 0;
    self.startDate = @"";
    self.endDate = @"";
    self.id = 0;
  }
  return self;
}
static GiftPurchaseParams* defaultGiftPurchaseParamsInstance = nil;
+ (void) initialize {
  if (self == [GiftPurchaseParams class]) {
    defaultGiftPurchaseParamsInstance = [[GiftPurchaseParams alloc] init];
  }
}
+ (GiftPurchaseParams*) defaultInstance {
  return defaultGiftPurchaseParamsInstance;
}
- (GiftPurchaseParams*) defaultInstance {
  return defaultGiftPurchaseParamsInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (PBArray *)customerCategory {
  return customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [customerCategoryArray objectAtIndex:index];
}
- (PBArray *)customers {
  return customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [customersArray objectAtIndex:index];
}
- (PBArray *)departments {
  return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (PBArray *)companies {
  return companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [companiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasGiftCategory) {
    if (!self.giftCategory.isInitialized) {
      return NO;
    }
  }
  if (self.hasApplyCategory) {
    if (!self.applyCategory.isInitialized) {
      return NO;
    }
  }
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CustomerCategory* element in self.customerCategory) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Customer* element in self.customers) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.departments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Company* element in self.companies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGiftCategory) {
    [output writeMessage:1 value:self.giftCategory];
  }
  if (self.hasGiftName) {
    [output writeString:2 value:self.giftName];
  }
  if (self.hasApplyCategory) {
    [output writeMessage:3 value:self.applyCategory];
  }
  if (self.hasPage) {
    [output writeInt32:4 value:self.page];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:5 value:element];
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    [output writeMessage:6 value:element];
  }
  for (Customer *element in self.customersArray) {
    [output writeMessage:7 value:element];
  }
  for (Department *element in self.departmentsArray) {
    [output writeMessage:8 value:element];
  }
  for (Company *element in self.companiesArray) {
    [output writeMessage:9 value:element];
  }
  if (self.hasStartDate) {
    [output writeString:10 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:11 value:self.endDate];
  }
  if (self.hasId) {
    [output writeInt32:12 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGiftCategory) {
    size_ += computeMessageSize(1, self.giftCategory);
  }
  if (self.hasGiftName) {
    size_ += computeStringSize(2, self.giftName);
  }
  if (self.hasApplyCategory) {
    size_ += computeMessageSize(3, self.applyCategory);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(4, self.page);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(5, element);
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    size_ += computeMessageSize(6, element);
  }
  for (Customer *element in self.customersArray) {
    size_ += computeMessageSize(7, element);
  }
  for (Department *element in self.departmentsArray) {
    size_ += computeMessageSize(8, element);
  }
  for (Company *element in self.companiesArray) {
    size_ += computeMessageSize(9, element);
  }
  if (self.hasStartDate) {
    size_ += computeStringSize(10, self.startDate);
  }
  if (self.hasEndDate) {
    size_ += computeStringSize(11, self.endDate);
  }
  if (self.hasId) {
    size_ += computeInt32Size(12, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftPurchaseParams*) parseFromData:(NSData*) data {
  return (GiftPurchaseParams*)[[[GiftPurchaseParams builder] mergeFromData:data] build];
}
+ (GiftPurchaseParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftPurchaseParams*)[[[GiftPurchaseParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftPurchaseParams*) parseFromInputStream:(NSInputStream*) input {
  return (GiftPurchaseParams*)[[[GiftPurchaseParams builder] mergeFromInputStream:input] build];
}
+ (GiftPurchaseParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftPurchaseParams*)[[[GiftPurchaseParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftPurchaseParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftPurchaseParams*)[[[GiftPurchaseParams builder] mergeFromCodedInputStream:input] build];
}
+ (GiftPurchaseParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftPurchaseParams*)[[[GiftPurchaseParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftPurchaseParams_Builder*) builder {
  return [[[GiftPurchaseParams_Builder alloc] init] autorelease];
}
+ (GiftPurchaseParams_Builder*) builderWithPrototype:(GiftPurchaseParams*) prototype {
  return [[GiftPurchaseParams builder] mergeFrom:prototype];
}
- (GiftPurchaseParams_Builder*) builder {
  return [GiftPurchaseParams builder];
}
- (GiftPurchaseParams_Builder*) toBuilder {
  return [GiftPurchaseParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGiftCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftCategory"];
    [self.giftCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGiftName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"giftName", self.giftName];
  }
  if (self.hasApplyCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"applyCategory"];
    [self.applyCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customerCategory"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Customer* element in self.customersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Department* element in self.departmentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Company* element in self.companiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startDate", self.startDate];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", self.endDate];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftPurchaseParams class]]) {
    return NO;
  }
  GiftPurchaseParams *otherMessage = other;
  return
      self.hasGiftCategory == otherMessage.hasGiftCategory &&
      (!self.hasGiftCategory || [self.giftCategory isEqual:otherMessage.giftCategory]) &&
      self.hasGiftName == otherMessage.hasGiftName &&
      (!self.hasGiftName || [self.giftName isEqual:otherMessage.giftName]) &&
      self.hasApplyCategory == otherMessage.hasApplyCategory &&
      (!self.hasApplyCategory || [self.applyCategory isEqual:otherMessage.applyCategory]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      [self.customerCategoryArray isEqualToArray:otherMessage.customerCategoryArray] &&
      [self.customersArray isEqualToArray:otherMessage.customersArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.companiesArray isEqualToArray:otherMessage.companiesArray] &&
      self.hasStartDate == otherMessage.hasStartDate &&
      (!self.hasStartDate || [self.startDate isEqual:otherMessage.startDate]) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || [self.endDate isEqual:otherMessage.endDate]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGiftCategory) {
    hashCode = hashCode * 31 + [self.giftCategory hash];
  }
  if (self.hasGiftName) {
    hashCode = hashCode * 31 + [self.giftName hash];
  }
  if (self.hasApplyCategory) {
    hashCode = hashCode * 31 + [self.applyCategory hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Customer* element in self.customersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Department* element in self.departmentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Company* element in self.companiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasStartDate) {
    hashCode = hashCode * 31 + [self.startDate hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [self.endDate hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftPurchaseParams_Builder()
@property (retain) GiftPurchaseParams* result;
@end

@implementation GiftPurchaseParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftPurchaseParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftPurchaseParams_Builder*) clear {
  self.result = [[[GiftPurchaseParams alloc] init] autorelease];
  return self;
}
- (GiftPurchaseParams_Builder*) clone {
  return [GiftPurchaseParams builderWithPrototype:result];
}
- (GiftPurchaseParams*) defaultInstance {
  return [GiftPurchaseParams defaultInstance];
}
- (GiftPurchaseParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftPurchaseParams*) buildPartial {
  GiftPurchaseParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftPurchaseParams_Builder*) mergeFrom:(GiftPurchaseParams*) other {
  if (other == [GiftPurchaseParams defaultInstance]) {
    return self;
  }
  if (other.hasGiftCategory) {
    [self mergeGiftCategory:other.giftCategory];
  }
  if (other.hasGiftName) {
    [self setGiftName:other.giftName];
  }
  if (other.hasApplyCategory) {
    [self mergeApplyCategory:other.applyCategory];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  if (other.customerCategoryArray.count > 0) {
    if (result.customerCategoryArray == nil) {
      result.customerCategoryArray = [[other.customerCategoryArray copyWithZone:[other.customerCategoryArray zone]] autorelease];
    } else {
      [result.customerCategoryArray appendArray:other.customerCategoryArray];
    }
  }
  if (other.customersArray.count > 0) {
    if (result.customersArray == nil) {
      result.customersArray = [[other.customersArray copyWithZone:[other.customersArray zone]] autorelease];
    } else {
      [result.customersArray appendArray:other.customersArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
    } else {
      [result.departmentsArray appendArray:other.departmentsArray];
    }
  }
  if (other.companiesArray.count > 0) {
    if (result.companiesArray == nil) {
      result.companiesArray = [[other.companiesArray copyWithZone:[other.companiesArray zone]] autorelease];
    } else {
      [result.companiesArray appendArray:other.companiesArray];
    }
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftPurchaseParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftPurchaseParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        GiftProductCategory_Builder* subBuilder = [GiftProductCategory builder];
        if (self.hasGiftCategory) {
          [subBuilder mergeFrom:self.giftCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGiftCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGiftName:[input readString]];
        break;
      }
      case 26: {
        ApplyCategory_Builder* subBuilder = [ApplyCategory builder];
        if (self.hasApplyCategory) {
          [subBuilder mergeFrom:self.applyCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setApplyCategory:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setPage:[input readInt32]];
        break;
      }
      case 42: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        CustomerCategory_Builder* subBuilder = [CustomerCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomerCategory:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Customer_Builder* subBuilder = [Customer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomers:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Company_Builder* subBuilder = [Company builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanies:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        [self setStartDate:[input readString]];
        break;
      }
      case 90: {
        [self setEndDate:[input readString]];
        break;
      }
      case 96: {
        [self setId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGiftCategory {
  return result.hasGiftCategory;
}
- (GiftProductCategory*) giftCategory {
  return result.giftCategory;
}
- (GiftPurchaseParams_Builder*) setGiftCategory:(GiftProductCategory*) value {
  result.hasGiftCategory = YES;
  result.giftCategory = value;
  return self;
}
- (GiftPurchaseParams_Builder*) setGiftCategoryBuilder:(GiftProductCategory_Builder*) builderForValue {
  return [self setGiftCategory:[builderForValue build]];
}
- (GiftPurchaseParams_Builder*) mergeGiftCategory:(GiftProductCategory*) value {
  if (result.hasGiftCategory &&
      result.giftCategory != [GiftProductCategory defaultInstance]) {
    result.giftCategory =
      [[[GiftProductCategory builderWithPrototype:result.giftCategory] mergeFrom:value] buildPartial];
  } else {
    result.giftCategory = value;
  }
  result.hasGiftCategory = YES;
  return self;
}
- (GiftPurchaseParams_Builder*) clearGiftCategory {
  result.hasGiftCategory = NO;
  result.giftCategory = [GiftProductCategory defaultInstance];
  return self;
}
- (BOOL) hasGiftName {
  return result.hasGiftName;
}
- (NSString*) giftName {
  return result.giftName;
}
- (GiftPurchaseParams_Builder*) setGiftName:(NSString*) value {
  result.hasGiftName = YES;
  result.giftName = value;
  return self;
}
- (GiftPurchaseParams_Builder*) clearGiftName {
  result.hasGiftName = NO;
  result.giftName = @"";
  return self;
}
- (BOOL) hasApplyCategory {
  return result.hasApplyCategory;
}
- (ApplyCategory*) applyCategory {
  return result.applyCategory;
}
- (GiftPurchaseParams_Builder*) setApplyCategory:(ApplyCategory*) value {
  result.hasApplyCategory = YES;
  result.applyCategory = value;
  return self;
}
- (GiftPurchaseParams_Builder*) setApplyCategoryBuilder:(ApplyCategory_Builder*) builderForValue {
  return [self setApplyCategory:[builderForValue build]];
}
- (GiftPurchaseParams_Builder*) mergeApplyCategory:(ApplyCategory*) value {
  if (result.hasApplyCategory &&
      result.applyCategory != [ApplyCategory defaultInstance]) {
    result.applyCategory =
      [[[ApplyCategory builderWithPrototype:result.applyCategory] mergeFrom:value] buildPartial];
  } else {
    result.applyCategory = value;
  }
  result.hasApplyCategory = YES;
  return self;
}
- (GiftPurchaseParams_Builder*) clearApplyCategory {
  result.hasApplyCategory = NO;
  result.applyCategory = [ApplyCategory defaultInstance];
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (GiftPurchaseParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (GiftPurchaseParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (GiftPurchaseParams_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (GiftPurchaseParams_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
- (PBAppendableArray *)customerCategory {
  return result.customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [result customerCategoryAtIndex:index];
}
- (GiftPurchaseParams_Builder *)addCustomerCategory:(CustomerCategory*)value {
  if (result.customerCategoryArray == nil) {
    result.customerCategoryArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customerCategoryArray addObject:value];
  return self;
}
- (GiftPurchaseParams_Builder *)setCustomerCategoryArray:(NSArray *)array {
  result.customerCategoryArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)setCustomerCategoryValues:(const CustomerCategory* *)values count:(NSUInteger)count {
  result.customerCategoryArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)clearCustomerCategory {
  result.customerCategoryArray = nil;
  return self;
}
- (PBAppendableArray *)customers {
  return result.customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [result customersAtIndex:index];
}
- (GiftPurchaseParams_Builder *)addCustomers:(Customer*)value {
  if (result.customersArray == nil) {
    result.customersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customersArray addObject:value];
  return self;
}
- (GiftPurchaseParams_Builder *)setCustomersArray:(NSArray *)array {
  result.customersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count {
  result.customersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)clearCustomers {
  result.customersArray = nil;
  return self;
}
- (PBAppendableArray *)departments {
  return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (GiftPurchaseParams_Builder *)addDepartments:(Department*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (GiftPurchaseParams_Builder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (PBAppendableArray *)companies {
  return result.companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [result companiesAtIndex:index];
}
- (GiftPurchaseParams_Builder *)addCompanies:(Company*)value {
  if (result.companiesArray == nil) {
    result.companiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.companiesArray addObject:value];
  return self;
}
- (GiftPurchaseParams_Builder *)setCompaniesArray:(NSArray *)array {
  result.companiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)setCompaniesValues:(const Company* *)values count:(NSUInteger)count {
  result.companiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftPurchaseParams_Builder *)clearCompanies {
  result.companiesArray = nil;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (GiftPurchaseParams_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (GiftPurchaseParams_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (GiftPurchaseParams_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (GiftPurchaseParams_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftPurchaseParams_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftPurchaseParams_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
@end

@interface GiftDelivery ()
@property int32_t id;
@property (retain) User* user;
@property (retain) PBAppendableArray * departmentArray;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property (retain) Location* location;
@property (retain) PBAppendableArray * applyItemsArray;
@property (retain) Company* company;
@property (retain) PBAppendableArray * filesArray;
@property (retain) PBAppendableArray * filePathArray;
@property (retain) PBAppendableArray * productsArray;
@end

@implementation GiftDelivery

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
@synthesize departmentArray;
@dynamic department;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value_ {
  hasLocation_ = !!value_;
}
@synthesize location;
@synthesize applyItemsArray;
@dynamic applyItems;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
@synthesize filesArray;
@dynamic files;
@synthesize filePathArray;
@dynamic filePath;
@synthesize productsArray;
@dynamic products;
- (void) dealloc {
  self.user = nil;
  self.departmentArray = nil;
  self.content = nil;
  self.createDate = nil;
  self.location = nil;
  self.applyItemsArray = nil;
  self.company = nil;
  self.filesArray = nil;
  self.filePathArray = nil;
  self.productsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.user = [User defaultInstance];
    self.content = @"";
    self.createDate = @"";
    self.location = [Location defaultInstance];
    self.company = [Company defaultInstance];
  }
  return self;
}
static GiftDelivery* defaultGiftDeliveryInstance = nil;
+ (void) initialize {
  if (self == [GiftDelivery class]) {
    defaultGiftDeliveryInstance = [[GiftDelivery alloc] init];
  }
}
+ (GiftDelivery*) defaultInstance {
  return defaultGiftDeliveryInstance;
}
- (GiftDelivery*) defaultInstance {
  return defaultGiftDeliveryInstance;
}
- (PBArray *)department {
  return departmentArray;
}
- (Department*)departmentAtIndex:(NSUInteger)index {
  return [departmentArray objectAtIndex:index];
}
- (PBArray *)applyItems {
  return applyItemsArray;
}
- (ApplyItem*)applyItemsAtIndex:(NSUInteger)index {
  return [applyItemsArray objectAtIndex:index];
}
- (PBArray *)files {
  return filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (PBArray *)filePath {
  return filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [filePathArray objectAtIndex:index];
}
- (PBArray *)products {
  return productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [productsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.department) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  for (ApplyItem* element in self.applyItems) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  for (GiftProductModel* element in self.products) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  for (Department *element in self.departmentArray) {
    [output writeMessage:3 value:element];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:5 value:self.createDate];
  }
  if (self.hasLocation) {
    [output writeMessage:6 value:self.location];
  }
  for (ApplyItem *element in self.applyItemsArray) {
    [output writeMessage:7 value:element];
  }
  if (self.hasCompany) {
    [output writeMessage:8 value:self.company];
  }
  const NSUInteger filesArrayCount = self.filesArray.count;
  if (filesArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < filesArrayCount; ++i) {
      [output writeData:9 value:values[i]];
    }
  }
  const NSUInteger filePathArrayCount = self.filePathArray.count;
  if (filePathArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < filePathArrayCount; ++i) {
      [output writeString:10 value:values[i]];
    }
  }
  for (GiftProductModel *element in self.productsArray) {
    [output writeMessage:11 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  for (Department *element in self.departmentArray) {
    size_ += computeMessageSize(3, element);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(5, self.createDate);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(6, self.location);
  }
  for (ApplyItem *element in self.applyItemsArray) {
    size_ += computeMessageSize(7, element);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(8, self.company);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filesArray.count;
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filePathArray.count;
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  for (GiftProductModel *element in self.productsArray) {
    size_ += computeMessageSize(11, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftDelivery*) parseFromData:(NSData*) data {
  return (GiftDelivery*)[[[GiftDelivery builder] mergeFromData:data] build];
}
+ (GiftDelivery*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDelivery*)[[[GiftDelivery builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftDelivery*) parseFromInputStream:(NSInputStream*) input {
  return (GiftDelivery*)[[[GiftDelivery builder] mergeFromInputStream:input] build];
}
+ (GiftDelivery*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDelivery*)[[[GiftDelivery builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDelivery*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftDelivery*)[[[GiftDelivery builder] mergeFromCodedInputStream:input] build];
}
+ (GiftDelivery*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDelivery*)[[[GiftDelivery builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDelivery_Builder*) builder {
  return [[[GiftDelivery_Builder alloc] init] autorelease];
}
+ (GiftDelivery_Builder*) builderWithPrototype:(GiftDelivery*) prototype {
  return [[GiftDelivery builder] mergeFrom:prototype];
}
- (GiftDelivery_Builder*) builder {
  return [GiftDelivery builder];
}
- (GiftDelivery_Builder*) toBuilder {
  return [GiftDelivery builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Department* element in self.departmentArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"department"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (ApplyItem* element in self.applyItemsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"applyItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSData* element in self.filesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"files", element];
  }
  for (NSString* element in self.filePathArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"filePath", element];
  }
  for (GiftProductModel* element in self.productsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"products"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftDelivery class]]) {
    return NO;
  }
  GiftDelivery *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      [self.departmentArray isEqualToArray:otherMessage.departmentArray] &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      [self.applyItemsArray isEqualToArray:otherMessage.applyItemsArray] &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      [self.filePathArray isEqualToArray:otherMessage.filePathArray] &&
      [self.productsArray isEqualToArray:otherMessage.productsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  for (Department* element in self.departmentArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  for (ApplyItem* element in self.applyItemsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  for (NSData* element in self.filesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSString* element in self.filePathArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (GiftProductModel* element in self.productsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftDelivery_Builder()
@property (retain) GiftDelivery* result;
@end

@implementation GiftDelivery_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftDelivery alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftDelivery_Builder*) clear {
  self.result = [[[GiftDelivery alloc] init] autorelease];
  return self;
}
- (GiftDelivery_Builder*) clone {
  return [GiftDelivery builderWithPrototype:result];
}
- (GiftDelivery*) defaultInstance {
  return [GiftDelivery defaultInstance];
}
- (GiftDelivery*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftDelivery*) buildPartial {
  GiftDelivery* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftDelivery_Builder*) mergeFrom:(GiftDelivery*) other {
  if (other == [GiftDelivery defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.departmentArray.count > 0) {
    if (result.departmentArray == nil) {
      result.departmentArray = [[other.departmentArray copyWithZone:[other.departmentArray zone]] autorelease];
    } else {
      [result.departmentArray appendArray:other.departmentArray];
    }
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.applyItemsArray.count > 0) {
    if (result.applyItemsArray == nil) {
      result.applyItemsArray = [[other.applyItemsArray copyWithZone:[other.applyItemsArray zone]] autorelease];
    } else {
      [result.applyItemsArray appendArray:other.applyItemsArray];
    }
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[other.filesArray copyWithZone:[other.filesArray zone]] autorelease];
    } else {
      [result.filesArray appendArray:other.filesArray];
    }
  }
  if (other.filePathArray.count > 0) {
    if (result.filePathArray == nil) {
      result.filePathArray = [[other.filePathArray copyWithZone:[other.filePathArray zone]] autorelease];
    } else {
      [result.filePathArray appendArray:other.filePathArray];
    }
  }
  if (other.productsArray.count > 0) {
    if (result.productsArray == nil) {
      result.productsArray = [[other.productsArray copyWithZone:[other.productsArray zone]] autorelease];
    } else {
      [result.productsArray appendArray:other.productsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftDelivery_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftDelivery_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartment:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 50: {
        Location_Builder* subBuilder = [Location builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        ApplyItem_Builder* subBuilder = [ApplyItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addApplyItems:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        [self addFiles:[input readData]];
        break;
      }
      case 82: {
        [self addFilePath:[input readString]];
        break;
      }
      case 90: {
        GiftProductModel_Builder* subBuilder = [GiftProductModel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProducts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftDelivery_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftDelivery_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (GiftDelivery_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (GiftDelivery_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (GiftDelivery_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (GiftDelivery_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (PBAppendableArray *)department {
  return result.departmentArray;
}
- (Department*)departmentAtIndex:(NSUInteger)index {
  return [result departmentAtIndex:index];
}
- (GiftDelivery_Builder *)addDepartment:(Department*)value {
  if (result.departmentArray == nil) {
    result.departmentArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentArray addObject:value];
  return self;
}
- (GiftDelivery_Builder *)setDepartmentArray:(NSArray *)array {
  result.departmentArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)setDepartmentValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)clearDepartment {
  result.departmentArray = nil;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (GiftDelivery_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (GiftDelivery_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (GiftDelivery_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (GiftDelivery_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (Location*) location {
  return result.location;
}
- (GiftDelivery_Builder*) setLocation:(Location*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (GiftDelivery_Builder*) setLocationBuilder:(Location_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (GiftDelivery_Builder*) mergeLocation:(Location*) value {
  if (result.hasLocation &&
      result.location != [Location defaultInstance]) {
    result.location =
      [[[Location builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (GiftDelivery_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [Location defaultInstance];
  return self;
}
- (PBAppendableArray *)applyItems {
  return result.applyItemsArray;
}
- (ApplyItem*)applyItemsAtIndex:(NSUInteger)index {
  return [result applyItemsAtIndex:index];
}
- (GiftDelivery_Builder *)addApplyItems:(ApplyItem*)value {
  if (result.applyItemsArray == nil) {
    result.applyItemsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.applyItemsArray addObject:value];
  return self;
}
- (GiftDelivery_Builder *)setApplyItemsArray:(NSArray *)array {
  result.applyItemsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)setApplyItemsValues:(const ApplyItem* *)values count:(NSUInteger)count {
  result.applyItemsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)clearApplyItems {
  result.applyItemsArray = nil;
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftDelivery_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftDelivery_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftDelivery_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftDelivery_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
- (PBAppendableArray *)files {
  return result.filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (GiftDelivery_Builder *)addFiles:(NSData*)value {
  if (result.filesArray == nil) {
    result.filesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filesArray addObject:value];
  return self;
}
- (GiftDelivery_Builder *)setFilesArray:(NSArray *)array {
  result.filesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count {
  result.filesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)clearFiles {
  result.filesArray = nil;
  return self;
}
- (PBAppendableArray *)filePath {
  return result.filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [result filePathAtIndex:index];
}
- (GiftDelivery_Builder *)addFilePath:(NSString*)value {
  if (result.filePathArray == nil) {
    result.filePathArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filePathArray addObject:value];
  return self;
}
- (GiftDelivery_Builder *)setFilePathArray:(NSArray *)array {
  result.filePathArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count {
  result.filePathArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)clearFilePath {
  result.filePathArray = nil;
  return self;
}
- (PBAppendableArray *)products {
  return result.productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [result productsAtIndex:index];
}
- (GiftDelivery_Builder *)addProducts:(GiftProductModel*)value {
  if (result.productsArray == nil) {
    result.productsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.productsArray addObject:value];
  return self;
}
- (GiftDelivery_Builder *)setProductsArray:(NSArray *)array {
  result.productsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)setProductsValues:(const GiftProductModel* *)values count:(NSUInteger)count {
  result.productsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDelivery_Builder *)clearProducts {
  result.productsArray = nil;
  return self;
}
@end

@interface PageGiftDelivery ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * giftDeliveriesArray;
@end

@implementation PageGiftDelivery

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize giftDeliveriesArray;
@dynamic giftDeliveries;
- (void) dealloc {
  self.page = nil;
  self.giftDeliveriesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageGiftDelivery* defaultPageGiftDeliveryInstance = nil;
+ (void) initialize {
  if (self == [PageGiftDelivery class]) {
    defaultPageGiftDeliveryInstance = [[PageGiftDelivery alloc] init];
  }
}
+ (PageGiftDelivery*) defaultInstance {
  return defaultPageGiftDeliveryInstance;
}
- (PageGiftDelivery*) defaultInstance {
  return defaultPageGiftDeliveryInstance;
}
- (PBArray *)giftDeliveries {
  return giftDeliveriesArray;
}
- (GiftDelivery*)giftDeliveriesAtIndex:(NSUInteger)index {
  return [giftDeliveriesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (GiftDelivery* element in self.giftDeliveries) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (GiftDelivery *element in self.giftDeliveriesArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (GiftDelivery *element in self.giftDeliveriesArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageGiftDelivery*) parseFromData:(NSData*) data {
  return (PageGiftDelivery*)[[[PageGiftDelivery builder] mergeFromData:data] build];
}
+ (PageGiftDelivery*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftDelivery*)[[[PageGiftDelivery builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageGiftDelivery*) parseFromInputStream:(NSInputStream*) input {
  return (PageGiftDelivery*)[[[PageGiftDelivery builder] mergeFromInputStream:input] build];
}
+ (PageGiftDelivery*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftDelivery*)[[[PageGiftDelivery builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftDelivery*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageGiftDelivery*)[[[PageGiftDelivery builder] mergeFromCodedInputStream:input] build];
}
+ (PageGiftDelivery*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftDelivery*)[[[PageGiftDelivery builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftDelivery_Builder*) builder {
  return [[[PageGiftDelivery_Builder alloc] init] autorelease];
}
+ (PageGiftDelivery_Builder*) builderWithPrototype:(PageGiftDelivery*) prototype {
  return [[PageGiftDelivery builder] mergeFrom:prototype];
}
- (PageGiftDelivery_Builder*) builder {
  return [PageGiftDelivery builder];
}
- (PageGiftDelivery_Builder*) toBuilder {
  return [PageGiftDelivery builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (GiftDelivery* element in self.giftDeliveriesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftDeliveries"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageGiftDelivery class]]) {
    return NO;
  }
  PageGiftDelivery *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.giftDeliveriesArray isEqualToArray:otherMessage.giftDeliveriesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (GiftDelivery* element in self.giftDeliveriesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageGiftDelivery_Builder()
@property (retain) PageGiftDelivery* result;
@end

@implementation PageGiftDelivery_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageGiftDelivery alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageGiftDelivery_Builder*) clear {
  self.result = [[[PageGiftDelivery alloc] init] autorelease];
  return self;
}
- (PageGiftDelivery_Builder*) clone {
  return [PageGiftDelivery builderWithPrototype:result];
}
- (PageGiftDelivery*) defaultInstance {
  return [PageGiftDelivery defaultInstance];
}
- (PageGiftDelivery*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageGiftDelivery*) buildPartial {
  PageGiftDelivery* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageGiftDelivery_Builder*) mergeFrom:(PageGiftDelivery*) other {
  if (other == [PageGiftDelivery defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.giftDeliveriesArray.count > 0) {
    if (result.giftDeliveriesArray == nil) {
      result.giftDeliveriesArray = [[other.giftDeliveriesArray copyWithZone:[other.giftDeliveriesArray zone]] autorelease];
    } else {
      [result.giftDeliveriesArray appendArray:other.giftDeliveriesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageGiftDelivery_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageGiftDelivery_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GiftDelivery_Builder* subBuilder = [GiftDelivery builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGiftDeliveries:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageGiftDelivery_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageGiftDelivery_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageGiftDelivery_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageGiftDelivery_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)giftDeliveries {
  return result.giftDeliveriesArray;
}
- (GiftDelivery*)giftDeliveriesAtIndex:(NSUInteger)index {
  return [result giftDeliveriesAtIndex:index];
}
- (PageGiftDelivery_Builder *)addGiftDeliveries:(GiftDelivery*)value {
  if (result.giftDeliveriesArray == nil) {
    result.giftDeliveriesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.giftDeliveriesArray addObject:value];
  return self;
}
- (PageGiftDelivery_Builder *)setGiftDeliveriesArray:(NSArray *)array {
  result.giftDeliveriesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftDelivery_Builder *)setGiftDeliveriesValues:(const GiftDelivery* *)values count:(NSUInteger)count {
  result.giftDeliveriesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftDelivery_Builder *)clearGiftDeliveries {
  result.giftDeliveriesArray = nil;
  return self;
}
@end

@interface GiftDeliveryParams ()
@property (retain) GiftProductCategory* giftCategory;
@property (retain) NSString* giftName;
@property (retain) ApplyCategory* applyCategory;
@property int32_t page;
@property (retain) PBAppendableArray * usersArray;
@property (retain) PBAppendableArray * customerCategoryArray;
@property (retain) PBAppendableArray * customersArray;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PBAppendableArray * companiesArray;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t id;
@end

@implementation GiftDeliveryParams

- (BOOL) hasGiftCategory {
  return !!hasGiftCategory_;
}
- (void) setHasGiftCategory:(BOOL) value_ {
  hasGiftCategory_ = !!value_;
}
@synthesize giftCategory;
- (BOOL) hasGiftName {
  return !!hasGiftName_;
}
- (void) setHasGiftName:(BOOL) value_ {
  hasGiftName_ = !!value_;
}
@synthesize giftName;
- (BOOL) hasApplyCategory {
  return !!hasApplyCategory_;
}
- (void) setHasApplyCategory:(BOOL) value_ {
  hasApplyCategory_ = !!value_;
}
@synthesize applyCategory;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize usersArray;
@dynamic users;
@synthesize customerCategoryArray;
@dynamic customerCategory;
@synthesize customersArray;
@dynamic customers;
@synthesize departmentsArray;
@dynamic departments;
@synthesize companiesArray;
@dynamic companies;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value_ {
  hasStartDate_ = !!value_;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value_ {
  hasEndDate_ = !!value_;
}
@synthesize endDate;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (void) dealloc {
  self.giftCategory = nil;
  self.giftName = nil;
  self.applyCategory = nil;
  self.usersArray = nil;
  self.customerCategoryArray = nil;
  self.customersArray = nil;
  self.departmentsArray = nil;
  self.companiesArray = nil;
  self.startDate = nil;
  self.endDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.giftCategory = [GiftProductCategory defaultInstance];
    self.giftName = @"";
    self.applyCategory = [ApplyCategory defaultInstance];
    self.page = 0;
    self.startDate = @"";
    self.endDate = @"";
    self.id = 0;
  }
  return self;
}
static GiftDeliveryParams* defaultGiftDeliveryParamsInstance = nil;
+ (void) initialize {
  if (self == [GiftDeliveryParams class]) {
    defaultGiftDeliveryParamsInstance = [[GiftDeliveryParams alloc] init];
  }
}
+ (GiftDeliveryParams*) defaultInstance {
  return defaultGiftDeliveryParamsInstance;
}
- (GiftDeliveryParams*) defaultInstance {
  return defaultGiftDeliveryParamsInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (PBArray *)customerCategory {
  return customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [customerCategoryArray objectAtIndex:index];
}
- (PBArray *)customers {
  return customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [customersArray objectAtIndex:index];
}
- (PBArray *)departments {
  return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (PBArray *)companies {
  return companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [companiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasGiftCategory) {
    if (!self.giftCategory.isInitialized) {
      return NO;
    }
  }
  if (self.hasApplyCategory) {
    if (!self.applyCategory.isInitialized) {
      return NO;
    }
  }
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CustomerCategory* element in self.customerCategory) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Customer* element in self.customers) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.departments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Company* element in self.companies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGiftCategory) {
    [output writeMessage:1 value:self.giftCategory];
  }
  if (self.hasGiftName) {
    [output writeString:2 value:self.giftName];
  }
  if (self.hasApplyCategory) {
    [output writeMessage:3 value:self.applyCategory];
  }
  if (self.hasPage) {
    [output writeInt32:4 value:self.page];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:5 value:element];
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    [output writeMessage:6 value:element];
  }
  for (Customer *element in self.customersArray) {
    [output writeMessage:7 value:element];
  }
  for (Department *element in self.departmentsArray) {
    [output writeMessage:8 value:element];
  }
  for (Company *element in self.companiesArray) {
    [output writeMessage:9 value:element];
  }
  if (self.hasStartDate) {
    [output writeString:10 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:11 value:self.endDate];
  }
  if (self.hasId) {
    [output writeInt32:12 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGiftCategory) {
    size_ += computeMessageSize(1, self.giftCategory);
  }
  if (self.hasGiftName) {
    size_ += computeStringSize(2, self.giftName);
  }
  if (self.hasApplyCategory) {
    size_ += computeMessageSize(3, self.applyCategory);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(4, self.page);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(5, element);
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    size_ += computeMessageSize(6, element);
  }
  for (Customer *element in self.customersArray) {
    size_ += computeMessageSize(7, element);
  }
  for (Department *element in self.departmentsArray) {
    size_ += computeMessageSize(8, element);
  }
  for (Company *element in self.companiesArray) {
    size_ += computeMessageSize(9, element);
  }
  if (self.hasStartDate) {
    size_ += computeStringSize(10, self.startDate);
  }
  if (self.hasEndDate) {
    size_ += computeStringSize(11, self.endDate);
  }
  if (self.hasId) {
    size_ += computeInt32Size(12, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftDeliveryParams*) parseFromData:(NSData*) data {
  return (GiftDeliveryParams*)[[[GiftDeliveryParams builder] mergeFromData:data] build];
}
+ (GiftDeliveryParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDeliveryParams*)[[[GiftDeliveryParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftDeliveryParams*) parseFromInputStream:(NSInputStream*) input {
  return (GiftDeliveryParams*)[[[GiftDeliveryParams builder] mergeFromInputStream:input] build];
}
+ (GiftDeliveryParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDeliveryParams*)[[[GiftDeliveryParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDeliveryParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftDeliveryParams*)[[[GiftDeliveryParams builder] mergeFromCodedInputStream:input] build];
}
+ (GiftDeliveryParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDeliveryParams*)[[[GiftDeliveryParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDeliveryParams_Builder*) builder {
  return [[[GiftDeliveryParams_Builder alloc] init] autorelease];
}
+ (GiftDeliveryParams_Builder*) builderWithPrototype:(GiftDeliveryParams*) prototype {
  return [[GiftDeliveryParams builder] mergeFrom:prototype];
}
- (GiftDeliveryParams_Builder*) builder {
  return [GiftDeliveryParams builder];
}
- (GiftDeliveryParams_Builder*) toBuilder {
  return [GiftDeliveryParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGiftCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftCategory"];
    [self.giftCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGiftName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"giftName", self.giftName];
  }
  if (self.hasApplyCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"applyCategory"];
    [self.applyCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customerCategory"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Customer* element in self.customersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Department* element in self.departmentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Company* element in self.companiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startDate", self.startDate];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", self.endDate];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftDeliveryParams class]]) {
    return NO;
  }
  GiftDeliveryParams *otherMessage = other;
  return
      self.hasGiftCategory == otherMessage.hasGiftCategory &&
      (!self.hasGiftCategory || [self.giftCategory isEqual:otherMessage.giftCategory]) &&
      self.hasGiftName == otherMessage.hasGiftName &&
      (!self.hasGiftName || [self.giftName isEqual:otherMessage.giftName]) &&
      self.hasApplyCategory == otherMessage.hasApplyCategory &&
      (!self.hasApplyCategory || [self.applyCategory isEqual:otherMessage.applyCategory]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      [self.customerCategoryArray isEqualToArray:otherMessage.customerCategoryArray] &&
      [self.customersArray isEqualToArray:otherMessage.customersArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.companiesArray isEqualToArray:otherMessage.companiesArray] &&
      self.hasStartDate == otherMessage.hasStartDate &&
      (!self.hasStartDate || [self.startDate isEqual:otherMessage.startDate]) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || [self.endDate isEqual:otherMessage.endDate]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGiftCategory) {
    hashCode = hashCode * 31 + [self.giftCategory hash];
  }
  if (self.hasGiftName) {
    hashCode = hashCode * 31 + [self.giftName hash];
  }
  if (self.hasApplyCategory) {
    hashCode = hashCode * 31 + [self.applyCategory hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Customer* element in self.customersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Department* element in self.departmentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Company* element in self.companiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasStartDate) {
    hashCode = hashCode * 31 + [self.startDate hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [self.endDate hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftDeliveryParams_Builder()
@property (retain) GiftDeliveryParams* result;
@end

@implementation GiftDeliveryParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftDeliveryParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftDeliveryParams_Builder*) clear {
  self.result = [[[GiftDeliveryParams alloc] init] autorelease];
  return self;
}
- (GiftDeliveryParams_Builder*) clone {
  return [GiftDeliveryParams builderWithPrototype:result];
}
- (GiftDeliveryParams*) defaultInstance {
  return [GiftDeliveryParams defaultInstance];
}
- (GiftDeliveryParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftDeliveryParams*) buildPartial {
  GiftDeliveryParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftDeliveryParams_Builder*) mergeFrom:(GiftDeliveryParams*) other {
  if (other == [GiftDeliveryParams defaultInstance]) {
    return self;
  }
  if (other.hasGiftCategory) {
    [self mergeGiftCategory:other.giftCategory];
  }
  if (other.hasGiftName) {
    [self setGiftName:other.giftName];
  }
  if (other.hasApplyCategory) {
    [self mergeApplyCategory:other.applyCategory];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  if (other.customerCategoryArray.count > 0) {
    if (result.customerCategoryArray == nil) {
      result.customerCategoryArray = [[other.customerCategoryArray copyWithZone:[other.customerCategoryArray zone]] autorelease];
    } else {
      [result.customerCategoryArray appendArray:other.customerCategoryArray];
    }
  }
  if (other.customersArray.count > 0) {
    if (result.customersArray == nil) {
      result.customersArray = [[other.customersArray copyWithZone:[other.customersArray zone]] autorelease];
    } else {
      [result.customersArray appendArray:other.customersArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
    } else {
      [result.departmentsArray appendArray:other.departmentsArray];
    }
  }
  if (other.companiesArray.count > 0) {
    if (result.companiesArray == nil) {
      result.companiesArray = [[other.companiesArray copyWithZone:[other.companiesArray zone]] autorelease];
    } else {
      [result.companiesArray appendArray:other.companiesArray];
    }
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftDeliveryParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftDeliveryParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        GiftProductCategory_Builder* subBuilder = [GiftProductCategory builder];
        if (self.hasGiftCategory) {
          [subBuilder mergeFrom:self.giftCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGiftCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGiftName:[input readString]];
        break;
      }
      case 26: {
        ApplyCategory_Builder* subBuilder = [ApplyCategory builder];
        if (self.hasApplyCategory) {
          [subBuilder mergeFrom:self.applyCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setApplyCategory:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setPage:[input readInt32]];
        break;
      }
      case 42: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        CustomerCategory_Builder* subBuilder = [CustomerCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomerCategory:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Customer_Builder* subBuilder = [Customer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomers:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Company_Builder* subBuilder = [Company builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanies:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        [self setStartDate:[input readString]];
        break;
      }
      case 90: {
        [self setEndDate:[input readString]];
        break;
      }
      case 96: {
        [self setId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGiftCategory {
  return result.hasGiftCategory;
}
- (GiftProductCategory*) giftCategory {
  return result.giftCategory;
}
- (GiftDeliveryParams_Builder*) setGiftCategory:(GiftProductCategory*) value {
  result.hasGiftCategory = YES;
  result.giftCategory = value;
  return self;
}
- (GiftDeliveryParams_Builder*) setGiftCategoryBuilder:(GiftProductCategory_Builder*) builderForValue {
  return [self setGiftCategory:[builderForValue build]];
}
- (GiftDeliveryParams_Builder*) mergeGiftCategory:(GiftProductCategory*) value {
  if (result.hasGiftCategory &&
      result.giftCategory != [GiftProductCategory defaultInstance]) {
    result.giftCategory =
      [[[GiftProductCategory builderWithPrototype:result.giftCategory] mergeFrom:value] buildPartial];
  } else {
    result.giftCategory = value;
  }
  result.hasGiftCategory = YES;
  return self;
}
- (GiftDeliveryParams_Builder*) clearGiftCategory {
  result.hasGiftCategory = NO;
  result.giftCategory = [GiftProductCategory defaultInstance];
  return self;
}
- (BOOL) hasGiftName {
  return result.hasGiftName;
}
- (NSString*) giftName {
  return result.giftName;
}
- (GiftDeliveryParams_Builder*) setGiftName:(NSString*) value {
  result.hasGiftName = YES;
  result.giftName = value;
  return self;
}
- (GiftDeliveryParams_Builder*) clearGiftName {
  result.hasGiftName = NO;
  result.giftName = @"";
  return self;
}
- (BOOL) hasApplyCategory {
  return result.hasApplyCategory;
}
- (ApplyCategory*) applyCategory {
  return result.applyCategory;
}
- (GiftDeliveryParams_Builder*) setApplyCategory:(ApplyCategory*) value {
  result.hasApplyCategory = YES;
  result.applyCategory = value;
  return self;
}
- (GiftDeliveryParams_Builder*) setApplyCategoryBuilder:(ApplyCategory_Builder*) builderForValue {
  return [self setApplyCategory:[builderForValue build]];
}
- (GiftDeliveryParams_Builder*) mergeApplyCategory:(ApplyCategory*) value {
  if (result.hasApplyCategory &&
      result.applyCategory != [ApplyCategory defaultInstance]) {
    result.applyCategory =
      [[[ApplyCategory builderWithPrototype:result.applyCategory] mergeFrom:value] buildPartial];
  } else {
    result.applyCategory = value;
  }
  result.hasApplyCategory = YES;
  return self;
}
- (GiftDeliveryParams_Builder*) clearApplyCategory {
  result.hasApplyCategory = NO;
  result.applyCategory = [ApplyCategory defaultInstance];
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (GiftDeliveryParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (GiftDeliveryParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (GiftDeliveryParams_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (GiftDeliveryParams_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
- (PBAppendableArray *)customerCategory {
  return result.customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [result customerCategoryAtIndex:index];
}
- (GiftDeliveryParams_Builder *)addCustomerCategory:(CustomerCategory*)value {
  if (result.customerCategoryArray == nil) {
    result.customerCategoryArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customerCategoryArray addObject:value];
  return self;
}
- (GiftDeliveryParams_Builder *)setCustomerCategoryArray:(NSArray *)array {
  result.customerCategoryArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)setCustomerCategoryValues:(const CustomerCategory* *)values count:(NSUInteger)count {
  result.customerCategoryArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)clearCustomerCategory {
  result.customerCategoryArray = nil;
  return self;
}
- (PBAppendableArray *)customers {
  return result.customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [result customersAtIndex:index];
}
- (GiftDeliveryParams_Builder *)addCustomers:(Customer*)value {
  if (result.customersArray == nil) {
    result.customersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customersArray addObject:value];
  return self;
}
- (GiftDeliveryParams_Builder *)setCustomersArray:(NSArray *)array {
  result.customersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count {
  result.customersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)clearCustomers {
  result.customersArray = nil;
  return self;
}
- (PBAppendableArray *)departments {
  return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (GiftDeliveryParams_Builder *)addDepartments:(Department*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (GiftDeliveryParams_Builder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (PBAppendableArray *)companies {
  return result.companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [result companiesAtIndex:index];
}
- (GiftDeliveryParams_Builder *)addCompanies:(Company*)value {
  if (result.companiesArray == nil) {
    result.companiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.companiesArray addObject:value];
  return self;
}
- (GiftDeliveryParams_Builder *)setCompaniesArray:(NSArray *)array {
  result.companiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)setCompaniesValues:(const Company* *)values count:(NSUInteger)count {
  result.companiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDeliveryParams_Builder *)clearCompanies {
  result.companiesArray = nil;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (GiftDeliveryParams_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (GiftDeliveryParams_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (GiftDeliveryParams_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (GiftDeliveryParams_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftDeliveryParams_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftDeliveryParams_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
@end

@interface GiftDistribute ()
@property int32_t id;
@property (retain) User* user;
@property (retain) Customer* customer;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property (retain) Location* location;
@property (retain) PBAppendableArray * applyItemsArray;
@property (retain) Company* company;
@property (retain) PBAppendableArray * filesArray;
@property (retain) PBAppendableArray * filePathArray;
@property (retain) PBAppendableArray * productsArray;
@end

@implementation GiftDistribute

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasCustomer {
  return !!hasCustomer_;
}
- (void) setHasCustomer:(BOOL) value_ {
  hasCustomer_ = !!value_;
}
@synthesize customer;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value_ {
  hasLocation_ = !!value_;
}
@synthesize location;
@synthesize applyItemsArray;
@dynamic applyItems;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
@synthesize filesArray;
@dynamic files;
@synthesize filePathArray;
@dynamic filePath;
@synthesize productsArray;
@dynamic products;
- (void) dealloc {
  self.user = nil;
  self.customer = nil;
  self.content = nil;
  self.createDate = nil;
  self.location = nil;
  self.applyItemsArray = nil;
  self.company = nil;
  self.filesArray = nil;
  self.filePathArray = nil;
  self.productsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.user = [User defaultInstance];
    self.customer = [Customer defaultInstance];
    self.content = @"";
    self.createDate = @"";
    self.location = [Location defaultInstance];
    self.company = [Company defaultInstance];
  }
  return self;
}
static GiftDistribute* defaultGiftDistributeInstance = nil;
+ (void) initialize {
  if (self == [GiftDistribute class]) {
    defaultGiftDistributeInstance = [[GiftDistribute alloc] init];
  }
}
+ (GiftDistribute*) defaultInstance {
  return defaultGiftDistributeInstance;
}
- (GiftDistribute*) defaultInstance {
  return defaultGiftDistributeInstance;
}
- (PBArray *)applyItems {
  return applyItemsArray;
}
- (ApplyItem*)applyItemsAtIndex:(NSUInteger)index {
  return [applyItemsArray objectAtIndex:index];
}
- (PBArray *)files {
  return filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (PBArray *)filePath {
  return filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [filePathArray objectAtIndex:index];
}
- (PBArray *)products {
  return productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [productsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  if (self.hasCustomer) {
    if (!self.customer.isInitialized) {
      return NO;
    }
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  for (ApplyItem* element in self.applyItems) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  for (GiftProductModel* element in self.products) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasCustomer) {
    [output writeMessage:3 value:self.customer];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:5 value:self.createDate];
  }
  if (self.hasLocation) {
    [output writeMessage:6 value:self.location];
  }
  for (ApplyItem *element in self.applyItemsArray) {
    [output writeMessage:7 value:element];
  }
  if (self.hasCompany) {
    [output writeMessage:8 value:self.company];
  }
  const NSUInteger filesArrayCount = self.filesArray.count;
  if (filesArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < filesArrayCount; ++i) {
      [output writeData:9 value:values[i]];
    }
  }
  const NSUInteger filePathArrayCount = self.filePathArray.count;
  if (filePathArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < filePathArrayCount; ++i) {
      [output writeString:10 value:values[i]];
    }
  }
  for (GiftProductModel *element in self.productsArray) {
    [output writeMessage:11 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  if (self.hasCustomer) {
    size_ += computeMessageSize(3, self.customer);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(5, self.createDate);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(6, self.location);
  }
  for (ApplyItem *element in self.applyItemsArray) {
    size_ += computeMessageSize(7, element);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(8, self.company);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filesArray.count;
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filePathArray.count;
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  for (GiftProductModel *element in self.productsArray) {
    size_ += computeMessageSize(11, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftDistribute*) parseFromData:(NSData*) data {
  return (GiftDistribute*)[[[GiftDistribute builder] mergeFromData:data] build];
}
+ (GiftDistribute*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDistribute*)[[[GiftDistribute builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftDistribute*) parseFromInputStream:(NSInputStream*) input {
  return (GiftDistribute*)[[[GiftDistribute builder] mergeFromInputStream:input] build];
}
+ (GiftDistribute*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDistribute*)[[[GiftDistribute builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDistribute*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftDistribute*)[[[GiftDistribute builder] mergeFromCodedInputStream:input] build];
}
+ (GiftDistribute*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDistribute*)[[[GiftDistribute builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDistribute_Builder*) builder {
  return [[[GiftDistribute_Builder alloc] init] autorelease];
}
+ (GiftDistribute_Builder*) builderWithPrototype:(GiftDistribute*) prototype {
  return [[GiftDistribute builder] mergeFrom:prototype];
}
- (GiftDistribute_Builder*) builder {
  return [GiftDistribute builder];
}
- (GiftDistribute_Builder*) toBuilder {
  return [GiftDistribute builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCustomer) {
    [output appendFormat:@"%@%@ {\n", indent, @"customer"];
    [self.customer writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (ApplyItem* element in self.applyItemsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"applyItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSData* element in self.filesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"files", element];
  }
  for (NSString* element in self.filePathArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"filePath", element];
  }
  for (GiftProductModel* element in self.productsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"products"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftDistribute class]]) {
    return NO;
  }
  GiftDistribute *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasCustomer == otherMessage.hasCustomer &&
      (!self.hasCustomer || [self.customer isEqual:otherMessage.customer]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      [self.applyItemsArray isEqualToArray:otherMessage.applyItemsArray] &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      [self.filePathArray isEqualToArray:otherMessage.filePathArray] &&
      [self.productsArray isEqualToArray:otherMessage.productsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasCustomer) {
    hashCode = hashCode * 31 + [self.customer hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  for (ApplyItem* element in self.applyItemsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  for (NSData* element in self.filesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSString* element in self.filePathArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (GiftProductModel* element in self.productsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftDistribute_Builder()
@property (retain) GiftDistribute* result;
@end

@implementation GiftDistribute_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftDistribute alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftDistribute_Builder*) clear {
  self.result = [[[GiftDistribute alloc] init] autorelease];
  return self;
}
- (GiftDistribute_Builder*) clone {
  return [GiftDistribute builderWithPrototype:result];
}
- (GiftDistribute*) defaultInstance {
  return [GiftDistribute defaultInstance];
}
- (GiftDistribute*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftDistribute*) buildPartial {
  GiftDistribute* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftDistribute_Builder*) mergeFrom:(GiftDistribute*) other {
  if (other == [GiftDistribute defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasCustomer) {
    [self mergeCustomer:other.customer];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.applyItemsArray.count > 0) {
    if (result.applyItemsArray == nil) {
      result.applyItemsArray = [[other.applyItemsArray copyWithZone:[other.applyItemsArray zone]] autorelease];
    } else {
      [result.applyItemsArray appendArray:other.applyItemsArray];
    }
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[other.filesArray copyWithZone:[other.filesArray zone]] autorelease];
    } else {
      [result.filesArray appendArray:other.filesArray];
    }
  }
  if (other.filePathArray.count > 0) {
    if (result.filePathArray == nil) {
      result.filePathArray = [[other.filePathArray copyWithZone:[other.filePathArray zone]] autorelease];
    } else {
      [result.filePathArray appendArray:other.filePathArray];
    }
  }
  if (other.productsArray.count > 0) {
    if (result.productsArray == nil) {
      result.productsArray = [[other.productsArray copyWithZone:[other.productsArray zone]] autorelease];
    } else {
      [result.productsArray appendArray:other.productsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftDistribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftDistribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Customer_Builder* subBuilder = [Customer builder];
        if (self.hasCustomer) {
          [subBuilder mergeFrom:self.customer];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCustomer:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 50: {
        Location_Builder* subBuilder = [Location builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        ApplyItem_Builder* subBuilder = [ApplyItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addApplyItems:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        [self addFiles:[input readData]];
        break;
      }
      case 82: {
        [self addFilePath:[input readString]];
        break;
      }
      case 90: {
        GiftProductModel_Builder* subBuilder = [GiftProductModel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProducts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftDistribute_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftDistribute_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (GiftDistribute_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (GiftDistribute_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (GiftDistribute_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (GiftDistribute_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasCustomer {
  return result.hasCustomer;
}
- (Customer*) customer {
  return result.customer;
}
- (GiftDistribute_Builder*) setCustomer:(Customer*) value {
  result.hasCustomer = YES;
  result.customer = value;
  return self;
}
- (GiftDistribute_Builder*) setCustomerBuilder:(Customer_Builder*) builderForValue {
  return [self setCustomer:[builderForValue build]];
}
- (GiftDistribute_Builder*) mergeCustomer:(Customer*) value {
  if (result.hasCustomer &&
      result.customer != [Customer defaultInstance]) {
    result.customer =
      [[[Customer builderWithPrototype:result.customer] mergeFrom:value] buildPartial];
  } else {
    result.customer = value;
  }
  result.hasCustomer = YES;
  return self;
}
- (GiftDistribute_Builder*) clearCustomer {
  result.hasCustomer = NO;
  result.customer = [Customer defaultInstance];
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (GiftDistribute_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (GiftDistribute_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (GiftDistribute_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (GiftDistribute_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (Location*) location {
  return result.location;
}
- (GiftDistribute_Builder*) setLocation:(Location*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (GiftDistribute_Builder*) setLocationBuilder:(Location_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (GiftDistribute_Builder*) mergeLocation:(Location*) value {
  if (result.hasLocation &&
      result.location != [Location defaultInstance]) {
    result.location =
      [[[Location builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (GiftDistribute_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [Location defaultInstance];
  return self;
}
- (PBAppendableArray *)applyItems {
  return result.applyItemsArray;
}
- (ApplyItem*)applyItemsAtIndex:(NSUInteger)index {
  return [result applyItemsAtIndex:index];
}
- (GiftDistribute_Builder *)addApplyItems:(ApplyItem*)value {
  if (result.applyItemsArray == nil) {
    result.applyItemsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.applyItemsArray addObject:value];
  return self;
}
- (GiftDistribute_Builder *)setApplyItemsArray:(NSArray *)array {
  result.applyItemsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)setApplyItemsValues:(const ApplyItem* *)values count:(NSUInteger)count {
  result.applyItemsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)clearApplyItems {
  result.applyItemsArray = nil;
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftDistribute_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftDistribute_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftDistribute_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftDistribute_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
- (PBAppendableArray *)files {
  return result.filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (GiftDistribute_Builder *)addFiles:(NSData*)value {
  if (result.filesArray == nil) {
    result.filesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filesArray addObject:value];
  return self;
}
- (GiftDistribute_Builder *)setFilesArray:(NSArray *)array {
  result.filesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count {
  result.filesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)clearFiles {
  result.filesArray = nil;
  return self;
}
- (PBAppendableArray *)filePath {
  return result.filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [result filePathAtIndex:index];
}
- (GiftDistribute_Builder *)addFilePath:(NSString*)value {
  if (result.filePathArray == nil) {
    result.filePathArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filePathArray addObject:value];
  return self;
}
- (GiftDistribute_Builder *)setFilePathArray:(NSArray *)array {
  result.filePathArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count {
  result.filePathArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)clearFilePath {
  result.filePathArray = nil;
  return self;
}
- (PBAppendableArray *)products {
  return result.productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [result productsAtIndex:index];
}
- (GiftDistribute_Builder *)addProducts:(GiftProductModel*)value {
  if (result.productsArray == nil) {
    result.productsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.productsArray addObject:value];
  return self;
}
- (GiftDistribute_Builder *)setProductsArray:(NSArray *)array {
  result.productsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)setProductsValues:(const GiftProductModel* *)values count:(NSUInteger)count {
  result.productsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistribute_Builder *)clearProducts {
  result.productsArray = nil;
  return self;
}
@end

@interface PageGiftDistribute ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * giftDistributesArray;
@end

@implementation PageGiftDistribute

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize giftDistributesArray;
@dynamic giftDistributes;
- (void) dealloc {
  self.page = nil;
  self.giftDistributesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageGiftDistribute* defaultPageGiftDistributeInstance = nil;
+ (void) initialize {
  if (self == [PageGiftDistribute class]) {
    defaultPageGiftDistributeInstance = [[PageGiftDistribute alloc] init];
  }
}
+ (PageGiftDistribute*) defaultInstance {
  return defaultPageGiftDistributeInstance;
}
- (PageGiftDistribute*) defaultInstance {
  return defaultPageGiftDistributeInstance;
}
- (PBArray *)giftDistributes {
  return giftDistributesArray;
}
- (GiftDistribute*)giftDistributesAtIndex:(NSUInteger)index {
  return [giftDistributesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (GiftDistribute* element in self.giftDistributes) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (GiftDistribute *element in self.giftDistributesArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (GiftDistribute *element in self.giftDistributesArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageGiftDistribute*) parseFromData:(NSData*) data {
  return (PageGiftDistribute*)[[[PageGiftDistribute builder] mergeFromData:data] build];
}
+ (PageGiftDistribute*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftDistribute*)[[[PageGiftDistribute builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageGiftDistribute*) parseFromInputStream:(NSInputStream*) input {
  return (PageGiftDistribute*)[[[PageGiftDistribute builder] mergeFromInputStream:input] build];
}
+ (PageGiftDistribute*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftDistribute*)[[[PageGiftDistribute builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftDistribute*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageGiftDistribute*)[[[PageGiftDistribute builder] mergeFromCodedInputStream:input] build];
}
+ (PageGiftDistribute*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftDistribute*)[[[PageGiftDistribute builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftDistribute_Builder*) builder {
  return [[[PageGiftDistribute_Builder alloc] init] autorelease];
}
+ (PageGiftDistribute_Builder*) builderWithPrototype:(PageGiftDistribute*) prototype {
  return [[PageGiftDistribute builder] mergeFrom:prototype];
}
- (PageGiftDistribute_Builder*) builder {
  return [PageGiftDistribute builder];
}
- (PageGiftDistribute_Builder*) toBuilder {
  return [PageGiftDistribute builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (GiftDistribute* element in self.giftDistributesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftDistributes"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageGiftDistribute class]]) {
    return NO;
  }
  PageGiftDistribute *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.giftDistributesArray isEqualToArray:otherMessage.giftDistributesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (GiftDistribute* element in self.giftDistributesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageGiftDistribute_Builder()
@property (retain) PageGiftDistribute* result;
@end

@implementation PageGiftDistribute_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageGiftDistribute alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageGiftDistribute_Builder*) clear {
  self.result = [[[PageGiftDistribute alloc] init] autorelease];
  return self;
}
- (PageGiftDistribute_Builder*) clone {
  return [PageGiftDistribute builderWithPrototype:result];
}
- (PageGiftDistribute*) defaultInstance {
  return [PageGiftDistribute defaultInstance];
}
- (PageGiftDistribute*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageGiftDistribute*) buildPartial {
  PageGiftDistribute* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageGiftDistribute_Builder*) mergeFrom:(PageGiftDistribute*) other {
  if (other == [PageGiftDistribute defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.giftDistributesArray.count > 0) {
    if (result.giftDistributesArray == nil) {
      result.giftDistributesArray = [[other.giftDistributesArray copyWithZone:[other.giftDistributesArray zone]] autorelease];
    } else {
      [result.giftDistributesArray appendArray:other.giftDistributesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageGiftDistribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageGiftDistribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GiftDistribute_Builder* subBuilder = [GiftDistribute builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGiftDistributes:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageGiftDistribute_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageGiftDistribute_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageGiftDistribute_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageGiftDistribute_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)giftDistributes {
  return result.giftDistributesArray;
}
- (GiftDistribute*)giftDistributesAtIndex:(NSUInteger)index {
  return [result giftDistributesAtIndex:index];
}
- (PageGiftDistribute_Builder *)addGiftDistributes:(GiftDistribute*)value {
  if (result.giftDistributesArray == nil) {
    result.giftDistributesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.giftDistributesArray addObject:value];
  return self;
}
- (PageGiftDistribute_Builder *)setGiftDistributesArray:(NSArray *)array {
  result.giftDistributesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftDistribute_Builder *)setGiftDistributesValues:(const GiftDistribute* *)values count:(NSUInteger)count {
  result.giftDistributesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftDistribute_Builder *)clearGiftDistributes {
  result.giftDistributesArray = nil;
  return self;
}
@end

@interface GiftDistributeParams ()
@property (retain) GiftProductCategory* giftCategory;
@property (retain) NSString* giftName;
@property (retain) ApplyCategory* applyCategory;
@property int32_t page;
@property (retain) PBAppendableArray * usersArray;
@property (retain) PBAppendableArray * customerCategoryArray;
@property (retain) PBAppendableArray * customersArray;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PBAppendableArray * companiesArray;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t id;
@end

@implementation GiftDistributeParams

- (BOOL) hasGiftCategory {
  return !!hasGiftCategory_;
}
- (void) setHasGiftCategory:(BOOL) value_ {
  hasGiftCategory_ = !!value_;
}
@synthesize giftCategory;
- (BOOL) hasGiftName {
  return !!hasGiftName_;
}
- (void) setHasGiftName:(BOOL) value_ {
  hasGiftName_ = !!value_;
}
@synthesize giftName;
- (BOOL) hasApplyCategory {
  return !!hasApplyCategory_;
}
- (void) setHasApplyCategory:(BOOL) value_ {
  hasApplyCategory_ = !!value_;
}
@synthesize applyCategory;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize usersArray;
@dynamic users;
@synthesize customerCategoryArray;
@dynamic customerCategory;
@synthesize customersArray;
@dynamic customers;
@synthesize departmentsArray;
@dynamic departments;
@synthesize companiesArray;
@dynamic companies;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value_ {
  hasStartDate_ = !!value_;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value_ {
  hasEndDate_ = !!value_;
}
@synthesize endDate;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (void) dealloc {
  self.giftCategory = nil;
  self.giftName = nil;
  self.applyCategory = nil;
  self.usersArray = nil;
  self.customerCategoryArray = nil;
  self.customersArray = nil;
  self.departmentsArray = nil;
  self.companiesArray = nil;
  self.startDate = nil;
  self.endDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.giftCategory = [GiftProductCategory defaultInstance];
    self.giftName = @"";
    self.applyCategory = [ApplyCategory defaultInstance];
    self.page = 0;
    self.startDate = @"";
    self.endDate = @"";
    self.id = 0;
  }
  return self;
}
static GiftDistributeParams* defaultGiftDistributeParamsInstance = nil;
+ (void) initialize {
  if (self == [GiftDistributeParams class]) {
    defaultGiftDistributeParamsInstance = [[GiftDistributeParams alloc] init];
  }
}
+ (GiftDistributeParams*) defaultInstance {
  return defaultGiftDistributeParamsInstance;
}
- (GiftDistributeParams*) defaultInstance {
  return defaultGiftDistributeParamsInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (PBArray *)customerCategory {
  return customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [customerCategoryArray objectAtIndex:index];
}
- (PBArray *)customers {
  return customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [customersArray objectAtIndex:index];
}
- (PBArray *)departments {
  return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (PBArray *)companies {
  return companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [companiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasGiftCategory) {
    if (!self.giftCategory.isInitialized) {
      return NO;
    }
  }
  if (self.hasApplyCategory) {
    if (!self.applyCategory.isInitialized) {
      return NO;
    }
  }
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CustomerCategory* element in self.customerCategory) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Customer* element in self.customers) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.departments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Company* element in self.companies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGiftCategory) {
    [output writeMessage:1 value:self.giftCategory];
  }
  if (self.hasGiftName) {
    [output writeString:2 value:self.giftName];
  }
  if (self.hasApplyCategory) {
    [output writeMessage:3 value:self.applyCategory];
  }
  if (self.hasPage) {
    [output writeInt32:4 value:self.page];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:5 value:element];
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    [output writeMessage:6 value:element];
  }
  for (Customer *element in self.customersArray) {
    [output writeMessage:7 value:element];
  }
  for (Department *element in self.departmentsArray) {
    [output writeMessage:8 value:element];
  }
  for (Company *element in self.companiesArray) {
    [output writeMessage:9 value:element];
  }
  if (self.hasStartDate) {
    [output writeString:10 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:11 value:self.endDate];
  }
  if (self.hasId) {
    [output writeInt32:12 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGiftCategory) {
    size_ += computeMessageSize(1, self.giftCategory);
  }
  if (self.hasGiftName) {
    size_ += computeStringSize(2, self.giftName);
  }
  if (self.hasApplyCategory) {
    size_ += computeMessageSize(3, self.applyCategory);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(4, self.page);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(5, element);
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    size_ += computeMessageSize(6, element);
  }
  for (Customer *element in self.customersArray) {
    size_ += computeMessageSize(7, element);
  }
  for (Department *element in self.departmentsArray) {
    size_ += computeMessageSize(8, element);
  }
  for (Company *element in self.companiesArray) {
    size_ += computeMessageSize(9, element);
  }
  if (self.hasStartDate) {
    size_ += computeStringSize(10, self.startDate);
  }
  if (self.hasEndDate) {
    size_ += computeStringSize(11, self.endDate);
  }
  if (self.hasId) {
    size_ += computeInt32Size(12, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftDistributeParams*) parseFromData:(NSData*) data {
  return (GiftDistributeParams*)[[[GiftDistributeParams builder] mergeFromData:data] build];
}
+ (GiftDistributeParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDistributeParams*)[[[GiftDistributeParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftDistributeParams*) parseFromInputStream:(NSInputStream*) input {
  return (GiftDistributeParams*)[[[GiftDistributeParams builder] mergeFromInputStream:input] build];
}
+ (GiftDistributeParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDistributeParams*)[[[GiftDistributeParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDistributeParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftDistributeParams*)[[[GiftDistributeParams builder] mergeFromCodedInputStream:input] build];
}
+ (GiftDistributeParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftDistributeParams*)[[[GiftDistributeParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftDistributeParams_Builder*) builder {
  return [[[GiftDistributeParams_Builder alloc] init] autorelease];
}
+ (GiftDistributeParams_Builder*) builderWithPrototype:(GiftDistributeParams*) prototype {
  return [[GiftDistributeParams builder] mergeFrom:prototype];
}
- (GiftDistributeParams_Builder*) builder {
  return [GiftDistributeParams builder];
}
- (GiftDistributeParams_Builder*) toBuilder {
  return [GiftDistributeParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGiftCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftCategory"];
    [self.giftCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGiftName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"giftName", self.giftName];
  }
  if (self.hasApplyCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"applyCategory"];
    [self.applyCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customerCategory"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Customer* element in self.customersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Department* element in self.departmentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Company* element in self.companiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startDate", self.startDate];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", self.endDate];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftDistributeParams class]]) {
    return NO;
  }
  GiftDistributeParams *otherMessage = other;
  return
      self.hasGiftCategory == otherMessage.hasGiftCategory &&
      (!self.hasGiftCategory || [self.giftCategory isEqual:otherMessage.giftCategory]) &&
      self.hasGiftName == otherMessage.hasGiftName &&
      (!self.hasGiftName || [self.giftName isEqual:otherMessage.giftName]) &&
      self.hasApplyCategory == otherMessage.hasApplyCategory &&
      (!self.hasApplyCategory || [self.applyCategory isEqual:otherMessage.applyCategory]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      [self.customerCategoryArray isEqualToArray:otherMessage.customerCategoryArray] &&
      [self.customersArray isEqualToArray:otherMessage.customersArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.companiesArray isEqualToArray:otherMessage.companiesArray] &&
      self.hasStartDate == otherMessage.hasStartDate &&
      (!self.hasStartDate || [self.startDate isEqual:otherMessage.startDate]) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || [self.endDate isEqual:otherMessage.endDate]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGiftCategory) {
    hashCode = hashCode * 31 + [self.giftCategory hash];
  }
  if (self.hasGiftName) {
    hashCode = hashCode * 31 + [self.giftName hash];
  }
  if (self.hasApplyCategory) {
    hashCode = hashCode * 31 + [self.applyCategory hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Customer* element in self.customersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Department* element in self.departmentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Company* element in self.companiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasStartDate) {
    hashCode = hashCode * 31 + [self.startDate hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [self.endDate hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftDistributeParams_Builder()
@property (retain) GiftDistributeParams* result;
@end

@implementation GiftDistributeParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftDistributeParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftDistributeParams_Builder*) clear {
  self.result = [[[GiftDistributeParams alloc] init] autorelease];
  return self;
}
- (GiftDistributeParams_Builder*) clone {
  return [GiftDistributeParams builderWithPrototype:result];
}
- (GiftDistributeParams*) defaultInstance {
  return [GiftDistributeParams defaultInstance];
}
- (GiftDistributeParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftDistributeParams*) buildPartial {
  GiftDistributeParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftDistributeParams_Builder*) mergeFrom:(GiftDistributeParams*) other {
  if (other == [GiftDistributeParams defaultInstance]) {
    return self;
  }
  if (other.hasGiftCategory) {
    [self mergeGiftCategory:other.giftCategory];
  }
  if (other.hasGiftName) {
    [self setGiftName:other.giftName];
  }
  if (other.hasApplyCategory) {
    [self mergeApplyCategory:other.applyCategory];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  if (other.customerCategoryArray.count > 0) {
    if (result.customerCategoryArray == nil) {
      result.customerCategoryArray = [[other.customerCategoryArray copyWithZone:[other.customerCategoryArray zone]] autorelease];
    } else {
      [result.customerCategoryArray appendArray:other.customerCategoryArray];
    }
  }
  if (other.customersArray.count > 0) {
    if (result.customersArray == nil) {
      result.customersArray = [[other.customersArray copyWithZone:[other.customersArray zone]] autorelease];
    } else {
      [result.customersArray appendArray:other.customersArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
    } else {
      [result.departmentsArray appendArray:other.departmentsArray];
    }
  }
  if (other.companiesArray.count > 0) {
    if (result.companiesArray == nil) {
      result.companiesArray = [[other.companiesArray copyWithZone:[other.companiesArray zone]] autorelease];
    } else {
      [result.companiesArray appendArray:other.companiesArray];
    }
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftDistributeParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftDistributeParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        GiftProductCategory_Builder* subBuilder = [GiftProductCategory builder];
        if (self.hasGiftCategory) {
          [subBuilder mergeFrom:self.giftCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGiftCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGiftName:[input readString]];
        break;
      }
      case 26: {
        ApplyCategory_Builder* subBuilder = [ApplyCategory builder];
        if (self.hasApplyCategory) {
          [subBuilder mergeFrom:self.applyCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setApplyCategory:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setPage:[input readInt32]];
        break;
      }
      case 42: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        CustomerCategory_Builder* subBuilder = [CustomerCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomerCategory:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Customer_Builder* subBuilder = [Customer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomers:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Company_Builder* subBuilder = [Company builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanies:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        [self setStartDate:[input readString]];
        break;
      }
      case 90: {
        [self setEndDate:[input readString]];
        break;
      }
      case 96: {
        [self setId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGiftCategory {
  return result.hasGiftCategory;
}
- (GiftProductCategory*) giftCategory {
  return result.giftCategory;
}
- (GiftDistributeParams_Builder*) setGiftCategory:(GiftProductCategory*) value {
  result.hasGiftCategory = YES;
  result.giftCategory = value;
  return self;
}
- (GiftDistributeParams_Builder*) setGiftCategoryBuilder:(GiftProductCategory_Builder*) builderForValue {
  return [self setGiftCategory:[builderForValue build]];
}
- (GiftDistributeParams_Builder*) mergeGiftCategory:(GiftProductCategory*) value {
  if (result.hasGiftCategory &&
      result.giftCategory != [GiftProductCategory defaultInstance]) {
    result.giftCategory =
      [[[GiftProductCategory builderWithPrototype:result.giftCategory] mergeFrom:value] buildPartial];
  } else {
    result.giftCategory = value;
  }
  result.hasGiftCategory = YES;
  return self;
}
- (GiftDistributeParams_Builder*) clearGiftCategory {
  result.hasGiftCategory = NO;
  result.giftCategory = [GiftProductCategory defaultInstance];
  return self;
}
- (BOOL) hasGiftName {
  return result.hasGiftName;
}
- (NSString*) giftName {
  return result.giftName;
}
- (GiftDistributeParams_Builder*) setGiftName:(NSString*) value {
  result.hasGiftName = YES;
  result.giftName = value;
  return self;
}
- (GiftDistributeParams_Builder*) clearGiftName {
  result.hasGiftName = NO;
  result.giftName = @"";
  return self;
}
- (BOOL) hasApplyCategory {
  return result.hasApplyCategory;
}
- (ApplyCategory*) applyCategory {
  return result.applyCategory;
}
- (GiftDistributeParams_Builder*) setApplyCategory:(ApplyCategory*) value {
  result.hasApplyCategory = YES;
  result.applyCategory = value;
  return self;
}
- (GiftDistributeParams_Builder*) setApplyCategoryBuilder:(ApplyCategory_Builder*) builderForValue {
  return [self setApplyCategory:[builderForValue build]];
}
- (GiftDistributeParams_Builder*) mergeApplyCategory:(ApplyCategory*) value {
  if (result.hasApplyCategory &&
      result.applyCategory != [ApplyCategory defaultInstance]) {
    result.applyCategory =
      [[[ApplyCategory builderWithPrototype:result.applyCategory] mergeFrom:value] buildPartial];
  } else {
    result.applyCategory = value;
  }
  result.hasApplyCategory = YES;
  return self;
}
- (GiftDistributeParams_Builder*) clearApplyCategory {
  result.hasApplyCategory = NO;
  result.applyCategory = [ApplyCategory defaultInstance];
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (GiftDistributeParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (GiftDistributeParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (GiftDistributeParams_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (GiftDistributeParams_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
- (PBAppendableArray *)customerCategory {
  return result.customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [result customerCategoryAtIndex:index];
}
- (GiftDistributeParams_Builder *)addCustomerCategory:(CustomerCategory*)value {
  if (result.customerCategoryArray == nil) {
    result.customerCategoryArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customerCategoryArray addObject:value];
  return self;
}
- (GiftDistributeParams_Builder *)setCustomerCategoryArray:(NSArray *)array {
  result.customerCategoryArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)setCustomerCategoryValues:(const CustomerCategory* *)values count:(NSUInteger)count {
  result.customerCategoryArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)clearCustomerCategory {
  result.customerCategoryArray = nil;
  return self;
}
- (PBAppendableArray *)customers {
  return result.customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [result customersAtIndex:index];
}
- (GiftDistributeParams_Builder *)addCustomers:(Customer*)value {
  if (result.customersArray == nil) {
    result.customersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customersArray addObject:value];
  return self;
}
- (GiftDistributeParams_Builder *)setCustomersArray:(NSArray *)array {
  result.customersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count {
  result.customersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)clearCustomers {
  result.customersArray = nil;
  return self;
}
- (PBAppendableArray *)departments {
  return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (GiftDistributeParams_Builder *)addDepartments:(Department*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (GiftDistributeParams_Builder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (PBAppendableArray *)companies {
  return result.companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [result companiesAtIndex:index];
}
- (GiftDistributeParams_Builder *)addCompanies:(Company*)value {
  if (result.companiesArray == nil) {
    result.companiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.companiesArray addObject:value];
  return self;
}
- (GiftDistributeParams_Builder *)setCompaniesArray:(NSArray *)array {
  result.companiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)setCompaniesValues:(const Company* *)values count:(NSUInteger)count {
  result.companiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftDistributeParams_Builder *)clearCompanies {
  result.companiesArray = nil;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (GiftDistributeParams_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (GiftDistributeParams_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (GiftDistributeParams_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (GiftDistributeParams_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftDistributeParams_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftDistributeParams_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
@end

@interface GiftStock ()
@property int32_t id;
@property (retain) User* user;
@property (retain) NSString* content;
@property (retain) NSString* createDate;
@property (retain) Location* location;
@property (retain) Company* company;
@property (retain) PBAppendableArray * filesArray;
@property (retain) PBAppendableArray * filePathArray;
@property (retain) PBAppendableArray * productsArray;
@property int32_t version;
@end

@implementation GiftStock

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value_ {
  hasLocation_ = !!value_;
}
@synthesize location;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
@synthesize filesArray;
@dynamic files;
@synthesize filePathArray;
@dynamic filePath;
@synthesize productsArray;
@dynamic products;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  self.user = nil;
  self.content = nil;
  self.createDate = nil;
  self.location = nil;
  self.company = nil;
  self.filesArray = nil;
  self.filePathArray = nil;
  self.productsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.user = [User defaultInstance];
    self.content = @"";
    self.createDate = @"";
    self.location = [Location defaultInstance];
    self.company = [Company defaultInstance];
    self.version = 1;
  }
  return self;
}
static GiftStock* defaultGiftStockInstance = nil;
+ (void) initialize {
  if (self == [GiftStock class]) {
    defaultGiftStockInstance = [[GiftStock alloc] init];
  }
}
+ (GiftStock*) defaultInstance {
  return defaultGiftStockInstance;
}
- (GiftStock*) defaultInstance {
  return defaultGiftStockInstance;
}
- (PBArray *)files {
  return filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [filesArray objectAtIndex:index];
}
- (PBArray *)filePath {
  return filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [filePathArray objectAtIndex:index];
}
- (PBArray *)products {
  return productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [productsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  for (GiftProductModel* element in self.products) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasCreateDate) {
    [output writeString:4 value:self.createDate];
  }
  if (self.hasLocation) {
    [output writeMessage:5 value:self.location];
  }
  if (self.hasCompany) {
    [output writeMessage:6 value:self.company];
  }
  const NSUInteger filesArrayCount = self.filesArray.count;
  if (filesArrayCount > 0) {
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < filesArrayCount; ++i) {
      [output writeData:7 value:values[i]];
    }
  }
  const NSUInteger filePathArrayCount = self.filePathArray.count;
  if (filePathArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < filePathArrayCount; ++i) {
      [output writeString:8 value:values[i]];
    }
  }
  for (GiftProductModel *element in self.productsArray) {
    [output writeMessage:9 value:element];
  }
  if (self.hasVersion) {
    [output writeInt32:10 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(4, self.createDate);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(5, self.location);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(6, self.company);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filesArray.count;
    const NSData* *values = (const NSData* *)self.filesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeDataSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.filePathArray.count;
    const NSString* *values = (const NSString* *)self.filePathArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  for (GiftProductModel *element in self.productsArray) {
    size_ += computeMessageSize(9, element);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(10, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftStock*) parseFromData:(NSData*) data {
  return (GiftStock*)[[[GiftStock builder] mergeFromData:data] build];
}
+ (GiftStock*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftStock*)[[[GiftStock builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftStock*) parseFromInputStream:(NSInputStream*) input {
  return (GiftStock*)[[[GiftStock builder] mergeFromInputStream:input] build];
}
+ (GiftStock*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftStock*)[[[GiftStock builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftStock*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftStock*)[[[GiftStock builder] mergeFromCodedInputStream:input] build];
}
+ (GiftStock*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftStock*)[[[GiftStock builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftStock_Builder*) builder {
  return [[[GiftStock_Builder alloc] init] autorelease];
}
+ (GiftStock_Builder*) builderWithPrototype:(GiftStock*) prototype {
  return [[GiftStock builder] mergeFrom:prototype];
}
- (GiftStock_Builder*) builder {
  return [GiftStock builder];
}
- (GiftStock_Builder*) toBuilder {
  return [GiftStock builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSData* element in self.filesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"files", element];
  }
  for (NSString* element in self.filePathArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"filePath", element];
  }
  for (GiftProductModel* element in self.productsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"products"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftStock class]]) {
    return NO;
  }
  GiftStock *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      [self.filesArray isEqualToArray:otherMessage.filesArray] &&
      [self.filePathArray isEqualToArray:otherMessage.filePathArray] &&
      [self.productsArray isEqualToArray:otherMessage.productsArray] &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  for (NSData* element in self.filesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSString* element in self.filePathArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (GiftProductModel* element in self.productsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftStock_Builder()
@property (retain) GiftStock* result;
@end

@implementation GiftStock_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftStock alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftStock_Builder*) clear {
  self.result = [[[GiftStock alloc] init] autorelease];
  return self;
}
- (GiftStock_Builder*) clone {
  return [GiftStock builderWithPrototype:result];
}
- (GiftStock*) defaultInstance {
  return [GiftStock defaultInstance];
}
- (GiftStock*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftStock*) buildPartial {
  GiftStock* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftStock_Builder*) mergeFrom:(GiftStock*) other {
  if (other == [GiftStock defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  if (other.filesArray.count > 0) {
    if (result.filesArray == nil) {
      result.filesArray = [[other.filesArray copyWithZone:[other.filesArray zone]] autorelease];
    } else {
      [result.filesArray appendArray:other.filesArray];
    }
  }
  if (other.filePathArray.count > 0) {
    if (result.filePathArray == nil) {
      result.filePathArray = [[other.filePathArray copyWithZone:[other.filePathArray zone]] autorelease];
    } else {
      [result.filePathArray appendArray:other.filePathArray];
    }
  }
  if (other.productsArray.count > 0) {
    if (result.productsArray == nil) {
      result.productsArray = [[other.productsArray copyWithZone:[other.productsArray zone]] autorelease];
    } else {
      [result.productsArray appendArray:other.productsArray];
    }
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftStock_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftStock_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 42: {
        Location_Builder* subBuilder = [Location builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self addFiles:[input readData]];
        break;
      }
      case 66: {
        [self addFilePath:[input readString]];
        break;
      }
      case 74: {
        GiftProductModel_Builder* subBuilder = [GiftProductModel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProducts:[subBuilder buildPartial]];
        break;
      }
      case 80: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftStock_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftStock_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (User*) user {
  return result.user;
}
- (GiftStock_Builder*) setUser:(User*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (GiftStock_Builder*) setUserBuilder:(User_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (GiftStock_Builder*) mergeUser:(User*) value {
  if (result.hasUser &&
      result.user != [User defaultInstance]) {
    result.user =
      [[[User builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (GiftStock_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [User defaultInstance];
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (GiftStock_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (GiftStock_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (GiftStock_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (GiftStock_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (Location*) location {
  return result.location;
}
- (GiftStock_Builder*) setLocation:(Location*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (GiftStock_Builder*) setLocationBuilder:(Location_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (GiftStock_Builder*) mergeLocation:(Location*) value {
  if (result.hasLocation &&
      result.location != [Location defaultInstance]) {
    result.location =
      [[[Location builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (GiftStock_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [Location defaultInstance];
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftStock_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftStock_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftStock_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftStock_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
- (PBAppendableArray *)files {
  return result.filesArray;
}
- (NSData*)filesAtIndex:(NSUInteger)index {
  return [result filesAtIndex:index];
}
- (GiftStock_Builder *)addFiles:(NSData*)value {
  if (result.filesArray == nil) {
    result.filesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filesArray addObject:value];
  return self;
}
- (GiftStock_Builder *)setFilesArray:(NSArray *)array {
  result.filesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStock_Builder *)setFilesValues:(const NSData* *)values count:(NSUInteger)count {
  result.filesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStock_Builder *)clearFiles {
  result.filesArray = nil;
  return self;
}
- (PBAppendableArray *)filePath {
  return result.filePathArray;
}
- (NSString*)filePathAtIndex:(NSUInteger)index {
  return [result filePathAtIndex:index];
}
- (GiftStock_Builder *)addFilePath:(NSString*)value {
  if (result.filePathArray == nil) {
    result.filePathArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.filePathArray addObject:value];
  return self;
}
- (GiftStock_Builder *)setFilePathArray:(NSArray *)array {
  result.filePathArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStock_Builder *)setFilePathValues:(const NSString* *)values count:(NSUInteger)count {
  result.filePathArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStock_Builder *)clearFilePath {
  result.filePathArray = nil;
  return self;
}
- (PBAppendableArray *)products {
  return result.productsArray;
}
- (GiftProductModel*)productsAtIndex:(NSUInteger)index {
  return [result productsAtIndex:index];
}
- (GiftStock_Builder *)addProducts:(GiftProductModel*)value {
  if (result.productsArray == nil) {
    result.productsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.productsArray addObject:value];
  return self;
}
- (GiftStock_Builder *)setProductsArray:(NSArray *)array {
  result.productsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStock_Builder *)setProductsValues:(const GiftProductModel* *)values count:(NSUInteger)count {
  result.productsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStock_Builder *)clearProducts {
  result.productsArray = nil;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (GiftStock_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (GiftStock_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 1;
  return self;
}
@end

@interface PageGiftStock ()
@property (retain) Pagination* page;
@property (retain) PBAppendableArray * giftStocksArray;
@end

@implementation PageGiftStock

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize giftStocksArray;
@dynamic giftStocks;
- (void) dealloc {
  self.page = nil;
  self.giftStocksArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.page = [Pagination defaultInstance];
  }
  return self;
}
static PageGiftStock* defaultPageGiftStockInstance = nil;
+ (void) initialize {
  if (self == [PageGiftStock class]) {
    defaultPageGiftStockInstance = [[PageGiftStock alloc] init];
  }
}
+ (PageGiftStock*) defaultInstance {
  return defaultPageGiftStockInstance;
}
- (PageGiftStock*) defaultInstance {
  return defaultPageGiftStockInstance;
}
- (PBArray *)giftStocks {
  return giftStocksArray;
}
- (GiftStock*)giftStocksAtIndex:(NSUInteger)index {
  return [giftStocksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasPage) {
    if (!self.page.isInitialized) {
      return NO;
    }
  }
  for (GiftStock* element in self.giftStocks) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeMessage:1 value:self.page];
  }
  for (GiftStock *element in self.giftStocksArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeMessageSize(1, self.page);
  }
  for (GiftStock *element in self.giftStocksArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PageGiftStock*) parseFromData:(NSData*) data {
  return (PageGiftStock*)[[[PageGiftStock builder] mergeFromData:data] build];
}
+ (PageGiftStock*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftStock*)[[[PageGiftStock builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PageGiftStock*) parseFromInputStream:(NSInputStream*) input {
  return (PageGiftStock*)[[[PageGiftStock builder] mergeFromInputStream:input] build];
}
+ (PageGiftStock*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftStock*)[[[PageGiftStock builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftStock*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PageGiftStock*)[[[PageGiftStock builder] mergeFromCodedInputStream:input] build];
}
+ (PageGiftStock*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PageGiftStock*)[[[PageGiftStock builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PageGiftStock_Builder*) builder {
  return [[[PageGiftStock_Builder alloc] init] autorelease];
}
+ (PageGiftStock_Builder*) builderWithPrototype:(PageGiftStock*) prototype {
  return [[PageGiftStock builder] mergeFrom:prototype];
}
- (PageGiftStock_Builder*) builder {
  return [PageGiftStock builder];
}
- (PageGiftStock_Builder*) toBuilder {
  return [PageGiftStock builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@ {\n", indent, @"page"];
    [self.page writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (GiftStock* element in self.giftStocksArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftStocks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PageGiftStock class]]) {
    return NO;
  }
  PageGiftStock *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || [self.page isEqual:otherMessage.page]) &&
      [self.giftStocksArray isEqualToArray:otherMessage.giftStocksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [self.page hash];
  }
  for (GiftStock* element in self.giftStocksArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PageGiftStock_Builder()
@property (retain) PageGiftStock* result;
@end

@implementation PageGiftStock_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PageGiftStock alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PageGiftStock_Builder*) clear {
  self.result = [[[PageGiftStock alloc] init] autorelease];
  return self;
}
- (PageGiftStock_Builder*) clone {
  return [PageGiftStock builderWithPrototype:result];
}
- (PageGiftStock*) defaultInstance {
  return [PageGiftStock defaultInstance];
}
- (PageGiftStock*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PageGiftStock*) buildPartial {
  PageGiftStock* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PageGiftStock_Builder*) mergeFrom:(PageGiftStock*) other {
  if (other == [PageGiftStock defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self mergePage:other.page];
  }
  if (other.giftStocksArray.count > 0) {
    if (result.giftStocksArray == nil) {
      result.giftStocksArray = [[other.giftStocksArray copyWithZone:[other.giftStocksArray zone]] autorelease];
    } else {
      [result.giftStocksArray appendArray:other.giftStocksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PageGiftStock_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PageGiftStock_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Pagination_Builder* subBuilder = [Pagination builder];
        if (self.hasPage) {
          [subBuilder mergeFrom:self.page];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GiftStock_Builder* subBuilder = [GiftStock builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGiftStocks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (Pagination*) page {
  return result.page;
}
- (PageGiftStock_Builder*) setPage:(Pagination*) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (PageGiftStock_Builder*) setPageBuilder:(Pagination_Builder*) builderForValue {
  return [self setPage:[builderForValue build]];
}
- (PageGiftStock_Builder*) mergePage:(Pagination*) value {
  if (result.hasPage &&
      result.page != [Pagination defaultInstance]) {
    result.page =
      [[[Pagination builderWithPrototype:result.page] mergeFrom:value] buildPartial];
  } else {
    result.page = value;
  }
  result.hasPage = YES;
  return self;
}
- (PageGiftStock_Builder*) clearPage {
  result.hasPage = NO;
  result.page = [Pagination defaultInstance];
  return self;
}
- (PBAppendableArray *)giftStocks {
  return result.giftStocksArray;
}
- (GiftStock*)giftStocksAtIndex:(NSUInteger)index {
  return [result giftStocksAtIndex:index];
}
- (PageGiftStock_Builder *)addGiftStocks:(GiftStock*)value {
  if (result.giftStocksArray == nil) {
    result.giftStocksArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.giftStocksArray addObject:value];
  return self;
}
- (PageGiftStock_Builder *)setGiftStocksArray:(NSArray *)array {
  result.giftStocksArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftStock_Builder *)setGiftStocksValues:(const GiftStock* *)values count:(NSUInteger)count {
  result.giftStocksArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PageGiftStock_Builder *)clearGiftStocks {
  result.giftStocksArray = nil;
  return self;
}
@end

@interface GiftStockParams ()
@property (retain) GiftProductCategory* giftCategory;
@property (retain) NSString* giftName;
@property int32_t page;
@property (retain) PBAppendableArray * usersArray;
@property (retain) PBAppendableArray * customerCategoryArray;
@property (retain) PBAppendableArray * customersArray;
@property (retain) PBAppendableArray * departmentsArray;
@property (retain) PBAppendableArray * companiesArray;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t id;
@end

@implementation GiftStockParams

- (BOOL) hasGiftCategory {
  return !!hasGiftCategory_;
}
- (void) setHasGiftCategory:(BOOL) value_ {
  hasGiftCategory_ = !!value_;
}
@synthesize giftCategory;
- (BOOL) hasGiftName {
  return !!hasGiftName_;
}
- (void) setHasGiftName:(BOOL) value_ {
  hasGiftName_ = !!value_;
}
@synthesize giftName;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) value_ {
  hasPage_ = !!value_;
}
@synthesize page;
@synthesize usersArray;
@dynamic users;
@synthesize customerCategoryArray;
@dynamic customerCategory;
@synthesize customersArray;
@dynamic customers;
@synthesize departmentsArray;
@dynamic departments;
@synthesize companiesArray;
@dynamic companies;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value_ {
  hasStartDate_ = !!value_;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value_ {
  hasEndDate_ = !!value_;
}
@synthesize endDate;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (void) dealloc {
  self.giftCategory = nil;
  self.giftName = nil;
  self.usersArray = nil;
  self.customerCategoryArray = nil;
  self.customersArray = nil;
  self.departmentsArray = nil;
  self.companiesArray = nil;
  self.startDate = nil;
  self.endDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.giftCategory = [GiftProductCategory defaultInstance];
    self.giftName = @"";
    self.page = 0;
    self.startDate = @"";
    self.endDate = @"";
    self.id = 0;
  }
  return self;
}
static GiftStockParams* defaultGiftStockParamsInstance = nil;
+ (void) initialize {
  if (self == [GiftStockParams class]) {
    defaultGiftStockParamsInstance = [[GiftStockParams alloc] init];
  }
}
+ (GiftStockParams*) defaultInstance {
  return defaultGiftStockParamsInstance;
}
- (GiftStockParams*) defaultInstance {
  return defaultGiftStockParamsInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (PBArray *)customerCategory {
  return customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [customerCategoryArray objectAtIndex:index];
}
- (PBArray *)customers {
  return customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [customersArray objectAtIndex:index];
}
- (PBArray *)departments {
  return departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (PBArray *)companies {
  return companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [companiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasGiftCategory) {
    if (!self.giftCategory.isInitialized) {
      return NO;
    }
  }
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CustomerCategory* element in self.customerCategory) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Customer* element in self.customers) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Department* element in self.departments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Company* element in self.companies) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGiftCategory) {
    [output writeMessage:1 value:self.giftCategory];
  }
  if (self.hasGiftName) {
    [output writeString:2 value:self.giftName];
  }
  if (self.hasPage) {
    [output writeInt32:4 value:self.page];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:5 value:element];
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    [output writeMessage:6 value:element];
  }
  for (Customer *element in self.customersArray) {
    [output writeMessage:7 value:element];
  }
  for (Department *element in self.departmentsArray) {
    [output writeMessage:8 value:element];
  }
  for (Company *element in self.companiesArray) {
    [output writeMessage:9 value:element];
  }
  if (self.hasStartDate) {
    [output writeString:10 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:11 value:self.endDate];
  }
  if (self.hasId) {
    [output writeInt32:12 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGiftCategory) {
    size_ += computeMessageSize(1, self.giftCategory);
  }
  if (self.hasGiftName) {
    size_ += computeStringSize(2, self.giftName);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(4, self.page);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(5, element);
  }
  for (CustomerCategory *element in self.customerCategoryArray) {
    size_ += computeMessageSize(6, element);
  }
  for (Customer *element in self.customersArray) {
    size_ += computeMessageSize(7, element);
  }
  for (Department *element in self.departmentsArray) {
    size_ += computeMessageSize(8, element);
  }
  for (Company *element in self.companiesArray) {
    size_ += computeMessageSize(9, element);
  }
  if (self.hasStartDate) {
    size_ += computeStringSize(10, self.startDate);
  }
  if (self.hasEndDate) {
    size_ += computeStringSize(11, self.endDate);
  }
  if (self.hasId) {
    size_ += computeInt32Size(12, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftStockParams*) parseFromData:(NSData*) data {
  return (GiftStockParams*)[[[GiftStockParams builder] mergeFromData:data] build];
}
+ (GiftStockParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftStockParams*)[[[GiftStockParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftStockParams*) parseFromInputStream:(NSInputStream*) input {
  return (GiftStockParams*)[[[GiftStockParams builder] mergeFromInputStream:input] build];
}
+ (GiftStockParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftStockParams*)[[[GiftStockParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftStockParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftStockParams*)[[[GiftStockParams builder] mergeFromCodedInputStream:input] build];
}
+ (GiftStockParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftStockParams*)[[[GiftStockParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftStockParams_Builder*) builder {
  return [[[GiftStockParams_Builder alloc] init] autorelease];
}
+ (GiftStockParams_Builder*) builderWithPrototype:(GiftStockParams*) prototype {
  return [[GiftStockParams builder] mergeFrom:prototype];
}
- (GiftStockParams_Builder*) builder {
  return [GiftStockParams builder];
}
- (GiftStockParams_Builder*) toBuilder {
  return [GiftStockParams builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGiftCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftCategory"];
    [self.giftCategory writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGiftName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"giftName", self.giftName];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInt:self.page]];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customerCategory"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Customer* element in self.customersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"customers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Department* element in self.departmentsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Company* element in self.companiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"companies"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startDate", self.startDate];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", self.endDate];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftStockParams class]]) {
    return NO;
  }
  GiftStockParams *otherMessage = other;
  return
      self.hasGiftCategory == otherMessage.hasGiftCategory &&
      (!self.hasGiftCategory || [self.giftCategory isEqual:otherMessage.giftCategory]) &&
      self.hasGiftName == otherMessage.hasGiftName &&
      (!self.hasGiftName || [self.giftName isEqual:otherMessage.giftName]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      [self.customerCategoryArray isEqualToArray:otherMessage.customerCategoryArray] &&
      [self.customersArray isEqualToArray:otherMessage.customersArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.companiesArray isEqualToArray:otherMessage.companiesArray] &&
      self.hasStartDate == otherMessage.hasStartDate &&
      (!self.hasStartDate || [self.startDate isEqual:otherMessage.startDate]) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || [self.endDate isEqual:otherMessage.endDate]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGiftCategory) {
    hashCode = hashCode * 31 + [self.giftCategory hash];
  }
  if (self.hasGiftName) {
    hashCode = hashCode * 31 + [self.giftName hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.page] hash];
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (CustomerCategory* element in self.customerCategoryArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Customer* element in self.customersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Department* element in self.departmentsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Company* element in self.companiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasStartDate) {
    hashCode = hashCode * 31 + [self.startDate hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [self.endDate hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftStockParams_Builder()
@property (retain) GiftStockParams* result;
@end

@implementation GiftStockParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftStockParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftStockParams_Builder*) clear {
  self.result = [[[GiftStockParams alloc] init] autorelease];
  return self;
}
- (GiftStockParams_Builder*) clone {
  return [GiftStockParams builderWithPrototype:result];
}
- (GiftStockParams*) defaultInstance {
  return [GiftStockParams defaultInstance];
}
- (GiftStockParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftStockParams*) buildPartial {
  GiftStockParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftStockParams_Builder*) mergeFrom:(GiftStockParams*) other {
  if (other == [GiftStockParams defaultInstance]) {
    return self;
  }
  if (other.hasGiftCategory) {
    [self mergeGiftCategory:other.giftCategory];
  }
  if (other.hasGiftName) {
    [self setGiftName:other.giftName];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  if (other.customerCategoryArray.count > 0) {
    if (result.customerCategoryArray == nil) {
      result.customerCategoryArray = [[other.customerCategoryArray copyWithZone:[other.customerCategoryArray zone]] autorelease];
    } else {
      [result.customerCategoryArray appendArray:other.customerCategoryArray];
    }
  }
  if (other.customersArray.count > 0) {
    if (result.customersArray == nil) {
      result.customersArray = [[other.customersArray copyWithZone:[other.customersArray zone]] autorelease];
    } else {
      [result.customersArray appendArray:other.customersArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[other.departmentsArray copyWithZone:[other.departmentsArray zone]] autorelease];
    } else {
      [result.departmentsArray appendArray:other.departmentsArray];
    }
  }
  if (other.companiesArray.count > 0) {
    if (result.companiesArray == nil) {
      result.companiesArray = [[other.companiesArray copyWithZone:[other.companiesArray zone]] autorelease];
    } else {
      [result.companiesArray appendArray:other.companiesArray];
    }
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftStockParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftStockParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        GiftProductCategory_Builder* subBuilder = [GiftProductCategory builder];
        if (self.hasGiftCategory) {
          [subBuilder mergeFrom:self.giftCategory];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGiftCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGiftName:[input readString]];
        break;
      }
      case 32: {
        [self setPage:[input readInt32]];
        break;
      }
      case 42: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        CustomerCategory_Builder* subBuilder = [CustomerCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomerCategory:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Customer_Builder* subBuilder = [Customer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCustomers:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        Department_Builder* subBuilder = [Department builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Company_Builder* subBuilder = [Company builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompanies:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        [self setStartDate:[input readString]];
        break;
      }
      case 90: {
        [self setEndDate:[input readString]];
        break;
      }
      case 96: {
        [self setId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGiftCategory {
  return result.hasGiftCategory;
}
- (GiftProductCategory*) giftCategory {
  return result.giftCategory;
}
- (GiftStockParams_Builder*) setGiftCategory:(GiftProductCategory*) value {
  result.hasGiftCategory = YES;
  result.giftCategory = value;
  return self;
}
- (GiftStockParams_Builder*) setGiftCategoryBuilder:(GiftProductCategory_Builder*) builderForValue {
  return [self setGiftCategory:[builderForValue build]];
}
- (GiftStockParams_Builder*) mergeGiftCategory:(GiftProductCategory*) value {
  if (result.hasGiftCategory &&
      result.giftCategory != [GiftProductCategory defaultInstance]) {
    result.giftCategory =
      [[[GiftProductCategory builderWithPrototype:result.giftCategory] mergeFrom:value] buildPartial];
  } else {
    result.giftCategory = value;
  }
  result.hasGiftCategory = YES;
  return self;
}
- (GiftStockParams_Builder*) clearGiftCategory {
  result.hasGiftCategory = NO;
  result.giftCategory = [GiftProductCategory defaultInstance];
  return self;
}
- (BOOL) hasGiftName {
  return result.hasGiftName;
}
- (NSString*) giftName {
  return result.giftName;
}
- (GiftStockParams_Builder*) setGiftName:(NSString*) value {
  result.hasGiftName = YES;
  result.giftName = value;
  return self;
}
- (GiftStockParams_Builder*) clearGiftName {
  result.hasGiftName = NO;
  result.giftName = @"";
  return self;
}
- (BOOL) hasPage {
  return result.hasPage;
}
- (int32_t) page {
  return result.page;
}
- (GiftStockParams_Builder*) setPage:(int32_t) value {
  result.hasPage = YES;
  result.page = value;
  return self;
}
- (GiftStockParams_Builder*) clearPage {
  result.hasPage = NO;
  result.page = 0;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (GiftStockParams_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (GiftStockParams_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
- (PBAppendableArray *)customerCategory {
  return result.customerCategoryArray;
}
- (CustomerCategory*)customerCategoryAtIndex:(NSUInteger)index {
  return [result customerCategoryAtIndex:index];
}
- (GiftStockParams_Builder *)addCustomerCategory:(CustomerCategory*)value {
  if (result.customerCategoryArray == nil) {
    result.customerCategoryArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customerCategoryArray addObject:value];
  return self;
}
- (GiftStockParams_Builder *)setCustomerCategoryArray:(NSArray *)array {
  result.customerCategoryArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)setCustomerCategoryValues:(const CustomerCategory* *)values count:(NSUInteger)count {
  result.customerCategoryArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)clearCustomerCategory {
  result.customerCategoryArray = nil;
  return self;
}
- (PBAppendableArray *)customers {
  return result.customersArray;
}
- (Customer*)customersAtIndex:(NSUInteger)index {
  return [result customersAtIndex:index];
}
- (GiftStockParams_Builder *)addCustomers:(Customer*)value {
  if (result.customersArray == nil) {
    result.customersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.customersArray addObject:value];
  return self;
}
- (GiftStockParams_Builder *)setCustomersArray:(NSArray *)array {
  result.customersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)setCustomersValues:(const Customer* *)values count:(NSUInteger)count {
  result.customersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)clearCustomers {
  result.customersArray = nil;
  return self;
}
- (PBAppendableArray *)departments {
  return result.departmentsArray;
}
- (Department*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (GiftStockParams_Builder *)addDepartments:(Department*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (GiftStockParams_Builder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)setDepartmentsValues:(const Department* *)values count:(NSUInteger)count {
  result.departmentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (PBAppendableArray *)companies {
  return result.companiesArray;
}
- (Company*)companiesAtIndex:(NSUInteger)index {
  return [result companiesAtIndex:index];
}
- (GiftStockParams_Builder *)addCompanies:(Company*)value {
  if (result.companiesArray == nil) {
    result.companiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.companiesArray addObject:value];
  return self;
}
- (GiftStockParams_Builder *)setCompaniesArray:(NSArray *)array {
  result.companiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)setCompaniesValues:(const Company* *)values count:(NSUInteger)count {
  result.companiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftStockParams_Builder *)clearCompanies {
  result.companiesArray = nil;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (GiftStockParams_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (GiftStockParams_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (GiftStockParams_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (GiftStockParams_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftStockParams_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftStockParams_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
@end

@interface GiftProductCategory ()
@property int32_t id;
@property (retain) NSString* name;
@property (retain) NSString* unit;
@property (retain) Company* company;
@end

@implementation GiftProductCategory

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasUnit {
  return !!hasUnit_;
}
- (void) setHasUnit:(BOOL) value_ {
  hasUnit_ = !!value_;
}
@synthesize unit;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
- (void) dealloc {
  self.name = nil;
  self.unit = nil;
  self.company = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.unit = @"";
    self.company = [Company defaultInstance];
  }
  return self;
}
static GiftProductCategory* defaultGiftProductCategoryInstance = nil;
+ (void) initialize {
  if (self == [GiftProductCategory class]) {
    defaultGiftProductCategoryInstance = [[GiftProductCategory alloc] init];
  }
}
+ (GiftProductCategory*) defaultInstance {
  return defaultGiftProductCategoryInstance;
}
- (GiftProductCategory*) defaultInstance {
  return defaultGiftProductCategoryInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasUnit) {
    return NO;
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasUnit) {
    [output writeString:3 value:self.unit];
  }
  if (self.hasCompany) {
    [output writeMessage:4 value:self.company];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasUnit) {
    size_ += computeStringSize(3, self.unit);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(4, self.company);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftProductCategory*) parseFromData:(NSData*) data {
  return (GiftProductCategory*)[[[GiftProductCategory builder] mergeFromData:data] build];
}
+ (GiftProductCategory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductCategory*)[[[GiftProductCategory builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftProductCategory*) parseFromInputStream:(NSInputStream*) input {
  return (GiftProductCategory*)[[[GiftProductCategory builder] mergeFromInputStream:input] build];
}
+ (GiftProductCategory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductCategory*)[[[GiftProductCategory builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProductCategory*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftProductCategory*)[[[GiftProductCategory builder] mergeFromCodedInputStream:input] build];
}
+ (GiftProductCategory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductCategory*)[[[GiftProductCategory builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProductCategory_Builder*) builder {
  return [[[GiftProductCategory_Builder alloc] init] autorelease];
}
+ (GiftProductCategory_Builder*) builderWithPrototype:(GiftProductCategory*) prototype {
  return [[GiftProductCategory builder] mergeFrom:prototype];
}
- (GiftProductCategory_Builder*) builder {
  return [GiftProductCategory builder];
}
- (GiftProductCategory_Builder*) toBuilder {
  return [GiftProductCategory builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasUnit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unit", self.unit];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftProductCategory class]]) {
    return NO;
  }
  GiftProductCategory *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasUnit == otherMessage.hasUnit &&
      (!self.hasUnit || [self.unit isEqual:otherMessage.unit]) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasUnit) {
    hashCode = hashCode * 31 + [self.unit hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftProductCategory_Builder()
@property (retain) GiftProductCategory* result;
@end

@implementation GiftProductCategory_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftProductCategory alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftProductCategory_Builder*) clear {
  self.result = [[[GiftProductCategory alloc] init] autorelease];
  return self;
}
- (GiftProductCategory_Builder*) clone {
  return [GiftProductCategory builderWithPrototype:result];
}
- (GiftProductCategory*) defaultInstance {
  return [GiftProductCategory defaultInstance];
}
- (GiftProductCategory*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftProductCategory*) buildPartial {
  GiftProductCategory* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftProductCategory_Builder*) mergeFrom:(GiftProductCategory*) other {
  if (other == [GiftProductCategory defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUnit) {
    [self setUnit:other.unit];
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftProductCategory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftProductCategory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setUnit:[input readString]];
        break;
      }
      case 34: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftProductCategory_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftProductCategory_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (GiftProductCategory_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (GiftProductCategory_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasUnit {
  return result.hasUnit;
}
- (NSString*) unit {
  return result.unit;
}
- (GiftProductCategory_Builder*) setUnit:(NSString*) value {
  result.hasUnit = YES;
  result.unit = value;
  return self;
}
- (GiftProductCategory_Builder*) clearUnit {
  result.hasUnit = NO;
  result.unit = @"";
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftProductCategory_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftProductCategory_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftProductCategory_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftProductCategory_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
@end

@interface GiftProduct ()
@property int32_t id;
@property (retain) NSString* name;
@property (retain) GiftProductCategory* category;
@property (retain) NSString* code;
@property (retain) NSString* prior;
@property (retain) NSString* specification;
@property (retain) NSString* priority;
@property (retain) NSString* description;
@property (retain) NSString* level;
@property (retain) NSString* place;
@property (retain) NSString* createDate;
@property (retain) Company* company;
@property (retain) PBAppendableArray * giftProductModelsArray;
@end

@implementation GiftProduct

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value_ {
  hasCategory_ = !!value_;
}
@synthesize category;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value_ {
  hasCode_ = !!value_;
}
@synthesize code;
- (BOOL) hasPrior {
  return !!hasPrior_;
}
- (void) setHasPrior:(BOOL) value_ {
  hasPrior_ = !!value_;
}
@synthesize prior;
- (BOOL) hasSpecification {
  return !!hasSpecification_;
}
- (void) setHasSpecification:(BOOL) value_ {
  hasSpecification_ = !!value_;
}
@synthesize specification;
- (BOOL) hasPriority {
  return !!hasPriority_;
}
- (void) setHasPriority:(BOOL) value_ {
  hasPriority_ = !!value_;
}
@synthesize priority;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
  hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value_ {
  hasLevel_ = !!value_;
}
@synthesize level;
- (BOOL) hasPlace {
  return !!hasPlace_;
}
- (void) setHasPlace:(BOOL) value_ {
  hasPlace_ = !!value_;
}
@synthesize place;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
@synthesize giftProductModelsArray;
@dynamic giftProductModels;
- (void) dealloc {
  self.name = nil;
  self.category = nil;
  self.code = nil;
  self.prior = nil;
  self.specification = nil;
  self.priority = nil;
  self.description = nil;
  self.level = nil;
  self.place = nil;
  self.createDate = nil;
  self.company = nil;
  self.giftProductModelsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.category = [GiftProductCategory defaultInstance];
    self.code = @"";
    self.prior = @"";
    self.specification = @"";
    self.priority = @"";
    self.description = @"";
    self.level = @"";
    self.place = @"";
    self.createDate = @"";
    self.company = [Company defaultInstance];
  }
  return self;
}
static GiftProduct* defaultGiftProductInstance = nil;
+ (void) initialize {
  if (self == [GiftProduct class]) {
    defaultGiftProductInstance = [[GiftProduct alloc] init];
  }
}
+ (GiftProduct*) defaultInstance {
  return defaultGiftProductInstance;
}
- (GiftProduct*) defaultInstance {
  return defaultGiftProductInstance;
}
- (PBArray *)giftProductModels {
  return giftProductModelsArray;
}
- (GiftProductModel*)giftProductModelsAtIndex:(NSUInteger)index {
  return [giftProductModelsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (self.hasCategory) {
    if (!self.category.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  for (GiftProductModel* element in self.giftProductModels) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCategory) {
    [output writeMessage:3 value:self.category];
  }
  if (self.hasCode) {
    [output writeString:4 value:self.code];
  }
  if (self.hasPrior) {
    [output writeString:5 value:self.prior];
  }
  if (self.hasSpecification) {
    [output writeString:6 value:self.specification];
  }
  if (self.hasPriority) {
    [output writeString:7 value:self.priority];
  }
  if (self.hasDescription) {
    [output writeString:8 value:self.description];
  }
  if (self.hasLevel) {
    [output writeString:9 value:self.level];
  }
  if (self.hasPlace) {
    [output writeString:10 value:self.place];
  }
  if (self.hasCreateDate) {
    [output writeString:11 value:self.createDate];
  }
  if (self.hasCompany) {
    [output writeMessage:12 value:self.company];
  }
  for (GiftProductModel *element in self.giftProductModelsArray) {
    [output writeMessage:13 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasCategory) {
    size_ += computeMessageSize(3, self.category);
  }
  if (self.hasCode) {
    size_ += computeStringSize(4, self.code);
  }
  if (self.hasPrior) {
    size_ += computeStringSize(5, self.prior);
  }
  if (self.hasSpecification) {
    size_ += computeStringSize(6, self.specification);
  }
  if (self.hasPriority) {
    size_ += computeStringSize(7, self.priority);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(8, self.description);
  }
  if (self.hasLevel) {
    size_ += computeStringSize(9, self.level);
  }
  if (self.hasPlace) {
    size_ += computeStringSize(10, self.place);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(11, self.createDate);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(12, self.company);
  }
  for (GiftProductModel *element in self.giftProductModelsArray) {
    size_ += computeMessageSize(13, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftProduct*) parseFromData:(NSData*) data {
  return (GiftProduct*)[[[GiftProduct builder] mergeFromData:data] build];
}
+ (GiftProduct*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProduct*)[[[GiftProduct builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftProduct*) parseFromInputStream:(NSInputStream*) input {
  return (GiftProduct*)[[[GiftProduct builder] mergeFromInputStream:input] build];
}
+ (GiftProduct*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProduct*)[[[GiftProduct builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProduct*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftProduct*)[[[GiftProduct builder] mergeFromCodedInputStream:input] build];
}
+ (GiftProduct*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProduct*)[[[GiftProduct builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProduct_Builder*) builder {
  return [[[GiftProduct_Builder alloc] init] autorelease];
}
+ (GiftProduct_Builder*) builderWithPrototype:(GiftProduct*) prototype {
  return [[GiftProduct builder] mergeFrom:prototype];
}
- (GiftProduct_Builder*) builder {
  return [GiftProduct builder];
}
- (GiftProduct_Builder*) toBuilder {
  return [GiftProduct builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCategory) {
    [output appendFormat:@"%@%@ {\n", indent, @"category"];
    [self.category writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasPrior) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prior", self.prior];
  }
  if (self.hasSpecification) {
    [output appendFormat:@"%@%@: %@\n", indent, @"specification", self.specification];
  }
  if (self.hasPriority) {
    [output appendFormat:@"%@%@: %@\n", indent, @"priority", self.priority];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
  }
  if (self.hasLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"level", self.level];
  }
  if (self.hasPlace) {
    [output appendFormat:@"%@%@: %@\n", indent, @"place", self.place];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (GiftProductModel* element in self.giftProductModelsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftProductModels"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftProduct class]]) {
    return NO;
  }
  GiftProduct *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || [self.category isEqual:otherMessage.category]) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasPrior == otherMessage.hasPrior &&
      (!self.hasPrior || [self.prior isEqual:otherMessage.prior]) &&
      self.hasSpecification == otherMessage.hasSpecification &&
      (!self.hasSpecification || [self.specification isEqual:otherMessage.specification]) &&
      self.hasPriority == otherMessage.hasPriority &&
      (!self.hasPriority || [self.priority isEqual:otherMessage.priority]) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
      self.hasLevel == otherMessage.hasLevel &&
      (!self.hasLevel || [self.level isEqual:otherMessage.level]) &&
      self.hasPlace == otherMessage.hasPlace &&
      (!self.hasPlace || [self.place isEqual:otherMessage.place]) &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      [self.giftProductModelsArray isEqualToArray:otherMessage.giftProductModelsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCategory) {
    hashCode = hashCode * 31 + [self.category hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasPrior) {
    hashCode = hashCode * 31 + [self.prior hash];
  }
  if (self.hasSpecification) {
    hashCode = hashCode * 31 + [self.specification hash];
  }
  if (self.hasPriority) {
    hashCode = hashCode * 31 + [self.priority hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.description hash];
  }
  if (self.hasLevel) {
    hashCode = hashCode * 31 + [self.level hash];
  }
  if (self.hasPlace) {
    hashCode = hashCode * 31 + [self.place hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  for (GiftProductModel* element in self.giftProductModelsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftProduct_Builder()
@property (retain) GiftProduct* result;
@end

@implementation GiftProduct_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftProduct alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftProduct_Builder*) clear {
  self.result = [[[GiftProduct alloc] init] autorelease];
  return self;
}
- (GiftProduct_Builder*) clone {
  return [GiftProduct builderWithPrototype:result];
}
- (GiftProduct*) defaultInstance {
  return [GiftProduct defaultInstance];
}
- (GiftProduct*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftProduct*) buildPartial {
  GiftProduct* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftProduct_Builder*) mergeFrom:(GiftProduct*) other {
  if (other == [GiftProduct defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasPrior) {
    [self setPrior:other.prior];
  }
  if (other.hasSpecification) {
    [self setSpecification:other.specification];
  }
  if (other.hasPriority) {
    [self setPriority:other.priority];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasPlace) {
    [self setPlace:other.place];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  if (other.giftProductModelsArray.count > 0) {
    if (result.giftProductModelsArray == nil) {
      result.giftProductModelsArray = [[other.giftProductModelsArray copyWithZone:[other.giftProductModelsArray zone]] autorelease];
    } else {
      [result.giftProductModelsArray appendArray:other.giftProductModelsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftProduct_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftProduct_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        GiftProductCategory_Builder* subBuilder = [GiftProductCategory builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setCode:[input readString]];
        break;
      }
      case 42: {
        [self setPrior:[input readString]];
        break;
      }
      case 50: {
        [self setSpecification:[input readString]];
        break;
      }
      case 58: {
        [self setPriority:[input readString]];
        break;
      }
      case 66: {
        [self setDescription:[input readString]];
        break;
      }
      case 74: {
        [self setLevel:[input readString]];
        break;
      }
      case 82: {
        [self setPlace:[input readString]];
        break;
      }
      case 90: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 98: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
      case 106: {
        GiftProductModel_Builder* subBuilder = [GiftProductModel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGiftProductModels:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftProduct_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftProduct_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (GiftProduct_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (GiftProduct_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (GiftProductCategory*) category {
  return result.category;
}
- (GiftProduct_Builder*) setCategory:(GiftProductCategory*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (GiftProduct_Builder*) setCategoryBuilder:(GiftProductCategory_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (GiftProduct_Builder*) mergeCategory:(GiftProductCategory*) value {
  if (result.hasCategory &&
      result.category != [GiftProductCategory defaultInstance]) {
    result.category =
      [[[GiftProductCategory builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (GiftProduct_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [GiftProductCategory defaultInstance];
  return self;
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (NSString*) code {
  return result.code;
}
- (GiftProduct_Builder*) setCode:(NSString*) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (GiftProduct_Builder*) clearCode {
  result.hasCode = NO;
  result.code = @"";
  return self;
}
- (BOOL) hasPrior {
  return result.hasPrior;
}
- (NSString*) prior {
  return result.prior;
}
- (GiftProduct_Builder*) setPrior:(NSString*) value {
  result.hasPrior = YES;
  result.prior = value;
  return self;
}
- (GiftProduct_Builder*) clearPrior {
  result.hasPrior = NO;
  result.prior = @"";
  return self;
}
- (BOOL) hasSpecification {
  return result.hasSpecification;
}
- (NSString*) specification {
  return result.specification;
}
- (GiftProduct_Builder*) setSpecification:(NSString*) value {
  result.hasSpecification = YES;
  result.specification = value;
  return self;
}
- (GiftProduct_Builder*) clearSpecification {
  result.hasSpecification = NO;
  result.specification = @"";
  return self;
}
- (BOOL) hasPriority {
  return result.hasPriority;
}
- (NSString*) priority {
  return result.priority;
}
- (GiftProduct_Builder*) setPriority:(NSString*) value {
  result.hasPriority = YES;
  result.priority = value;
  return self;
}
- (GiftProduct_Builder*) clearPriority {
  result.hasPriority = NO;
  result.priority = @"";
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (GiftProduct_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (GiftProduct_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (NSString*) level {
  return result.level;
}
- (GiftProduct_Builder*) setLevel:(NSString*) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (GiftProduct_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = @"";
  return self;
}
- (BOOL) hasPlace {
  return result.hasPlace;
}
- (NSString*) place {
  return result.place;
}
- (GiftProduct_Builder*) setPlace:(NSString*) value {
  result.hasPlace = YES;
  result.place = value;
  return self;
}
- (GiftProduct_Builder*) clearPlace {
  result.hasPlace = NO;
  result.place = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (GiftProduct_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (GiftProduct_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftProduct_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftProduct_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftProduct_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftProduct_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
- (PBAppendableArray *)giftProductModels {
  return result.giftProductModelsArray;
}
- (GiftProductModel*)giftProductModelsAtIndex:(NSUInteger)index {
  return [result giftProductModelsAtIndex:index];
}
- (GiftProduct_Builder *)addGiftProductModels:(GiftProductModel*)value {
  if (result.giftProductModelsArray == nil) {
    result.giftProductModelsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.giftProductModelsArray addObject:value];
  return self;
}
- (GiftProduct_Builder *)setGiftProductModelsArray:(NSArray *)array {
  result.giftProductModelsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftProduct_Builder *)setGiftProductModelsValues:(const GiftProductModel* *)values count:(NSUInteger)count {
  result.giftProductModelsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftProduct_Builder *)clearGiftProductModels {
  result.giftProductModelsArray = nil;
  return self;
}
@end

@interface GiftProductModel ()
@property int32_t id;
@property (retain) NSString* name;
@property (retain) GiftProduct* giftProduct;
@property Float64 num;
@property Float64 price;
@property (retain) PBAppendableArray * areaArray;
@property (retain) NSString* createDate;
@property (retain) Company* company;
@end

@implementation GiftProductModel

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasGiftProduct {
  return !!hasGiftProduct_;
}
- (void) setHasGiftProduct:(BOOL) value_ {
  hasGiftProduct_ = !!value_;
}
@synthesize giftProduct;
- (BOOL) hasNum {
  return !!hasNum_;
}
- (void) setHasNum:(BOOL) value_ {
  hasNum_ = !!value_;
}
@synthesize num;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value_ {
  hasPrice_ = !!value_;
}
@synthesize price;
@synthesize areaArray;
@dynamic area;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value_ {
  hasCreateDate_ = !!value_;
}
@synthesize createDate;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value_ {
  hasCompany_ = !!value_;
}
@synthesize company;
- (void) dealloc {
  self.name = nil;
  self.giftProduct = nil;
  self.areaArray = nil;
  self.createDate = nil;
  self.company = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.giftProduct = [GiftProduct defaultInstance];
    self.num = 0;
    self.price = 0;
    self.createDate = @"";
    self.company = [Company defaultInstance];
  }
  return self;
}
static GiftProductModel* defaultGiftProductModelInstance = nil;
+ (void) initialize {
  if (self == [GiftProductModel class]) {
    defaultGiftProductModelInstance = [[GiftProductModel alloc] init];
  }
}
+ (GiftProductModel*) defaultInstance {
  return defaultGiftProductModelInstance;
}
- (GiftProductModel*) defaultInstance {
  return defaultGiftProductModelInstance;
}
- (PBArray *)area {
  return areaArray;
}
- (GiftProductArea*)areaAtIndex:(NSUInteger)index {
  return [areaArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (self.hasGiftProduct) {
    if (!self.giftProduct.isInitialized) {
      return NO;
    }
  }
  for (GiftProductArea* element in self.area) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCompany) {
    if (!self.company.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasGiftProduct) {
    [output writeMessage:3 value:self.giftProduct];
  }
  if (self.hasNum) {
    [output writeDouble:4 value:self.num];
  }
  if (self.hasPrice) {
    [output writeDouble:5 value:self.price];
  }
  for (GiftProductArea *element in self.areaArray) {
    [output writeMessage:6 value:element];
  }
  if (self.hasCreateDate) {
    [output writeString:7 value:self.createDate];
  }
  if (self.hasCompany) {
    [output writeMessage:8 value:self.company];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasGiftProduct) {
    size_ += computeMessageSize(3, self.giftProduct);
  }
  if (self.hasNum) {
    size_ += computeDoubleSize(4, self.num);
  }
  if (self.hasPrice) {
    size_ += computeDoubleSize(5, self.price);
  }
  for (GiftProductArea *element in self.areaArray) {
    size_ += computeMessageSize(6, element);
  }
  if (self.hasCreateDate) {
    size_ += computeStringSize(7, self.createDate);
  }
  if (self.hasCompany) {
    size_ += computeMessageSize(8, self.company);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftProductModel*) parseFromData:(NSData*) data {
  return (GiftProductModel*)[[[GiftProductModel builder] mergeFromData:data] build];
}
+ (GiftProductModel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductModel*)[[[GiftProductModel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftProductModel*) parseFromInputStream:(NSInputStream*) input {
  return (GiftProductModel*)[[[GiftProductModel builder] mergeFromInputStream:input] build];
}
+ (GiftProductModel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductModel*)[[[GiftProductModel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProductModel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftProductModel*)[[[GiftProductModel builder] mergeFromCodedInputStream:input] build];
}
+ (GiftProductModel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductModel*)[[[GiftProductModel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProductModel_Builder*) builder {
  return [[[GiftProductModel_Builder alloc] init] autorelease];
}
+ (GiftProductModel_Builder*) builderWithPrototype:(GiftProductModel*) prototype {
  return [[GiftProductModel builder] mergeFrom:prototype];
}
- (GiftProductModel_Builder*) builder {
  return [GiftProductModel builder];
}
- (GiftProductModel_Builder*) toBuilder {
  return [GiftProductModel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasGiftProduct) {
    [output appendFormat:@"%@%@ {\n", indent, @"giftProduct"];
    [self.giftProduct writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"num", [NSNumber numberWithDouble:self.num]];
  }
  if (self.hasPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"price", [NSNumber numberWithDouble:self.price]];
  }
  for (GiftProductArea* element in self.areaArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"area"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCreateDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createDate", self.createDate];
  }
  if (self.hasCompany) {
    [output appendFormat:@"%@%@ {\n", indent, @"company"];
    [self.company writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftProductModel class]]) {
    return NO;
  }
  GiftProductModel *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasGiftProduct == otherMessage.hasGiftProduct &&
      (!self.hasGiftProduct || [self.giftProduct isEqual:otherMessage.giftProduct]) &&
      self.hasNum == otherMessage.hasNum &&
      (!self.hasNum || self.num == otherMessage.num) &&
      self.hasPrice == otherMessage.hasPrice &&
      (!self.hasPrice || self.price == otherMessage.price) &&
      [self.areaArray isEqualToArray:otherMessage.areaArray] &&
      self.hasCreateDate == otherMessage.hasCreateDate &&
      (!self.hasCreateDate || [self.createDate isEqual:otherMessage.createDate]) &&
      self.hasCompany == otherMessage.hasCompany &&
      (!self.hasCompany || [self.company isEqual:otherMessage.company]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasGiftProduct) {
    hashCode = hashCode * 31 + [self.giftProduct hash];
  }
  if (self.hasNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.num] hash];
  }
  if (self.hasPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.price] hash];
  }
  for (GiftProductArea* element in self.areaArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasCreateDate) {
    hashCode = hashCode * 31 + [self.createDate hash];
  }
  if (self.hasCompany) {
    hashCode = hashCode * 31 + [self.company hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftProductModel_Builder()
@property (retain) GiftProductModel* result;
@end

@implementation GiftProductModel_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftProductModel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftProductModel_Builder*) clear {
  self.result = [[[GiftProductModel alloc] init] autorelease];
  return self;
}
- (GiftProductModel_Builder*) clone {
  return [GiftProductModel builderWithPrototype:result];
}
- (GiftProductModel*) defaultInstance {
  return [GiftProductModel defaultInstance];
}
- (GiftProductModel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftProductModel*) buildPartial {
  GiftProductModel* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftProductModel_Builder*) mergeFrom:(GiftProductModel*) other {
  if (other == [GiftProductModel defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasGiftProduct) {
    [self mergeGiftProduct:other.giftProduct];
  }
  if (other.hasNum) {
    [self setNum:other.num];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.areaArray.count > 0) {
    if (result.areaArray == nil) {
      result.areaArray = [[other.areaArray copyWithZone:[other.areaArray zone]] autorelease];
    } else {
      [result.areaArray appendArray:other.areaArray];
    }
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasCompany) {
    [self mergeCompany:other.company];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftProductModel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftProductModel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        GiftProduct_Builder* subBuilder = [GiftProduct builder];
        if (self.hasGiftProduct) {
          [subBuilder mergeFrom:self.giftProduct];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGiftProduct:[subBuilder buildPartial]];
        break;
      }
      case 33: {
        [self setNum:[input readDouble]];
        break;
      }
      case 41: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 50: {
        GiftProductArea_Builder* subBuilder = [GiftProductArea builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addArea:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 66: {
        Company_Builder* subBuilder = [Company builder];
        if (self.hasCompany) {
          [subBuilder mergeFrom:self.company];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCompany:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftProductModel_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftProductModel_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (GiftProductModel_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (GiftProductModel_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasGiftProduct {
  return result.hasGiftProduct;
}
- (GiftProduct*) giftProduct {
  return result.giftProduct;
}
- (GiftProductModel_Builder*) setGiftProduct:(GiftProduct*) value {
  result.hasGiftProduct = YES;
  result.giftProduct = value;
  return self;
}
- (GiftProductModel_Builder*) setGiftProductBuilder:(GiftProduct_Builder*) builderForValue {
  return [self setGiftProduct:[builderForValue build]];
}
- (GiftProductModel_Builder*) mergeGiftProduct:(GiftProduct*) value {
  if (result.hasGiftProduct &&
      result.giftProduct != [GiftProduct defaultInstance]) {
    result.giftProduct =
      [[[GiftProduct builderWithPrototype:result.giftProduct] mergeFrom:value] buildPartial];
  } else {
    result.giftProduct = value;
  }
  result.hasGiftProduct = YES;
  return self;
}
- (GiftProductModel_Builder*) clearGiftProduct {
  result.hasGiftProduct = NO;
  result.giftProduct = [GiftProduct defaultInstance];
  return self;
}
- (BOOL) hasNum {
  return result.hasNum;
}
- (Float64) num {
  return result.num;
}
- (GiftProductModel_Builder*) setNum:(Float64) value {
  result.hasNum = YES;
  result.num = value;
  return self;
}
- (GiftProductModel_Builder*) clearNum {
  result.hasNum = NO;
  result.num = 0;
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (Float64) price {
  return result.price;
}
- (GiftProductModel_Builder*) setPrice:(Float64) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (GiftProductModel_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = 0;
  return self;
}
- (PBAppendableArray *)area {
  return result.areaArray;
}
- (GiftProductArea*)areaAtIndex:(NSUInteger)index {
  return [result areaAtIndex:index];
}
- (GiftProductModel_Builder *)addArea:(GiftProductArea*)value {
  if (result.areaArray == nil) {
    result.areaArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.areaArray addObject:value];
  return self;
}
- (GiftProductModel_Builder *)setAreaArray:(NSArray *)array {
  result.areaArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftProductModel_Builder *)setAreaValues:(const GiftProductArea* *)values count:(NSUInteger)count {
  result.areaArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GiftProductModel_Builder *)clearArea {
  result.areaArray = nil;
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (GiftProductModel_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (GiftProductModel_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (Company*) company {
  return result.company;
}
- (GiftProductModel_Builder*) setCompany:(Company*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (GiftProductModel_Builder*) setCompanyBuilder:(Company_Builder*) builderForValue {
  return [self setCompany:[builderForValue build]];
}
- (GiftProductModel_Builder*) mergeCompany:(Company*) value {
  if (result.hasCompany &&
      result.company != [Company defaultInstance]) {
    result.company =
      [[[Company builderWithPrototype:result.company] mergeFrom:value] buildPartial];
  } else {
    result.company = value;
  }
  result.hasCompany = YES;
  return self;
}
- (GiftProductModel_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = [Company defaultInstance];
  return self;
}
@end

@interface GiftProductArea ()
@property int32_t id;
@property (retain) NSString* provinceId;
@property (retain) NSString* cityId;
@property (retain) NSString* countyId;
@property (retain) NSString* provinceName;
@property (retain) NSString* cityName;
@property (retain) NSString* countyName;
@end

@implementation GiftProductArea

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasProvinceId {
  return !!hasProvinceId_;
}
- (void) setHasProvinceId:(BOOL) value_ {
  hasProvinceId_ = !!value_;
}
@synthesize provinceId;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value_ {
  hasCityId_ = !!value_;
}
@synthesize cityId;
- (BOOL) hasCountyId {
  return !!hasCountyId_;
}
- (void) setHasCountyId:(BOOL) value_ {
  hasCountyId_ = !!value_;
}
@synthesize countyId;
- (BOOL) hasProvinceName {
  return !!hasProvinceName_;
}
- (void) setHasProvinceName:(BOOL) value_ {
  hasProvinceName_ = !!value_;
}
@synthesize provinceName;
- (BOOL) hasCityName {
  return !!hasCityName_;
}
- (void) setHasCityName:(BOOL) value_ {
  hasCityName_ = !!value_;
}
@synthesize cityName;
- (BOOL) hasCountyName {
  return !!hasCountyName_;
}
- (void) setHasCountyName:(BOOL) value_ {
  hasCountyName_ = !!value_;
}
@synthesize countyName;
- (void) dealloc {
  self.provinceId = nil;
  self.cityId = nil;
  self.countyId = nil;
  self.provinceName = nil;
  self.cityName = nil;
  self.countyName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.provinceId = @"";
    self.cityId = @"";
    self.countyId = @"";
    self.provinceName = @"";
    self.cityName = @"";
    self.countyName = @"";
  }
  return self;
}
static GiftProductArea* defaultGiftProductAreaInstance = nil;
+ (void) initialize {
  if (self == [GiftProductArea class]) {
    defaultGiftProductAreaInstance = [[GiftProductArea alloc] init];
  }
}
+ (GiftProductArea*) defaultInstance {
  return defaultGiftProductAreaInstance;
}
- (GiftProductArea*) defaultInstance {
  return defaultGiftProductAreaInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasProvinceId) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasCountyId) {
    return NO;
  }
  if (!self.hasProvinceName) {
    return NO;
  }
  if (!self.hasCityName) {
    return NO;
  }
  if (!self.hasCountyName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasProvinceId) {
    [output writeString:2 value:self.provinceId];
  }
  if (self.hasCityId) {
    [output writeString:3 value:self.cityId];
  }
  if (self.hasCountyId) {
    [output writeString:4 value:self.countyId];
  }
  if (self.hasProvinceName) {
    [output writeString:5 value:self.provinceName];
  }
  if (self.hasCityName) {
    [output writeString:6 value:self.cityName];
  }
  if (self.hasCountyName) {
    [output writeString:7 value:self.countyName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt32Size(1, self.id);
  }
  if (self.hasProvinceId) {
    size_ += computeStringSize(2, self.provinceId);
  }
  if (self.hasCityId) {
    size_ += computeStringSize(3, self.cityId);
  }
  if (self.hasCountyId) {
    size_ += computeStringSize(4, self.countyId);
  }
  if (self.hasProvinceName) {
    size_ += computeStringSize(5, self.provinceName);
  }
  if (self.hasCityName) {
    size_ += computeStringSize(6, self.cityName);
  }
  if (self.hasCountyName) {
    size_ += computeStringSize(7, self.countyName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftProductArea*) parseFromData:(NSData*) data {
  return (GiftProductArea*)[[[GiftProductArea builder] mergeFromData:data] build];
}
+ (GiftProductArea*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductArea*)[[[GiftProductArea builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftProductArea*) parseFromInputStream:(NSInputStream*) input {
  return (GiftProductArea*)[[[GiftProductArea builder] mergeFromInputStream:input] build];
}
+ (GiftProductArea*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductArea*)[[[GiftProductArea builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProductArea*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftProductArea*)[[[GiftProductArea builder] mergeFromCodedInputStream:input] build];
}
+ (GiftProductArea*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProductArea*)[[[GiftProductArea builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProductArea_Builder*) builder {
  return [[[GiftProductArea_Builder alloc] init] autorelease];
}
+ (GiftProductArea_Builder*) builderWithPrototype:(GiftProductArea*) prototype {
  return [[GiftProductArea builder] mergeFrom:prototype];
}
- (GiftProductArea_Builder*) builder {
  return [GiftProductArea builder];
}
- (GiftProductArea_Builder*) toBuilder {
  return [GiftProductArea builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasProvinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceId", self.provinceId];
  }
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", self.cityId];
  }
  if (self.hasCountyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"countyId", self.countyId];
  }
  if (self.hasProvinceName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceName", self.provinceName];
  }
  if (self.hasCityName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityName", self.cityName];
  }
  if (self.hasCountyName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"countyName", self.countyName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftProductArea class]]) {
    return NO;
  }
  GiftProductArea *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasProvinceId == otherMessage.hasProvinceId &&
      (!self.hasProvinceId || [self.provinceId isEqual:otherMessage.provinceId]) &&
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || [self.cityId isEqual:otherMessage.cityId]) &&
      self.hasCountyId == otherMessage.hasCountyId &&
      (!self.hasCountyId || [self.countyId isEqual:otherMessage.countyId]) &&
      self.hasProvinceName == otherMessage.hasProvinceName &&
      (!self.hasProvinceName || [self.provinceName isEqual:otherMessage.provinceName]) &&
      self.hasCityName == otherMessage.hasCityName &&
      (!self.hasCityName || [self.cityName isEqual:otherMessage.cityName]) &&
      self.hasCountyName == otherMessage.hasCountyName &&
      (!self.hasCountyName || [self.countyName isEqual:otherMessage.countyName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasProvinceId) {
    hashCode = hashCode * 31 + [self.provinceId hash];
  }
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [self.cityId hash];
  }
  if (self.hasCountyId) {
    hashCode = hashCode * 31 + [self.countyId hash];
  }
  if (self.hasProvinceName) {
    hashCode = hashCode * 31 + [self.provinceName hash];
  }
  if (self.hasCityName) {
    hashCode = hashCode * 31 + [self.cityName hash];
  }
  if (self.hasCountyName) {
    hashCode = hashCode * 31 + [self.countyName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiftProductArea_Builder()
@property (retain) GiftProductArea* result;
@end

@implementation GiftProductArea_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GiftProductArea alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftProductArea_Builder*) clear {
  self.result = [[[GiftProductArea alloc] init] autorelease];
  return self;
}
- (GiftProductArea_Builder*) clone {
  return [GiftProductArea builderWithPrototype:result];
}
- (GiftProductArea*) defaultInstance {
  return [GiftProductArea defaultInstance];
}
- (GiftProductArea*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftProductArea*) buildPartial {
  GiftProductArea* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GiftProductArea_Builder*) mergeFrom:(GiftProductArea*) other {
  if (other == [GiftProductArea defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasProvinceId) {
    [self setProvinceId:other.provinceId];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasCountyId) {
    [self setCountyId:other.countyId];
  }
  if (other.hasProvinceName) {
    [self setProvinceName:other.provinceName];
  }
  if (other.hasCityName) {
    [self setCityName:other.cityName];
  }
  if (other.hasCountyName) {
    [self setCountyName:other.countyName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftProductArea_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftProductArea_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setProvinceId:[input readString]];
        break;
      }
      case 26: {
        [self setCityId:[input readString]];
        break;
      }
      case 34: {
        [self setCountyId:[input readString]];
        break;
      }
      case 42: {
        [self setProvinceName:[input readString]];
        break;
      }
      case 50: {
        [self setCityName:[input readString]];
        break;
      }
      case 58: {
        [self setCountyName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (GiftProductArea_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (GiftProductArea_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasProvinceId {
  return result.hasProvinceId;
}
- (NSString*) provinceId {
  return result.provinceId;
}
- (GiftProductArea_Builder*) setProvinceId:(NSString*) value {
  result.hasProvinceId = YES;
  result.provinceId = value;
  return self;
}
- (GiftProductArea_Builder*) clearProvinceId {
  result.hasProvinceId = NO;
  result.provinceId = @"";
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (NSString*) cityId {
  return result.cityId;
}
- (GiftProductArea_Builder*) setCityId:(NSString*) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (GiftProductArea_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = @"";
  return self;
}
- (BOOL) hasCountyId {
  return result.hasCountyId;
}
- (NSString*) countyId {
  return result.countyId;
}
- (GiftProductArea_Builder*) setCountyId:(NSString*) value {
  result.hasCountyId = YES;
  result.countyId = value;
  return self;
}
- (GiftProductArea_Builder*) clearCountyId {
  result.hasCountyId = NO;
  result.countyId = @"";
  return self;
}
- (BOOL) hasProvinceName {
  return result.hasProvinceName;
}
- (NSString*) provinceName {
  return result.provinceName;
}
- (GiftProductArea_Builder*) setProvinceName:(NSString*) value {
  result.hasProvinceName = YES;
  result.provinceName = value;
  return self;
}
- (GiftProductArea_Builder*) clearProvinceName {
  result.hasProvinceName = NO;
  result.provinceName = @"";
  return self;
}
- (BOOL) hasCityName {
  return result.hasCityName;
}
- (NSString*) cityName {
  return result.cityName;
}
- (GiftProductArea_Builder*) setCityName:(NSString*) value {
  result.hasCityName = YES;
  result.cityName = value;
  return self;
}
- (GiftProductArea_Builder*) clearCityName {
  result.hasCityName = NO;
  result.cityName = @"";
  return self;
}
- (BOOL) hasCountyName {
  return result.hasCountyName;
}
- (NSString*) countyName {
  return result.countyName;
}
- (GiftProductArea_Builder*) setCountyName:(NSString*) value {
  result.hasCountyName = YES;
  result.countyName = value;
  return self;
}
- (GiftProductArea_Builder*) clearCountyName {
  result.hasCountyName = NO;
  result.countyName = @"";
  return self;
}
@end

